###
## AUTO-GENERATED from homeassistant/motion/sensor.webcam.yaml.tmpl
##
## - MOTION_GROUP: ${MOTION_GROUP}
## - MOTION_CLIENT: ${MOTION_CLIENT}
## - MOTION_CAMERA: ${MOTION_CAMERA}
###

###
# status
###

- platform: template
  sensors:
    motion_status_camera_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} status
      value_template: >-
        {% set status = states('binary_sensor.motion_status_camera_${MOTION_CAMERA}') %}
        {% if status == 'on' %}
          {% set status = 'found' %}
        {% elif status == 'off' %}
          {% set status = 'lost' %}
        {% else %}
          {% set status = null %}
        {% endif %}
        {{- status -}}

- platform: template
  sensors:
    motion_camera_end_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_end_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_annotated_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_annotated_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_composite_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_composite_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_animated_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_animated_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_animated_mask_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_animated_mask_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_face_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_face_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_alpr_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_alpr_${MOTION_CAMERA}.last_updated) }}

###
# lost/found
###


## counters

# status counter
- platform: template
  sensors:
    motion_status_camera_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} status counter
      unit_of_measurement: count
      value_template: >-
        {{ states('sensor.motion_status_camera_found_counter_${MOTION_CAMERA}')|int - states('sensor.motion_status_camera_lost_counter_${MOTION_CAMERA}')|int }}

- platform: template
  sensors:
    motion_status_camera_counter_${MOTION_CAMERA}_mean:
      friendly_name: ${MOTION_CAMERA} status counter mean
      unit_of_measurement: count
      value_template: >-
        {% if states('sensor.motion_status_camera_counter_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_status_camera_counter_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_status_camera_counter_min_value_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} status counter min
      unit_of_measurement: count
      value_template: >-
        {% if states('sensor.motion_status_camera_counter_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_status_camera_counter_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_status_camera_counter_max_value_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} status counter max
      unit_of_measurement: count
      value_template: >-
        {% if states('sensor.motion_status_camera_counter_statistics') != 'unknown' %}
          {{ states.sensor.motion_status_camera_counter_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_status_camera_counter_stdev_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} status counter stdev
      unit_of_measurement: count
      value_template: >
        {% if states('sensor.motion_status_camera_counter_statistics') != 'unknown' %}
          {{ states.sensor.motion_status_camera_counter_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_status_camera_counter_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_status_camera_counter_${MOTION_CAMERA}
  sampling_size: 100
  max_age:
    hours: 72

- platform: template
  sensors:
    motion_status_camera_found_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} found counter
      unit_of_measurement: count
      value_template: >
        {% if states('counter.motion_status_camera_found_counter_${MOTION_CAMERA}') != 'unknown' %}
          {{ states('counter.motion_status_camera_found_counter_${MOTION_CAMERA}')|int }}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_status_camera_lost_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} lost counter
      unit_of_measurement: count
      value_template: >
        {% if states('counter.motion_status_camera_lost_counter_${MOTION_CAMERA}') != 'unknown' %}
          {{ states('counter.motion_status_camera_lost_counter_${MOTION_CAMERA}')|int }}
        {%- else -%}null{%- endif -%}

## found

- platform: mqtt
  name: motion_status_camera_found_${MOTION_CAMERA}
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/status/found'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/status/found'
  expire_after: !secret motion-expire-after
  force_update: true
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

# attributes (date, when)

- platform: template
  sensors:
    motion_status_camera_found_date_${MOTION_CAMERA}:
      unit_of_measurement: seconds
      value_template: >-
        {% if state_attr('sensor.motion_status_camera_found_${MOTION_CAMERA}','date')|lower != 'none'
              and states.sensor.motion_status_camera_found_${MOTION_CAMERA}.attributes.date|int > 0 %}
          {{ states.sensor.motion_status_camera_found_${MOTION_CAMERA}.attributes.date|int }}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_status_camera_found_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} found at
      value_template: >-
        {% if states.sensor.motion_status_camera_found_date_${MOTION_CAMERA}|lower != 'none'
              and states.sensor.motion_status_camera_found_date_${MOTION_CAMERA}.state|int > 0 %}
          {% set s = states.sensor.motion_status_camera_found_date_${MOTION_CAMERA}.state|int %}
          {% set n = utcnow().timestamp() %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}; {{ (n|int-s)|int }} lag
        {% else %}null{% endif %} 

## counter
#- platform: template
#  sensors:
#    motion_status_camera_found_counter_${MOTION_CAMERA}_mean:
#      friendly_name: status_camera_found counter ${MOTION_CAMERA} avg
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_status_camera_found_counter_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_status_camera_found_counter_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_status_camera_found_counter_min_value_${MOTION_CAMERA}:
#      friendly_name: status_camera_found counter min
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_status_camera_found_counter_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_status_camera_found_counter_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_status_camera_found_counter_max_value_${MOTION_CAMERA}:
#      friendly_name: status_camera_found counter max
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_status_camera_found_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_status_camera_found_counter_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_status_camera_found_counter_stdev_${MOTION_CAMERA}:
#      friendly_name: status_camera_found counter stdev
#      unit_of_measurement: count
#      value_template: >
#        {% if states('sensor.motion_status_camera_found_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_status_camera_found_counter_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_status_camera_found_counter_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_status_camera_found_counter_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## lost

- platform: mqtt
  name: motion_status_camera_lost_${MOTION_CAMERA}
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/status/lost'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/status/lost'
  expire_after: !secret motion-expire-after
  force_update: true
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

# dates
- platform: template
  sensors:
    motion_status_camera_lost_date_${MOTION_CAMERA}:
      unit_of_measurement: seconds
      value_template: >-
        {% if state_attr('sensor.motion_status_camera_lost_${MOTION_CAMERA}','date')|lower != 'none'
              and states.sensor.motion_status_camera_lost_${MOTION_CAMERA}.attributes.date|int > 0 %}
          {{ states.sensor.motion_status_camera_lost_${MOTION_CAMERA}.attributes.date|int }}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_status_camera_lost_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} lost at
      value_template: >-
        {% if states.sensor.motion_status_camera_lost_date_${MOTION_CAMERA}|lower != 'none'
              and states.sensor.motion_status_camera_lost_date_${MOTION_CAMERA}.state|int > 0 %}
          {% set s = states.sensor.motion_status_camera_lost_date_${MOTION_CAMERA}.state|int %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}null{% endif %} 

## counter
#- platform: template
#  sensors:
#    motion_status_camera_lost_counter_${MOTION_CAMERA}_mean:
#      friendly_name: status_camera_lost counter ${MOTION_CAMERA} avg
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_status_camera_lost_counter_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_status_camera_lost_counter_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_status_camera_lost_counter_min_value_${MOTION_CAMERA}:
#      friendly_name: status_camera_lost counter min
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_status_camera_lost_counter_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_status_camera_lost_counter_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_status_camera_lost_counter_max_value_${MOTION_CAMERA}:
#      friendly_name: status_camera_lost counter max
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_status_camera_lost_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_status_camera_lost_counter_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_status_camera_lost_counter_stdev_${MOTION_CAMERA}:
#      friendly_name: status_camera_lost counter stdev
#      unit_of_measurement: count
#      value_template: >
#        {% if states('sensor.motion_status_camera_lost_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_status_camera_lost_counter_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_status_camera_lost_counter_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_status_camera_lost_counter_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

###
# start event
###

- platform: mqtt
  name: motion_event_start_${MOTION_CAMERA}
  qos: 1
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/start'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/start'
  expire_after: !secret motion-expire-after
  force_update: true
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

###
# image event
###

#- platform: mqtt
#  name: motion_event_image_${MOTION_CAMERA}
#  qos: 1
#  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/image'
#  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/image'
#  expire_after: !secret motion-expire-after
#  force_update: true
#  value_template: >
#    {% if value_json is defined %}True{% else %}False{% endif %}

###
# end event
###

- platform: mqtt
  name: motion_event_end_${MOTION_CAMERA}
  qos: 2
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/end'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/end'
  expire_after: !secret motion-end-expire-after
  force_update: !secret motion-end-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## human readable
- platform: template
  sensors:
    motion_end_status_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} motion end 
      value_template: >-
        {% if states('binary_sensor.motion_end_${MOTION_CAMERA}')|lower == 'on' %}
          {%- set e = states('sensor.motion_event_end_${MOTION_CAMERA}') -%}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            Counter: {{ states('counter.motion_end_counter_${MOTION_CAMERA}') -}};
            {%- set device = state_attr('sensor.motion_event_end_${MOTION_CAMERA}','device') -%}
            {%- set camera = state_attr('sensor.motion_event_end_${MOTION_CAMERA}','camera') -%}
            {%- set event = state_attr('sensor.motion_event_end_${MOTION_CAMERA}','event') -%}
            {%- set end = state_attr('sensor.motion_event_end_${MOTION_CAMERA}','end') -%}
            {%- set elapsed = state_attr('sensor.motion_event_end_${MOTION_CAMERA}','elapsed')|int -%}
            {%- set when = end|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -%}
            {%- if elapsed > 0 %} Duration: {{ elapsed }} seconds{%- else -%}None{%- endif -%};
            from: {{ device -}}/{{- camera -}}/{{- event -}}; at: {{ when -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_end_status_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_camera_device_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} device
      value_template: >-
        {% if states('binary_sensor.motion_end_${MOTION_CAMERA}')|lower == 'on' %}
          {%- set e = states('sensor.motion_event_end_${MOTION_CAMERA}') -%}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {{ state_attr('sensor.motion_event_end_${MOTION_CAMERA}','device') }}
          {% else %}null{% endif %}
        {% else %}
          {% set s = states('sensor.motion_camera_device_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## counting
- platform: template
  sensors:
    motion_end_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} end counter
      unit_of_measurement: count
      value_template: >-
        {{ states('counter.motion_end_counter_${MOTION_CAMERA}')|int }}

## timing
- platform: template
  sensors:
    motion_end_date_${MOTION_CAMERA}:
      unit_of_measurement: seconds
      value_template: >-
        {% if states.sensor.motion_event_end_${MOTION_CAMERA}|lower != 'none' 
              and state_attr('sensor.motion_event_end_${MOTION_CAMERA}','end')|lower != 'none' %}
          {% set date = states.sensor.motion_event_end_${MOTION_CAMERA}.attributes.end|int %}
          {% if date > 0 %}{{ date }}{% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_end_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} end
      value_template: >-
        {% set s = states('sensor.motion_end_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

- platform: template
  sensors:
    motion_end_ago_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} end ago
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_end_date_${MOTION_CAMERA}')|float %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|float - s %}
          {% if s|int <  86400 %}{{ s|float }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## elapsed
- platform: template
  sensors:
    motion_end_elapsed_${MOTION_CAMERA}:
      value_template: >
        {% if states.sensor.motion_event_end_${MOTION_CAMERA}|lower != 'none'
              and state_attr('sensor.motion_event_end_${MOTION_CAMERA}','elapsed')|lower != 'none' %}
          {{ states.sensor.motion_event_end_${MOTION_CAMERA}.attributes.elapsed }}
        {% else %}null{% endif %}

###
## annotated
###

## event_annotated
- platform: mqtt
  name: motion_event_annotated_${MOTION_CAMERA}
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/end/+'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/end/+'
  expire_after: !secret motion-annotated-expire-after
  force_update: !secret motion-annotated-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## status
- platform: template
  sensors:
    motion_annotated_status_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated status
      value_template: >-
        {% if is_state('binary_sensor.motion_annotated_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_annotated_expired_${MOTION_CAMERA}','off') %}
          {% set e = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected')|map(attribute='entity')|list %}
            {% set count = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','count') %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            ANNOTATED: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_annotated_counter_${MOTION_CAMERA}') -}}/{{- states('sensor.motion_annotated_counter_${MOTION_CAMERA}') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_annotated_status_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count
- platform: template
  sensors:
    motion_annotated_count_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated count
      unit_of_measurement: entities
      value_template: >
        {% if is_state('binary_sensor.motion_annotated_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_annotated_expired_${MOTION_CAMERA}','off') %}
          {% set count = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','count') %}
          {% if count is not none and count|lower != 'unknown' and count != 'null' %}
            {{ count|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## count_entity
- platform: template
  sensors:
    motion_annotated_count_entity_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated count entity
      unit_of_measurement: entities
      value_template: >-
        {% if is_state('binary_sensor.motion_annotated_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_annotated_expired_${MOTION_CAMERA}','off') %}
          {% set detected = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected') %}
          {% if detected is not none and detected|lower != 'unknown' and detected != 'null' %}
            {% set count = detected|selectattr('entity','==',states('sensor.motion_detect_entity_${MOTION_CAMERA}'))|map(attribute='count')|sum %}
            {% if count is not none and count|lower != 'unknown' and count != 'null' %}
              {{ count|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## counts
- platform: template
  sensors:
    motion_annotated_counts_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated counts
      value_template: >-
        {% set detected = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected') %}
        {% if detected is not none and detected|lower != 'unknown' and detected|length > 0  %}
          {{ detected|map(attribute='count')|list }}
        {% else %}null{% endif %}

## list
- platform: template
  sensors:
    motion_annotated_list_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated entity list
      value_template: >-
        {% set detected = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected') %}
        {% if detected is not none and detected|lower != 'unknown' and detected|length > 0 %}
          {{ detected|map(attribute='entity')|list }}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_annotated_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated counter
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_annotated_counter_${MOTION_CAMERA}')|int }}

## date
- platform: template
  sensors:
    motion_annotated_date_${MOTION_CAMERA}:
      unit_of_measurement: seconds
      value_template: >-
        {% if is_state('binary_sensor.motion_annotated_${MOTION_CAMERA}','on') %}
          {% set e = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if e is mapping %}
            {% set s = e.end %}
            {% if s is not none and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
              {{ s|int }}
            {%- else -%}null{%- endif -%}
          {%- else -%}null{%- endif -%}
        {% else %}
          {% set s = states('sensor.motion_annotated_date_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_annotated_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated when
      value_template: >-
        {% set s = states('sensor.motion_annotated_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## elapsed
- platform: template
  sensors:
    motion_annotated_elapsed_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated elapsed
      unit_of_measurement: seconds
      value_template: >
        {% set e = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
        {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
          {% set s = e.elapsed %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

# delay
- platform: template
  sensors:
    motion_annotated_delay_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated delay 
      unit_of_measurement: seconds
      value_template: >
        {% set s = states('sensor.motion_annotated_date_${MOTION_CAMERA}') %}
        {% if s is not none and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
          {{ utcnow().timestamp()|int - s|int }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_annotated_delay_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} delay avg
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_annotated_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_annotated_delay_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_delay_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} delay min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_annotated_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_annotated_delay_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_delay_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} delay max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_annotated_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_annotated_delay_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_delay_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} delay stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_annotated_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_annotated_delay_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_annotated_delay_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_annotated_delay_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## ago

- platform: template
  sensors:
    motion_annotated_ago_relative_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} annotated ago relative'
      icon_template: 'mdi:eye'
      value_template: >
        {% set s = states('sensor.motion_annotated_ago_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_annotated_ago_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated ago
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_annotated_date_${MOTION_CAMERA}')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_annotated_ago_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} annotated ago avg
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} annotated min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} annotated max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} annotated stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_ago_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} annotated change
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_annotated_ago_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_annotated_ago_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_annotated_ago_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## percent
- platform: template
  sensors:
    motion_annotated_percent_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} annotated percent
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_annotated_counter_${MOTION_CAMERA}')|int > 0 and states('sensor.motion_end_counter_${MOTION_CAMERA}')|int > 0 %}
          {% set value = states.sensor.motion_annotated_counter_${MOTION_CAMERA}.state|int / states.sensor.motion_end_counter_${MOTION_CAMERA}.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_annotated_percent_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} annotated percent avg
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_annotated_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_annotated_percent_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_percent_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} annotated percent min
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_annotated_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_annotated_percent_${MOTION_CAMERA}_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_percent_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} annotated percent max
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_annotated_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_annotated_percent_${MOTION_CAMERA}_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_annotated_percent_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} annotated percent stdev
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_annotated_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_annotated_percent_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_annotated_percent_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_annotated_percent_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

###
## detected
###

- platform: template
  sensors:
    motion_detected_status_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected status
      value_template: >-
        {% if is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') %}
          {% set e = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected')|map(attribute='entity')|list %}
            {% set count = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','count') %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            {{ count }} entities: {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_detected_counter_${MOTION_CAMERA}') -}}/{{- states('sensor.motion_detected_counter_${MOTION_CAMERA}') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_detected_status_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count_entity
- platform: template
  sensors:
    motion_detected_count_entity_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} count entity
      value_template: >-
        {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected')|selectattr('entity','==',states('sensor.motion_detect_entity_${MOTION_CAMERA}'))|map(attribute='count')|sum %}
        {% if s is not none and s|lower != 'unknown' and s != 'null' %}
          {{ s|int }}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_detected_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected counter
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_detected_counter_${MOTION_CAMERA}')|int }}

## date
- platform: template
  sensors:
    motion_detected_date_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected date
      unit_of_measurement: seconds
      value_template: >-
        {% if is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') %}
          {% set e = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if e is mapping %}
            {% set s = e.end %}
            {% if s is not none and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
              {{ s|int }}
            {%- else -%}null{%- endif -%}
          {%- else -%}null{%- endif -%}
        {% else %}
          {% set s = states('sensor.motion_detected_date_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_detected_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected when
      value_template: >-
        {% set s = states('sensor.motion_detected_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## counts
- platform: template
  sensors:
    motion_detected_counts_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected counts
      value_template: >-
        {% if is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_detected_expired_${MOTION_CAMERA}','off') %}
          {{ states('sensor.motion_annotated_counts_${MOTION_CAMERA}') }}
        {%- else -%}null{%- endif -%}

## list
- platform: template
  sensors:
    motion_detected_list_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected list
      value_template: >-
        {% if is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected') %}
          {% if s is not none and s|lower != 'unknown' and s|length > 0 %}
            {% set p = s|map(attribute='entity')|list %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_list_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_detected_ago_relative_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} detected ago relative'
      icon_template: 'mdi:eye'
      value_template: >
        {% set s = states('sensor.motion_detected_ago_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_detected_ago_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected ago
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_detected_date_${MOTION_CAMERA}')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_detected_ago_${MOTION_CAMERA}_mean:
      friendly_name: ${MOTION_CAMERA} detected ago avg
      unit_of_measurement: seconds
      value_template: >-
        {% if states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
          {% if states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics.state|int is number %}
            {{ states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics.state|float }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}
#    motion_detected_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} detected ago min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} detected ago max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} detected ago stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_ago_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} detected ago change
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_ago_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_detected_ago_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_ago_${MOTION_CAMERA}
  sampling_size: 100
  max_age:
    hours: 72

# count
- platform: template
  sensors:
    motion_detected_count_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected count
      unit_of_measurement: entities
      value_template: >
        {% if is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_detected_expired_${MOTION_CAMERA}','off') %}
          {% set s = states('sensor.motion_annotated_count_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_detected_count_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} detected avg
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_count_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_count_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} detected min
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_count_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_count_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} detected max
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_count_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_count_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} detected stdev
#      unit_of_measurement: entities
#      value_template: >
#        {% if states('sensor.motion_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_count_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_detected_count_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_detected_count_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

# percent
- platform: template
  sensors:
    motion_detected_percent_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detected percent
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_detected_counter_${MOTION_CAMERA}')|int > 0 and states('sensor.motion_annotated_counter_${MOTION_CAMERA}')|int > 0 %}
          {% set value = states.sensor.motion_detected_counter_${MOTION_CAMERA}.state|int / states.sensor.motion_annotated_counter_${MOTION_CAMERA}.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_detected_percent_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} detected avg
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_percent_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_percent_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} detected min
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_percent_${MOTION_CAMERA}_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_percent_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} detected max
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_percent_${MOTION_CAMERA}_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_percent_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} detected stdev
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_percent_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_detected_percent_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_detected_percent_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

###
## detected_entity
###

- platform: template
  sensors:
    motion_detected_entity_status_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} DE status
      value_template: >-
        {% if is_state('binary_sensor.motion_detected_entity_${MOTION_CAMERA}','on') %}
          {% set e = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = states('sensor.motion_detect_entity_${MOTION_CAMERA}') %}
            {% set count = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected')|selectattr('entity','==',what)|map(attribute='count')|sum|int %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_detected_entity_counter_${MOTION_CAMERA}') -}}/{{- states('sensor.motion_detected_entity_counter_${MOTION_CAMERA}') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_detected_entity_status_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detect_entity_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} detect entity
      icon_template: 'mdi:adjust'
      value_template: >-
        {% if states.input_select.motion_detect_entity_${MOTION_CAMERA} is defined %}
          {{ states.input_select.motion_detect_entity_${MOTION_CAMERA}.state }}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_detected_entity_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} DE counter
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_detected_entity_counter_${MOTION_CAMERA}')|int }}

## date
- platform: template
  sensors:
    motion_detected_entity_date_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} DE date
      unit_of_measurement: seconds
      value_template: >-
        {% if is_state('binary_sensor.motion_detected_entity_${MOTION_CAMERA}','on') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.end %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_entity_date_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when - human readable
- platform: template
  sensors:
    motion_detected_entity_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} DE when
      value_template: >-
        {% set s = states('sensor.motion_detected_entity_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## ago

- platform: template
  sensors:
    motion_detected_entity_ago_relative_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} entity ago relative'
      icon_template: 'mdi:eye'
      value_template: >
        {% set s = states('sensor.motion_detected_entity_ago_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_detected_entity_ago_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} DE ago
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_detected_entity_date_${MOTION_CAMERA}')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{% else %}null{% endif %}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_detected_entity_ago_${MOTION_CAMERA}_mean:
      friendly_name: ${MOTION_CAMERA} detected_entity ago avg
      unit_of_measurement: seconds
      value_template: >-
        {% if states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
          {% if states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics.state|int is number %}
            {{ states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics.state|float }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}
#    motion_detected_entity_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} detected_entity ago min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} detected_entity ago max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} detected_entity ago stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_ago_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} detected_entity ago change
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_entity_ago_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_detected_entity_ago_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_entity_ago_${MOTION_CAMERA}
  sampling_size: 100
  max_age:
    hours: 72

## count
- platform: template
  sensors:
    motion_detected_entity_count_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} DE count
      unit_of_measurement: entities
      value_template: >
        {% if is_state('binary_sensor.motion_detected_entity_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_detected_entity_expired_${MOTION_CAMERA}','off') %}
          {% set s = states('sensor.motion_annotated_count_entity_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_detected_entity_count_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} detected_entity avg
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_count_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} detected_entity min
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_count_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} detected_entity max
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_count_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} detected_entity stdev
#      unit_of_measurement: entities
#      value_template: >
#        {% if states('sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_count_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} detected_entity change
#      unit_of_measurement: entities
#      value_template: >
#        {% if states('sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_count_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_detected_entity_count_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_detected_entity_count_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## percent
- platform: template
  sensors:
    motion_detected_entity_percent_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} DE %
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_detected_entity_counter_${MOTION_CAMERA}')|int > 0 and states('sensor.motion_annotated_counter_${MOTION_CAMERA}')|int > 0 %}
          {% set value = states('sensor.motion_detected_entity_counter_${MOTION_CAMERA}')|int / states('sensor.motion_annotated_counter_${MOTION_CAMERA}')|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_detected_entity_percent_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} detected_entity avg
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_percent_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_percent_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} detected_entity min
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_percent_${MOTION_CAMERA}_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_percent_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} detected_entity max
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_percent_${MOTION_CAMERA}_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_percent_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} detected_entity stdev
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_detected_entity_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_percent_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_detected_entity_percent_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_detected_entity_percent_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

###
## complete
###

#- platform: template
#  sensors:
#    motion_complete_${MOTION_CAMERA}:
#      unit_of_measurement: seconds
#      friendly_name: ${MOTION_CAMERA} complete
#      value_template: >
#        {% set c = as_timestamp(states.camera.motion_event_annotated_${MOTION_CAMERA}.last_updated) %}
#        {% set s = as_timestamp(states.sensor.motion_event_annotated_${MOTION_CAMERA}.last_updated) %}
#        {{  c|float - s|float }}
#
#- platform: template
#  sensors:
#    motion_detected_entity_complete_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} complete avg
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_complete_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_complete_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_complete_${MOTION_CAMERA}_min:
#      friendly_name: ${MOTION_CAMERA} complete min
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_complete_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_complete_${MOTION_CAMERA}_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_complete_${MOTION_CAMERA}_max:
#      friendly_name: ${MOTION_CAMERA} complete max
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_detected_entity_complete_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_complete_${MOTION_CAMERA}_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_entity_complete_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} complete stdev
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_detected_entity_complete_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_entity_complete_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_detected_entity_complete_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_detected_entity_complete_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

###
## person
###

# array of person count
- platform: template
  sensors:
    motion_detected_person_${MOTION_CAMERA}:
      icon_template: 'mdi:counter'
      value_template: >-
        {% set options = state_attr('input_select.motion_detect_person_${MOTION_CAMERA}','options') %}
        {% if options is not none and options|lower != 'unknown' and options|length > 0 %}
          {% set array = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','results') %}
          {% if array is not none and array|lower != 'unknown' and array|length > 0 %}
            {% for results in array %}
              {%- if loop.first -%}[{%- else -%},{%- endif -%}
              {% if results.entity in options and results.confidence|int >= states('sensor.motion_detected_person_threshold')|int %}
                1
              {% else %}
                0
              {% endif %}
              {%- if loop.last -%}]{%- endif -%}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## sensor from counter

- platform: template
  sensors:
    motion_detected_person_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} person counter
      value_template: >
        {{ states('counter.motion_detected_person_counter_${MOTION_CAMERA}') }}

## TODAY

- platform: history_stats
  name: motion_today_person_ratio_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_person_${MOTION_CAMERA}
  state: 'on'
  type: ratio
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_today_person_counter_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_person_${MOTION_CAMERA}
  state: 'on'
  type: count
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_today_person_time_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_person_${MOTION_CAMERA}
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: template
  sensors:
    motion_detected_person_ratio_today_${MOTION_CAMERA}:
      friendly_name: Today person ratio
      unit_of_measurement: '%'
      icon_template: 'mdi:percent'
      value_template: >
        {{ states('sensor.motion_today_person_ratio_${MOTION_CAMERA}') }}

- platform: template
  sensors:
    motion_detected_person_counter_today_${MOTION_CAMERA}:
      friendly_name: Today person counter
      unit_of_measurement: 'events'
      icon_template: 'mdi:counter'
      value_template: >-
        {{ states('sensor.motion_today_person_counter_${MOTION_CAMERA}')|int }}

- platform: template
  sensors:
    motion_detected_person_time_today_${MOTION_CAMERA}:
      friendly_name: Today person time
      unit_of_measurement: 'hours'
      icon_template: 'mdi:timer-outline'
      value_template: >
        {{ states('sensor.motion_today_person_time_${MOTION_CAMERA}')|float }}

- platform: template
  sensors:
    motion_detected_person_status_today_${MOTION_CAMERA}:
      friendly_name: Today person
      icon_template: 'mdi:account'
      value_template: >-
        {% set c = states('sensor.motion_detected_person_counter_today_${MOTION_CAMERA}') %}
        {% set r = states('sensor.motion_detected_person_ratio_today_${MOTION_CAMERA}') %}
        {% set t = states('sensor.motion_detected_person_time_today_${MOTION_CAMERA}') %}
        {% if c|lower != 'unknown' and r|lower != 'unknown' and t|lower != 'unknown' %}
          {{ c -}}; {{ t }} hours; {{ r }}%
        {% else %}No persons detected today{% endif %}

- platform: template
  sensors:
    motion_detected_person_event_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} person event
      value_template: >
        {% if is_state('binary_sensor.motion_detected_person_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_person_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.event %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_person_event_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_person_camera_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} person camera
      icon_template: 'mdi:camera'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_person_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_person_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.camera %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_person_camera_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_person_elapsed_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} person elapsed
      icon_template: 'mdi:timer'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_person_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_person_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.elapsed %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_person_elapsed_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_person_date_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} person date
      value_template: >
        {% if is_state('binary_sensor.motion_detected_person_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_person_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.end %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_person_date_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_person_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} person when
      icon_template: 'mdi:calendar-clock'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_person_${MOTION_CAMERA}','on') %}
          {% set s = states('sensor.motion_detected_person_date_${MOTION_CAMERA}') %}
          {% if s|int > 0 %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_detected_person_when_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

# level

- platform: template
  sensors:
    motion_person_activity_icon_${MOTION_CAMERA}:
      value_template: >-
        {%- if states.sensor.motion_detected_person_date_${MOTION_CAMERA} is not none
               and states('sensor.motion_detected_person_date_${MOTION_CAMERA}')|lower != 'unknown'
               and states('sensor.motion_detected_person_date_${MOTION_CAMERA}')|lower != 'null'
               and states.sensor.motion_detected_person_ago_${MOTION_CAMERA} is not none
               and states('sensor.motion_detected_person_ago_${MOTION_CAMERA}')|lower != 'unknown'
               and states('sensor.motion_detected_person_ago_${MOTION_CAMERA}')|lower != 'null' -%}
          {%- if states('sensor.motion_detected_person_counter_today_${MOTION_CAMERA}')|lower != 'unknown'
                 and states('sensor.motion_detected_person_counter_today_${MOTION_CAMERA}')|lower != 'null'
                 and states('sensor.motion_detected_person_counter_today_${MOTION_CAMERA}')|int <= 0 -%}
            {{ 'mdi:account-box' }}
          {%- elif (states('sensor.motion_detected_person_ago_${MOTION_CAMERA}')|int / 3600)|int > 0 -%}
            {{ 'mdi:account-multiple-remove' }}
          {%- elif is_state('binary_sensor.motion_detected_person_ago_high_persistent_${MOTION_CAMERA}','on') -%}
            {{ 'mdi:account-multiple-minus' }}
          {%- elif is_state('binary_sensor.motion_detected_person_ago_high_${MOTION_CAMERA}','on') -%}
            {{ 'mdi:account-minus' }}
          {%- elif is_state('binary_sensor.motion_detected_person_ago_low_persistent_${MOTION_CAMERA}','on') -%}
            {{ 'mdi:account-multiple-plus' }}
          {%- elif is_state('binary_sensor.motion_detected_person_ago_low_${MOTION_CAMERA}','on') -%}
            {{ 'mdi:account-plus' }}
          {%- else -%}
            {{ 'mdi:account' }}
          {%- endif -%}
        {%- else -%}
          {{ 'mdi:account-clock' }}
        {%- endif -%}

- platform: template
  sensors:
    motion_person_activity_level_${MOTION_CAMERA}:
      friendly_name: 'Person activity'
      icon_template: >-
        {{ states('sensor.motion_person_activity_icon_${MOTION_CAMERA}') }}
      value_template: >-
        {%- if states.sensor.motion_detected_person_date_${MOTION_CAMERA} is not none
               and states('sensor.motion_detected_person_date_${MOTION_CAMERA}')|lower != 'unknown'
               and states('sensor.motion_detected_person_date_${MOTION_CAMERA}')|lower != 'null'
               and states.sensor.motion_detected_person_ago_${MOTION_CAMERA} is not none
               and states('sensor.motion_detected_person_ago_${MOTION_CAMERA}')|lower != 'unknown'
               and states('sensor.motion_detected_person_ago_${MOTION_CAMERA}')|lower != 'null' -%}
          {%- if states('sensor.motion_detected_person_counter_today_${MOTION_CAMERA}')|lower != 'unknown'
                 and states('sensor.motion_detected_person_counter_today_${MOTION_CAMERA}')|lower != 'null'
                 and states('sensor.motion_detected_person_counter_today_${MOTION_CAMERA}')|int <= 0 -%}
            Nothing today
          {%- elif (states('sensor.motion_detected_person_ago_${MOTION_CAMERA}')|int / 3600)|int > 0 -%}
            {%- set h = (states('sensor.motion_detected_person_ago_${MOTION_CAMERA}')|int / 3600)|int -%}
            None: {{ h -}}h
          {%- elif is_state('binary_sensor.motion_detected_person_ago_high_persistent_${MOTION_CAMERA}','on') -%}
            Low
          {%- elif is_state('binary_sensor.motion_detected_person_ago_high_${MOTION_CAMERA}','on') -%}
            Decreasing
          {%- elif is_state('binary_sensor.motion_detected_person_ago_low_persistent_${MOTION_CAMERA}','on') -%}
            High
          {%- elif is_state('binary_sensor.motion_detected_person_ago_low_${MOTION_CAMERA}','on') -%}
            Increasing
          {%- else -%}
            Nominal
          {%- endif -%}
        {%- else -%}
          Pending
        {%- endif -%}

## ago

- platform: template
  sensors:
    motion_detected_person_ago_relative_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} person ago relative'
      icon_template: 'mdi:account'
      value_template: >
        {% set s = states('sensor.motion_detected_person_ago_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_detected_person_ago_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} ⧖'
      icon_template: 'mdi:camera-timer'
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_detected_person_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s < 86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_detected_person_ago_${MOTION_CAMERA}_mean:
      friendly_name: '${MOTION_CAMERA} ⧖ μ'
      icon_template: 'mdi:account'
      unit_of_measurement: seconds
      value_template: >-
        {% if states('sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_person_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} person ago min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} person ago max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} person ago stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_ago_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} person ago change
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_ago_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} person ago stdev change'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_ago_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} person ago stdev mean'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_ago_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} person ago change mean'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_ago_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

# statistics
- platform: statistics
  name: motion_detected_person_ago_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_person_ago_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_detected_person_ago_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_person_ago_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_person_ago_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_person_ago_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## count

- platform: template
  sensors:
    motion_detected_person_count_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} Σ'
      icon_template: 'mdi:counter'
      unit_of_measurement: '👱'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_person_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_detected_person_expired_${MOTION_CAMERA}','off') %}
          {% set s = states('sensor.motion_detected_person_${MOTION_CAMERA}') %}
          {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' and s|length > 0 %}
            {% set s = s|from_json %}
            {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' and s is iterable %}
              {{ s|sum|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_detected_person_count_${MOTION_CAMERA}_mean:
      friendly_name: '${MOTION_CAMERA} Σ μ'
      icon_template: 'mdi:account'
      unit_of_measurement: '👱'
      value_template: >-
        {% if states('sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_person_count_${MOTION_CAMERA}_min_value:
#      friendly_name: '${MOTION_CAMERA} Σ min'
#      unit_of_measurement: person
#      value_template: >-
#        {% if states('sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_count_${MOTION_CAMERA}_max_value:
#      friendly_name: '${MOTION_CAMERA} Σ max'
#      unit_of_measurement: person
#      value_template: >-
#        {% if states('sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_count_${MOTION_CAMERA}_stdev:
#      friendly_name: '${MOTION_CAMERA} Σ σ'
#      unit_of_measurement: person
#      value_template: >
#        {% if states('sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_count_${MOTION_CAMERA}_change:
#      friendly_name: '${MOTION_CAMERA} Σ Δ'
#      unit_of_measurement: person
#      value_template: >
#        {% if states('sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_count_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_count_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} Σ σ Δ'
#      unit_of_measurement: person
#      value_template: >
#        {% if states.sensor.motion_detected_person_count_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_count_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_count_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} Σ σ µ'
#      unit_of_measurement: person
#      value_template: >
#        {% if states.sensor.motion_detected_person_count_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_count_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_count_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} Σ Δ µ'
#      unit_of_measurement: person
#      value_template: >
#        {% if states.sensor.motion_detected_person_count_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_count_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_detected_person_count_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_person_count_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_detected_person_count_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_person_count_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_person_count_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_person_count_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## confidence

- platform: template
  sensors:
    motion_detected_person_confidence_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} person (β)'
      icon_template: 'mdi:account'
      unit_of_measurement: 'β'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_person_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','results') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|length > 0 %}
            {% set options = state_attr('input_select.motion_detect_person_${MOTION_CAMERA}','options') %}
            {% if options is not none and options|lower != 'unknown' and options|length > 0 %}
              {% set l = s|selectattr('entity','in',options)|map(attribute='confidence')|list %}
              {% if l is not none and l|length > 0 %}
                {% set p = s|selectattr('entity','in',options)|map(attribute='confidence')|max|int %}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}.state %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_person_confidence_${MOTION_CAMERA}_mean:
      friendly_name: ${MOTION_CAMERA} person confidence mean
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_person_confidence_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} person confidence min
#      unit_of_measurement: 'β'
#      value_template: >-
#        {% if states('sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_confidence_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} person confidence max
#      unit_of_measurement: 'β'
#      value_template: >-
#        {% if states('sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_confidence_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} person confidence stdev
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_confidence_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} person confidence change
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_confidence_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} person confidence stdev change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_confidence_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} person confidence stdev mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_person_confidence_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} person confidence change mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_person_confidence_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}
#
- platform: statistics
  name: motion_detected_person_confidence_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_person_confidence_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24
#
#- platform: statistics
#  name: motion_detected_person_confidence_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_person_confidence_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_person_confidence_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_person_confidence_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

###
## vehicle
###

# array of vehicle count
- platform: template
  sensors:
    motion_detected_vehicle_${MOTION_CAMERA}:
      icon_template: 'mdi:counter'
      value_template: >-
        {% set options = state_attr('input_select.motion_detect_vehicle_${MOTION_CAMERA}','options') %}
        {% if options is not none and options|lower != 'unknown' and options|length > 0 %}
          {% set array = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','results') %}
          {% if array is not none and array|lower != 'unknown' and array|length > 0 %}
            {% for results in array %}
              {%- if loop.first -%}[{%- else -%},{%- endif -%}
              {% if results.entity in options and results.confidence|int >= states('sensor.motion_detected_vehicle_threshold')|int %}
                1
              {% else %}
                0
              {% endif %}
              {%- if loop.last -%}]{%- endif -%}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## sensor from counter

- platform: template
  sensors:
    motion_detected_vehicle_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} vehicle counter
      value_template: >
        {{ states('counter.motion_detected_vehicle_counter_${MOTION_CAMERA}') }}

## TODAY

- platform: history_stats
  name: motion_today_vehicle_ratio_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}
  state: 'on'
  type: ratio
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_today_vehicle_counter_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}
  state: 'on'
  type: count
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_today_vehicle_time_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: template
  sensors:
    motion_detected_vehicle_ratio_today_${MOTION_CAMERA}:
      friendly_name: Today vehicle ratio
      unit_of_measurement: '%'
      icon_template: 'mdi:percent'
      value_template: >
        {{ states('sensor.motion_today_vehicle_ratio') }}

- platform: template
  sensors:
    motion_detected_vehicle_counter_today_${MOTION_CAMERA}:
      friendly_name: Today vehicle counter
      unit_of_measurement: 'events'
      icon_template: 'mdi:counter'
      value_template: >-
        {{ states('sensor.motion_today_vehicle_counter')|int }}

- platform: template
  sensors:
    motion_detected_vehicle_time_today_${MOTION_CAMERA}:
      friendly_name: Today vehicle time
      unit_of_measurement: 'hours'
      icon_template: 'mdi:timer-outline'
      value_template: >
        {{ states('sensor.motion_today_vehicle_time')|float }}

- platform: template
  sensors:
    motion_detected_vehicle_status_today_${MOTION_CAMERA}:
      friendly_name: Today vehicle
      icon_template: 'mdi:car'
      value_template: >-
        {% set c = states('sensor.motion_detected_vehicle_counter_today') %}
        {% set r = states('sensor.motion_detected_vehicle_ratio_today') %}
        {% set t = states('sensor.motion_detected_vehicle_time_today') %}
        {% if c|lower != 'unknown' and r|lower != 'unknown' and t|lower != 'unknown' %}
          {{ c -}}; {{ t }} hours; {{ r }}%
        {% else %}No vehicles detected today{% endif %}

- platform: template
  sensors:
    motion_detected_vehicle_event_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} vehicle event
      value_template: >
        {% if is_state('binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_vehicle_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.event %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_vehicle_event_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_vehicle_camera_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} vehicle camera
      icon_template: 'mdi:camera'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_vehicle_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.camera %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_vehicle_camera_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_vehicle_elapsed_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} vehicle elapsed
      icon_template: 'mdi:timer'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_vehicle_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.elapsed %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_vehicle_elapsed_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_vehicle_date_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} vehicle date
      value_template: >
        {% if is_state('binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_vehicle_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.end %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_vehicle_date_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_vehicle_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} vehicle when
      icon_template: 'mdi:calendar-clock'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}','on') %}
          {% set s = states('sensor.motion_detected_vehicle_date_${MOTION_CAMERA}') %}
          {% if s|int > 0 %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_detected_vehicle_when_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_detected_vehicle_ago_relative_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} vehicle ago relative'
      icon_template: 'mdi:car'
      value_template: >
        {% set s = states('sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_detected_vehicle_ago_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} ⧖'
      icon_template: 'mdi:camera-timer'
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_detected_vehicle_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s < 86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_detected_vehicle_ago_${MOTION_CAMERA}_mean:
      friendly_name: '${MOTION_CAMERA} ⧖ μ'
      unit_of_measurement: seconds
      value_template: >-
        {% if states('sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} vehicle ago min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} vehicle ago max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} vehicle ago stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_ago_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} vehicle ago change
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} vehicle ago stdev change'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} vehicle ago stdev mean'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_ago_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} vehicle ago change mean'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

# statistics
- platform: statistics
  name: motion_detected_vehicle_ago_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_vehicle_ago_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_vehicle_ago_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## count

- platform: template
  sensors:
    motion_detected_vehicle_count_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} Σ'
      icon_template: 'mdi:counter'
      unit_of_measurement: '🚗'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_vehicle_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_detected_vehicle_expired_${MOTION_CAMERA}','off') %}
          {% set s = states('sensor.motion_detected_vehicle_${MOTION_CAMERA}') %}
          {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' and s|length > 0 %}
            {% set s = s|from_json %}
            {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' and s is iterable %}
              {{ s|sum|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_detected_vehicle_count_${MOTION_CAMERA}_mean:
      friendly_name: '${MOTION_CAMERA} Σ μ'
      icon_template: 'mdi:car'
      unit_of_measurement: '🚗'
      value_template: >-
        {% if states('sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_count_${MOTION_CAMERA}_min_value:
#      friendly_name: '${MOTION_CAMERA} Σ min'
#      unit_of_measurement: vehicle
#      value_template: >-
#        {% if states('sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_count_${MOTION_CAMERA}_max_value:
#      friendly_name: '${MOTION_CAMERA} Σ max'
#      unit_of_measurement: vehicle
#      value_template: >-
#        {% if states('sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_count_${MOTION_CAMERA}_stdev:
#      friendly_name: '${MOTION_CAMERA} Σ σ'
#      unit_of_measurement: vehicle
#      value_template: >
#        {% if states('sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_count_${MOTION_CAMERA}_change:
#      friendly_name: '${MOTION_CAMERA} Σ Δ'
#      unit_of_measurement: vehicle
#      value_template: >
#        {% if states('sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_count_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} Σ σ Δ'
#      unit_of_measurement: vehicle
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_count_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} Σ σ µ'
#      unit_of_measurement: vehicle
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_count_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} Σ Δ µ'
#      unit_of_measurement: vehicle
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_detected_vehicle_count_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_vehicle_count_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_detected_vehicle_count_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_vehicle_count_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_vehicle_count_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## confidence

- platform: template
  sensors:
    motion_detected_vehicle_confidence_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} vehicle (β)'
      icon_template: 'mdi:car'
      unit_of_measurement: 'β'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_vehicle_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','results') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|length > 0 %}
            {% set options = state_attr('input_select.motion_detect_vehicle_${MOTION_CAMERA}','options') %}
            {% if options is not none and options|lower != 'unknown' and options|length > 0 %}
              {% set l = s|selectattr('entity','in',options)|map(attribute='confidence')|list %}
              {% if l is not none and l|length > 0 %}
                {% set p = s|selectattr('entity','in',options)|map(attribute='confidence')|max|int %}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}.state %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_vehicle_confidence_${MOTION_CAMERA}_mean:
      friendly_name: ${MOTION_CAMERA} vehicle confidence mean
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_confidence_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} vehicle confidence min
#      unit_of_measurement: 'β'
#      value_template: >-
#        {% if states('sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_confidence_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} vehicle confidence max
#      unit_of_measurement: 'β'
#      value_template: >-
#        {% if states('sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} vehicle confidence stdev
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_confidence_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} vehicle confidence change
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} vehicle confidence stdev change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} vehicle confidence stdev mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_vehicle_confidence_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} vehicle confidence change mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}
#
- platform: statistics
  name: motion_detected_vehicle_confidence_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24
#
#- platform: statistics
#  name: motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_vehicle_confidence_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_vehicle_confidence_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

###
## animal
###

# array of animal count
- platform: template
  sensors:
    motion_detected_animal_${MOTION_CAMERA}:
      icon_template: 'mdi:counter'
      value_template: >-
        {% set options = state_attr('input_select.motion_detect_animal_${MOTION_CAMERA}','options') %}
        {% if options is not none and options|lower != 'unknown' and options|length > 0 %}
          {% set array = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','results') %}
          {% if array is not none and array|lower != 'unknown' and array|length > 0 %}
            {% for results in array %}
              {%- if loop.first -%}[{%- else -%},{%- endif -%}
              {% if results.entity in options and results.confidence|int >= states('sensor.motion_detected_animal_threshold')|int %}
                1
              {% else %}
                0
              {% endif %}
              {%- if loop.last -%}]{%- endif -%}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## sensor from counter

- platform: template
  sensors:
    motion_detected_animal_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} animal counter
      value_template: >
        {{ states('counter.motion_detected_animal_counter_${MOTION_CAMERA}') }}

## TODAY

- platform: history_stats
  name: motion_today_animal_ratio_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_animal_${MOTION_CAMERA}
  state: 'on'
  type: ratio
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_today_animal_counter_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_animal_${MOTION_CAMERA}
  state: 'on'
  type: count
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_today_animal_time_${MOTION_CAMERA}
  entity_id: binary_sensor.motion_detected_animal_${MOTION_CAMERA}
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: template
  sensors:
    motion_detected_animal_ratio_today_${MOTION_CAMERA}:
      friendly_name: Today animal ratio
      unit_of_measurement: '%'
      icon_template: 'mdi:percent'
      value_template: >
        {{ states('sensor.motion_today_animal_ratio') }}

- platform: template
  sensors:
    motion_detected_animal_counter_today_${MOTION_CAMERA}:
      friendly_name: Today animal counter
      unit_of_measurement: 'events'
      icon_template: 'mdi:counter'
      value_template: >-
        {{ states('sensor.motion_today_animal_counter')|int }}

- platform: template
  sensors:
    motion_detected_animal_time_today_${MOTION_CAMERA}:
      friendly_name: Today animal time
      unit_of_measurement: 'hours'
      icon_template: 'mdi:timer-outline'
      value_template: >
        {{ states('sensor.motion_today_animal_time')|float }}

- platform: template
  sensors:
    motion_detected_animal_status_today_${MOTION_CAMERA}:
      friendly_name: Today animal
      icon_template: 'mdi:cow'
      value_template: >-
        {% set c = states('sensor.motion_detected_animal_counter_today') %}
        {% set r = states('sensor.motion_detected_animal_ratio_today') %}
        {% set t = states('sensor.motion_detected_animal_time_today') %}
        {% if c|lower != 'unknown' and r|lower != 'unknown' and t|lower != 'unknown' %}
          {{ c -}}; {{ t }} hours; {{ r }}%
        {% else %}No animals detected today{% endif %}

- platform: template
  sensors:
    motion_detected_animal_event_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} animal event
      value_template: >
        {% if is_state('binary_sensor.motion_detected_animal_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_animal_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.event %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_animal_event_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_animal_camera_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} animal camera
      icon_template: 'mdi:camera'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_animal_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_animal_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.camera %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_animal_camera_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_animal_elapsed_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} animal elapsed
      icon_template: 'mdi:timer'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_animal_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_animal_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.elapsed %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_animal_elapsed_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_animal_date_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} animal date
      value_template: >
        {% if is_state('binary_sensor.motion_detected_animal_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_animal_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','event') %}
          {% if s is not none and s is mapping %}
            {% set p = s.end %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_detected_animal_date_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_animal_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} animal when
      icon_template: 'mdi:calendar-clock'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_animal_${MOTION_CAMERA}','on') %}
          {% set s = states('sensor.motion_detected_animal_date_${MOTION_CAMERA}') %}
          {% if s|int > 0 %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_detected_animal_when_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_detected_animal_ago_relative_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} animal ago relative'
      icon_template: 'mdi:cow'
      value_template: >
        {% set s = states('sensor.motion_detected_animal_ago_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_detected_animal_ago_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} ⧖'
      icon_template: 'mdi:camera-timer'
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_detected_animal_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s < 86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_detected_animal_ago_${MOTION_CAMERA}_mean:
      friendly_name: '${MOTION_CAMERA} ⧖ μ'
      unit_of_measurement: seconds
      value_template: >-
        {% if states('sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_animal_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} animal ago min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} animal ago max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} animal ago stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_ago_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} animal ago change
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_ago_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} animal ago stdev change'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_ago_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} animal ago stdev mean'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_ago_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} animal ago change mean'
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_ago_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

# statistics
- platform: statistics
  name: motion_detected_animal_ago_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_animal_ago_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_detected_animal_ago_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_animal_ago_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_animal_ago_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_animal_ago_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## count

- platform: template
  sensors:
    motion_detected_animal_count_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} Σ'
      icon_template: 'mdi:counter'
      unit_of_measurement: '🐄'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_animal_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_detected_animal_expired_${MOTION_CAMERA}','off') %}
          {% set s = states('sensor.motion_detected_animal_${MOTION_CAMERA}') %}
          {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' and s|length > 0 %}
            {% set s = s|from_json %}
            {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' and s is iterable %}
              {{ s|sum|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_detected_animal_count_${MOTION_CAMERA}_mean:
      friendly_name: '${MOTION_CAMERA} Σ μ'
      icon_template: 'mdi:cow'
      unit_of_measurement: '🐄'
      value_template: >-
        {% if states('sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_animal_count_${MOTION_CAMERA}_min_value:
#      friendly_name: '${MOTION_CAMERA} Σ min'
#      unit_of_measurement: animal
#      value_template: >-
#        {% if states('sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_count_${MOTION_CAMERA}_max_value:
#      friendly_name: '${MOTION_CAMERA} Σ max'
#      unit_of_measurement: animal
#      value_template: >-
#        {% if states('sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_count_${MOTION_CAMERA}_stdev:
#      friendly_name: '${MOTION_CAMERA} Σ σ'
#      unit_of_measurement: animal
#      value_template: >
#        {% if states('sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_count_${MOTION_CAMERA}_change:
#      friendly_name: '${MOTION_CAMERA} Σ Δ'
#      unit_of_measurement: animal
#      value_template: >
#        {% if states('sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_count_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} Σ σ Δ'
#      unit_of_measurement: animal
#      value_template: >
#        {% if states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_count_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} Σ σ µ'
#      unit_of_measurement: animal
#      value_template: >
#        {% if states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_count_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} Σ Δ µ'
#      unit_of_measurement: animal
#      value_template: >
#        {% if states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_count_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_detected_animal_count_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_animal_count_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_detected_animal_count_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_animal_count_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_animal_count_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_animal_count_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## confidence

- platform: template
  sensors:
    motion_detected_animal_confidence_${MOTION_CAMERA}:
      friendly_name: '${MOTION_CAMERA} animal (β)'
      icon_template: 'mdi:cow'
      unit_of_measurement: 'β'
      value_template: >
        {% if is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') and is_state('binary_sensor.motion_detected_animal_old_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','results') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|length > 0 %}
            {% set options = state_attr('input_select.motion_detect_animal_${MOTION_CAMERA}','options') %}
            {% if options is not none and options|lower != 'unknown' and options|length > 0 %}
              {% set l = s|selectattr('entity','in',options)|map(attribute='confidence')|list %}
              {% if l is not none and l|length > 0 %}
                {% set p = s|selectattr('entity','in',options)|map(attribute='confidence')|max|int %}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}.state %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_detected_animal_confidence_${MOTION_CAMERA}_mean:
      friendly_name: ${MOTION_CAMERA} animal confidence mean
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
          {{ states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_detected_animal_confidence_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} animal confidence min
#      unit_of_measurement: 'β'
#      value_template: >-
#        {% if states('sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_confidence_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} animal confidence max
#      unit_of_measurement: 'β'
#      value_template: >-
#        {% if states('sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_confidence_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} animal confidence stdev
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_confidence_${MOTION_CAMERA}_change:
#      friendly_name: ${MOTION_CAMERA} animal confidence change
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_confidence_${MOTION_CAMERA}_stdev_change:
#      friendly_name: '${MOTION_CAMERA} animal confidence stdev change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_confidence_${MOTION_CAMERA}_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} animal confidence stdev mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_detected_animal_confidence_${MOTION_CAMERA}_change_mean:
#      friendly_name: '${MOTION_CAMERA} animal confidence change mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_change_statistics|float }}
#        {%- else -%}null{%- endif -%}
#
- platform: statistics
  name: motion_detected_animal_confidence_${MOTION_CAMERA}_statistics
  entity_id: sensor.motion_detected_animal_confidence_${MOTION_CAMERA}
  sampling_size: 1000
  max_age:
    hours: 24
#
#- platform: statistics
#  name: motion_detected_animal_confidence_${MOTION_CAMERA}_stdev_statistics
#  entity_id: sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_detected_animal_confidence_${MOTION_CAMERA}_change_statistics
#  entity_id: sensor.motion_detected_animal_confidence_${MOTION_CAMERA}_change
#  sampling_size: 100
#  max_age:
#    hours: 24

###
## face
###

## event_face
- platform: mqtt
  name: motion_event_face_${MOTION_CAMERA}
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/face/+'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/face/+'
  expire_after: !secret motion-face-expire-after
  force_update: !secret motion-face-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## status
- platform: template
  sensors:
    motion_face_status_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} FACE
      value_template: >-
        {% if states('binary_sensor.motion_face_${MOTION_CAMERA}')|lower == 'on' %}
          {% set e = state_attr('sensor.motion_event_face_${MOTION_CAMERA}','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_event_face_${MOTION_CAMERA}','detected')|map(attribute='entity')|list %}
            {% set count = state_attr('sensor.motion_event_face_${MOTION_CAMERA}','count') %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            ANNOTATED: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_face_counter_${MOTION_CAMERA}') -}}/{{- states('sensor.motion_face_counter_${MOTION_CAMERA}') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_face_status_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## counter
- platform: template
  sensors:
    motion_face_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face counter
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_face_counter_${MOTION_CAMERA}')|int }}

## date
- platform: template
  sensors:
    # date
    motion_face_date_${MOTION_CAMERA}:
      unit_of_measurement: seconds
      value_template: >-
        {% set e = state_attr('sensor.motion_event_face_${MOTION_CAMERA}','event') %}
        {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
          {% set s = e.end %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
            {{ s|int }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## when
- platform: template
  sensors:
    motion_face_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face when
      value_template: >-
        {% set s = states('sensor.motion_face_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set n = utcnow().timestamp() %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}; {{ (n|int-s)|int }} lag
        {% else %}Pending{% endif %}

## count 

- platform: template
  sensors:
    motion_face_count_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face count
      unit_of_measurement: face
      value_template: >
        {% if is_state('binary_sensor.motion_face_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_face_expired_${MOTION_CAMERA}','off') %}
          {% set count = state_attr('sensor.motion_event_face_${MOTION_CAMERA}','count') %}
          {% if count is not none and count|lower != 'unknown' and count != 'null' %}
            {{ count|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_face_count_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} count avg
#      unit_of_measurement: faces
#      value_template: >-
#        {% if states('sensor.motion_face_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_count_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_count_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} count min
#      unit_of_measurement: faces
#      value_template: >-
#        {% if states('sensor.motion_face_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_count_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_count_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} count max
#      unit_of_measurement: faces
#      value_template: >-
#        {% if states('sensor.motion_face_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_count_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_count_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} count stdev
#      unit_of_measurement: faces
#      value_template: >
#        {% if states('sensor.motion_face_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_count_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_face_count_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_face_count_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## ago

- platform: template
  sensors:
    motion_face_ago_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face ago
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_face_date_${MOTION_CAMERA}')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_face_ago_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} face ago avg
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_face_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_face_ago_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} face min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_face_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_face_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} face max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_face_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_face_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} face stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_face_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_face_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_face_ago_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_face_ago_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72
#

## percent

- platform: template
  sensors:
    motion_face_percent_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face percent
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_face_counter_${MOTION_CAMERA}')|int > 0 and states('sensor.motion_end_counter_${MOTION_CAMERA}')|int > 0 %}
          {% set value = states.sensor.motion_face_counter_${MOTION_CAMERA}.state|int / states.sensor.motion_end_counter_${MOTION_CAMERA}.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_face_percent_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} face percent avg
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_face_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_percent_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_percent_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} face percent min
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_face_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_percent_${MOTION_CAMERA}_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_percent_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} face percent max
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_face_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_percent_${MOTION_CAMERA}_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_percent_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} face percent stdev
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_face_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_percent_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_face_percent_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_face_percent_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72
#

## delay 

- platform: template
  sensors:
    motion_face_delay_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face delay 
      unit_of_measurement: seconds
      value_template: >
        {% set s = states('sensor.motion_face_date_${MOTION_CAMERA}') %}
        {% if s is not none and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
          {{ utcnow().timestamp()|int - s|int }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_face_delay_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} face delay avg
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_face_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_delay_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_delay_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} face delay min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_face_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_delay_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_delay_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} face delay max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_face_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_delay_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_delay_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} face delay stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_face_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_delay_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_face_delay_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_face_delay_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

###
## face_detected
###

## human readable status
- platform: template
  sensors:
    motion_face_detected_status_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face detected status
      value_template: >-
        {% if states('binary_sensor.motion_face_detected_${MOTION_CAMERA}')|lower == 'on' %}
          {% set e = state_attr('sensor.motion_event_face_${MOTION_CAMERA}','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_event_face_${MOTION_CAMERA}','detected')|list %}
            {% set count = state_attr('sensor.motion_event_face_${MOTION_CAMERA}','count')|int %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            FACE: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_face_detected_counter_${MOTION_CAMERA}') -}}/{{- states('sensor.motion_face_detected_counter_${MOTION_CAMERA}') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_face_detected_status_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count_entity
- platform: template
  sensors:
    motion_face_detected_count_entity_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face detected count entity
      value_template: >-
        {% if is_state('binary_sensor.motion_face_detected_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_face_detected_expired_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected')|selectattr('entity','==',states('sensor.motion_detect_entity_${MOTION_CAMERA}'))|map(attribute='count')|sum %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_face_detected_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face detected counter
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_face_detected_counter_${MOTION_CAMERA}')|int }}

## date
- platform: template
  sensors:
    motion_face_detected_date_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face detected date
      unit_of_measurement: seconds
      value_template: >-
        {% if is_state('binary_sensor.motion_face_detected_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_face_detected_expired_${MOTION_CAMERA}','off') %}
          {% set date = states('sensor.motion_annotated_date_${MOTION_CAMERA}')|int %}
          {% if date > 0 %}{{ date }}{% else %}null{% endif %}
        {% else %}
          {% set s = states('sensor.motion_face_detected_date_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_face_detected_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face detected when
      value_template: >-
        {% set s = states('sensor.motion_face_detected_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {% set n = utcnow().timestamp() %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## ago

- platform: template
  sensors:
    motion_face_detected_ago_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face detected ago
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_face_detected_date_${MOTION_CAMERA}')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_face_detected_ago_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} detected ago avg
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {% if states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics.state|int is number %}
#            {{ states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics.state|float }}
#          {%- else -%}null{%- endif -%}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} detected ago min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} detected ago max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} detected ago stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_face_detected_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_face_detected_ago_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_face_detected_ago_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## count

- platform: template
  sensors:
    motion_face_detected_count_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face detected count
      unit_of_measurement: face
      value_template: >
        {% if is_state('binary_sensor.motion_face_detected_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_face_detected_expired_${MOTION_CAMERA}','off') %}
          {% set s = states('sensor.motion_annotated_count_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_face_detected_count_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} face detected count avg
#      unit_of_measurement: face
#      value_template: >-
#        {% if states('sensor.motion_face_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_detected_count_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_count_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} face detected count min
#      unit_of_measurement: face
#      value_template: >-
#        {% if states('sensor.motion_face_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_detected_count_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_count_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} face detected count max
#      unit_of_measurement: face
#      value_template: >-
#        {% if states('sensor.motion_face_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_detected_count_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_count_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} face detected count stdev
#      unit_of_measurement: face
#      value_template: >
#        {% if states('sensor.motion_face_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_detected_count_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_face_detected_count_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_face_detected_count_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## percent

- platform: template
  sensors:
    motion_face_detected_percent_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} face detected percent
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_face_detected_counter_${MOTION_CAMERA}')|int > 0 and states('sensor.motion_annotated_counter_${MOTION_CAMERA}')|int > 0 %}
          {% set value = states.sensor.motion_face_detected_counter_${MOTION_CAMERA}.state|int / states.sensor.motion_annotated_counter_${MOTION_CAMERA}.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_face_detected_percent_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} face detected percent
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_face_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_detected_percent_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_percent_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} face detected percent min
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_face_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_detected_percent_${MOTION_CAMERA}_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_percent_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} face detected percent max
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_face_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_detected_percent_${MOTION_CAMERA}_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_face_detected_percent_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} face detected percent stdev
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_face_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_face_detected_percent_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_face_detected_percent_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_face_detected_percent_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

###
# alpr
###

- platform: mqtt
  name: motion_event_alpr_${MOTION_CAMERA}
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/alpr/+'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/alpr/+'
  expire_after: !secret motion-alpr-expire-after
  force_update: !secret motion-alpr-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## status
- platform: template
  sensors:
    motion_alpr_status_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR status
      value_template: >-
        {% if states('binary_sensor.motion_alpr_${MOTION_CAMERA}')|lower == 'on' %}
          {%- set e = states('sensor.motion_event_alpr_${MOTION_CAMERA}') -%}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            Counter: {{ states('counter.motion_alpr_counter_${MOTION_CAMERA}') -}}/{{- states('sensor.motion_alpr_counter_${MOTION_CAMERA}') -}};
            State: {{ e|lower == 'true'  -}};
            {%- set event = state_attr('sensor.motion_event_alpr_${MOTION_CAMERA}','event') -%}
            {%- set count = state_attr('sensor.motion_event_alpr_${MOTION_CAMERA}','count') -%}
            {%- set detected = state_attr('sensor.motion_event_alpr_${MOTION_CAMERA}','detected') -%}
            {%- set when = event.end|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -%}
            {%- if event.elapsed > 0 -%}Duration: {{ event.elapsed }} seconds{%- else -%}None{%- endif -%};
            {% set what = state_attr('sensor.motion_event_alpr','detected') %}
            {% if what is none or what|lower == 'unknown' or what|length == 0 %}{% set what = 'nothing' %}{% endif %}
            {%- if count > 0 -%}{{ count }} entities: {{ what }}{%- else -%}nothing{%- endif -%}; from {{ event.device -}}/{{- event.camera -}}/{{- event.event -}}; at {{ when -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_alpr_status_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count
- platform: template
  sensors:
    motion_alpr_count_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} alpr count
      unit_of_measurement: license
      value_template: >
        {% if is_state('binary_sensor.motion_alpr_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_alpr_expired_${MOTION_CAMERA}','off') %}
          {% set count = state_attr('sensor.motion_event_alpr_${MOTION_CAMERA}','count') %}
          {% if count is not none and count|lower != 'unknown' and count != 'null' %}
            {{ count|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_alpr_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} alpr counter
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_alpr_counter_${MOTION_CAMERA}')|int }}

## date
- platform: template
  sensors:
    # date
    motion_alpr_date_${MOTION_CAMERA}:
      unit_of_measurement: seconds
      value_template: >-
        {% set e = state_attr('sensor.motion_event_alpr_${MOTION_CAMERA}','event') %}
        {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
          {% set s = e.end %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
            {{ s|int }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## when
- platform: template
  sensors:
    motion_alpr_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} alpr when
      value_template: >-
        {% set s = states('sensor.motion_alpr_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## ago
- platform: template
  sensors:
    motion_alpr_ago_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} alpr ago
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_alpr_date_${MOTION_CAMERA}')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

# delay
- platform: template
  sensors:
    motion_alpr_delay_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} alpr delay 
      unit_of_measurement: seconds
      value_template: >
        {% set s = states('sensor.motion_alpr_date_${MOTION_CAMERA}') %}
        {% if s is not none and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
          {{ utcnow().timestamp()|int - s|int }}
        {%- else -%}null{%- endif -%}

# delay 
#- platform: template
#  sensors:
#    motion_alpr_delay_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} alpr delay avg
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_alpr_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_delay_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_delay_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} alpr delay min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_alpr_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_delay_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_delay_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} alpr delay max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states('sensor.motion_alpr_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_delay_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_delay_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} alpr delay stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states('sensor.motion_alpr_delay_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_delay_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_alpr_delay_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_alpr_delay_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

###
# alpr_detected
###

## human readable status
- platform: template
  sensors:
    motion_alpr_detected_status_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR detected status
      value_template: >-
        {% if states('binary_sensor.motion_alpr_${MOTION_CAMERA}')|lower == 'on' %}
          {% set e = state_attr('sensor.motion_event_alpr_${MOTION_CAMERA}','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_event_alpr_${MOTION_CAMERA}','detected') %}
            {% if what is none or what|lower == 'unknown' or what|length == 0 %}{% set what = 'nothing' %}{% endif %}
            {% set count = state_attr('sensor.motion_event_alpr_${MOTION_CAMERA}','count')|int %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            ALPR DETECTED: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_alpr_detected_counter_${MOTION_CAMERA}') -}}/{{- states('sensor.motion_alpr_detected_counter_${MOTION_CAMERA}') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_alpr_detected_status_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count_entity
- platform: template
  sensors:
    motion_alpr_detected_count_entity_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR detected count entity
      value_template: >-
        {% if is_state('binary_sensor.motion_alpr_detected_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_alpr_detected_expired_${MOTION_CAMERA}','off') %}
          {% set s = state_attr('sensor.motion_event_annotated_${MOTION_CAMERA}','detected')|selectattr('entity','==',states('sensor.motion_detect_entity_${MOTION_CAMERA}'))|map(attribute='count')|sum %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_alpr_detected_counter_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR detected counter
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_alpr_detected_counter_${MOTION_CAMERA}')|int }}

## date
- platform: template
  sensors:
    motion_alpr_detected_date_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR detected date
      unit_of_measurement: seconds
      value_template: >-
        {% if is_state('binary_sensor.motion_alpr_detected_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_alpr_detected_expired_${MOTION_CAMERA}','off') %}
          {% set date = states('sensor.motion_annotated_date_${MOTION_CAMERA}')|int %}
          {% if date > 0 %}{{ date }}{% else %}null{% endif %}
        {% else %}
          {% set s = states('sensor.motion_alpr_detected_date_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_alpr_detected_when_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR detected when
      value_template: >-
        {% set s = states('sensor.motion_alpr_detected_date_${MOTION_CAMERA}')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## ago

- platform: template
  sensors:
    motion_alpr_detected_ago_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR detected ago
      unit_of_measurement: seconds
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_alpr_detected_date_${MOTION_CAMERA}')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_alpr_detected_ago_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} detected ago avg
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {% if states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics.state|int is number %}
#            {{ states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics.state|float }}
#          {%- else -%}null{%- endif -%}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_ago_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} detected ago min
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_ago_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} detected ago max
#      unit_of_measurement: seconds
#      value_template: >-
#        {% if states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_ago_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} detected ago stdev
#      unit_of_measurement: seconds
#      value_template: >
#        {% if states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics|lower != 'none' %}
#          {{ states.sensor.motion_alpr_detected_ago_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_alpr_detected_ago_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_alpr_detected_ago_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## count

- platform: template
  sensors:
    motion_alpr_detected_count_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR detected count
      unit_of_measurement: license
      value_template: >
        {% if is_state('binary_sensor.motion_alpr_detected_${MOTION_CAMERA}','on') or is_state('binary_sensor.motion_alpr_detected_expired_${MOTION_CAMERA}','off') %}
          {% set s = states('sensor.motion_annotated_count_${MOTION_CAMERA}') %}
          {% if s is not none and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_alpr_detected_count_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} ALPR detected count avg
#      unit_of_measurement: license
#      value_template: >-
#        {% if states('sensor.motion_alpr_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_detected_count_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_count_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} ALPR detected count min
#      unit_of_measurement: license
#      value_template: >-
#        {% if states('sensor.motion_alpr_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_detected_count_${MOTION_CAMERA}_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_count_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} ALPR detected count max
#      unit_of_measurement: license
#      value_template: >-
#        {% if states('sensor.motion_alpr_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_detected_count_${MOTION_CAMERA}_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_count_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} ALPR detected count stdev
#      unit_of_measurement: license
#      value_template: >
#        {% if states('sensor.motion_alpr_detected_count_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_detected_count_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_alpr_detected_count_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_alpr_detected_count_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## percent
- platform: template
  sensors:
    motion_alpr_detected_percent_${MOTION_CAMERA}:
      friendly_name: ${MOTION_CAMERA} ALPR detected percent
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_alpr_detected_counter_${MOTION_CAMERA}')|int > 0 and states('sensor.motion_annotated_counter_${MOTION_CAMERA}')|int > 0 %}
          {% set value = states.sensor.motion_alpr_detected_counter_${MOTION_CAMERA}.state|int / states.sensor.motion_annotated_counter_${MOTION_CAMERA}.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_alpr_detected_percent_${MOTION_CAMERA}_mean:
#      friendly_name: ${MOTION_CAMERA} ALPR detected percent
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_alpr_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_detected_percent_${MOTION_CAMERA}_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_percent_${MOTION_CAMERA}_min_value:
#      friendly_name: ${MOTION_CAMERA} ALPR detected percent min
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_alpr_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_detected_percent_${MOTION_CAMERA}_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_percent_${MOTION_CAMERA}_max_value:
#      friendly_name: ${MOTION_CAMERA} ALPR detected percent max
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_alpr_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_detected_percent_${MOTION_CAMERA}_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_alpr_detected_percent_${MOTION_CAMERA}_stdev:
#      friendly_name: ${MOTION_CAMERA} ALPR detected percent stdev
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_alpr_detected_percent_${MOTION_CAMERA}_statistics') != 'unknown' %}
#          {{ states.sensor.motion_alpr_detected_percent_${MOTION_CAMERA}_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_alpr_detected_percent_${MOTION_CAMERA}_statistics
#  entity_id: sensor.motion_alpr_detected_percent_${MOTION_CAMERA}
#  sampling_size: 100
#  max_age:
#    hours: 72

## update camera

- platform: template
  sensors:
    motion_camera_end_update_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_end_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_annotated_update_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_annotated_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_composite_update_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_composite_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_animated_update_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_animated_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_animated_mask_update_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_animated_mask_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_face_update_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_face_${MOTION_CAMERA}.last_updated) }}

- platform: template
  sensors:
    motion_camera_alpr_update_${MOTION_CAMERA}:
      value_template: >-
        {{ as_timestamp(states.camera.motion_event_alpr_${MOTION_CAMERA}.last_updated) }}
