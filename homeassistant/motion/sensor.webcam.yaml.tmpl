###
## AUTO-GENERATED from homeassistant/motion/sensor.webcam.yaml.tmpl
##
## - MOTION_GROUP: ${MOTION_GROUP}
## - MOTION_CLIENT: ${MOTION_CLIENT}
## - MOTION_CAMERA: ${MOTION_CAMERA}
###

###
## status
###

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera:
      friendly_name: '${MOTION_CAMERA} status'
      value_template: >-
        {% set status = states('binary_sensor.motion_${MOTION_CAMERA}_status_camera') %}
        {% if status == 'on' %}
          {% set status = 'found' %}
        {% elif status == 'off' %}
          {% set status = 'lost' %}
        {% else %}
          {% set status = null %}
        {% endif %}
        {{- status -}}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_end:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_end.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_annotated:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_annotated.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_composite:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_composite.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_animated:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_animated.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_animated_mask:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_animated_mask.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_face:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_face.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_alpr:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_alpr.last_updated) }}

###
## lost/found
###


## counters

# status counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera_counter:
      friendly_name: '${MOTION_CAMERA} status counter'
      unit_of_measurement: count
      value_template: >-
        {{ states('sensor.motion_${MOTION_CAMERA}_status_camera_found_counter')|int - states('sensor.motion_status_camera_lost_counter')|int }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera_counter_mean:
      friendly_name: '${MOTION_CAMERA} status counter mean'
      unit_of_measurement: count
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_status_camera_counter_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_counter_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_status_camera_counter_min:
      friendly_name: '${MOTION_CAMERA} status counter min'
      unit_of_measurement: count
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_status_camera_counter_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_counter_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_status_camera_counter_max:
      friendly_name: '${MOTION_CAMERA} status counter max'
      unit_of_measurement: count
      value_template: >-
        {% if states('sensor.motion_status_camera_counter_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_counter_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_status_camera_counter_stdev:
      friendly_name: '${MOTION_CAMERA} status counter stdev'
      unit_of_measurement: count
      value_template: >
        {% if states('sensor.motion_status_camera_counter_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_counter_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_status_camera_counter_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_counter
  sampling_size: 100
  max_age:
    hours: 72

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera_found_counter:
      friendly_name: '${MOTION_CAMERA} found counter'
      unit_of_measurement: count
      value_template: >
        {% if states('counter.motion_${MOTION_CAMERA}_status_camera_found_counter') != 'unknown' %}
          {{ states('counter.motion_${MOTION_CAMERA}_status_camera_found_counter')|int }}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera_lost_counter:
      friendly_name: '${MOTION_CAMERA} lost counter'
      unit_of_measurement: count
      value_template: >
        {% if states('counter.motion_${MOTION_CAMERA}_status_camera_lost_counter') != 'unknown' %}
          {{ states('counter.motion_${MOTION_CAMERA}_status_camera_lost_counter')|int }}
        {%- else -%}null{%- endif -%}

## found

- platform: mqtt
  name: motion_${MOTION_CAMERA}_status_camera_found
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/status/found'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/status/found'
  expire_after: !secret motion-expire-after
  force_update: true
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

# attributes (date, when)

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera_found_date:
      unit_of_measurement: 's'
      value_template: >-
        {% if state_attr('sensor.motion_${MOTION_CAMERA}_status_camera_found','date')|lower != 'none'
              and states.sensor.motion_${MOTION_CAMERA}_status_camera_found.attributes.date|int > 0 %}
          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_found.attributes.date|int }}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera_found_when:
      friendly_name: '${MOTION_CAMERA} found at'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_status_camera_found_date|lower != 'none'
              and states.sensor.motion_${MOTION_CAMERA}_status_camera_found_date.state|int > 0 %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_status_camera_found_date.state|int %}
          {% set n = utcnow().timestamp() %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}; {{ (n|int-s)|int }} lag
        {% else %}null{% endif %} 

## counter
#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_status_camera_found_counter_mean:
#      friendly_name: 'status_camera_found counter ${MOTION_CAMERA} avg'
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_status_camera_found_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_found_counter_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_status_camera_found_counter_min:
#      friendly_name: 'status_camera_found counter min'
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_status_camera_found_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_found_counter_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_status_camera_found_counter_max:
#      friendly_name: 'status_camera_found counter max'
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_status_camera_found_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_found_counter_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_status_camera_found_counter_stdev:
#      friendly_name: 'status_camera_found counter stdev'
#      unit_of_measurement: count
#      value_template: >
#        {% if states('sensor.motion_status_camera_found_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_found_counter_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_status_camera_found_counter_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_found_counter
#  sampling_size: 100
#  max_age:
#    hours: 72

## lost

- platform: mqtt
  name: motion_${MOTION_CAMERA}_status_camera_lost
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/status/lost'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/status/lost'
  expire_after: !secret motion-expire-after
  force_update: true
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

# dates
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera_lost_date:
      unit_of_measurement: 's'
      value_template: >-
        {% if state_attr('sensor.motion_${MOTION_CAMERA}_status_camera_lost','date')|lower != 'none'
              and states.sensor.motion_${MOTION_CAMERA}_status_camera_lost.attributes.date|int > 0 %}
          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_lost.attributes.date|int }}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_status_camera_lost_when:
      friendly_name: '${MOTION_CAMERA} lost at'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_status_camera_lost_date|lower != 'none'
              and states.sensor.motion_${MOTION_CAMERA}_status_camera_lost_date.state|int > 0 %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_status_camera_lost_date.state|int %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}null{% endif %} 

## counter
#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_status_camera_lost_counter_mean:
#      friendly_name: 'status_camera_lost counter ${MOTION_CAMERA} avg'
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_status_camera_lost_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_lost_counter_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_status_camera_lost_counter_min:
#      friendly_name: 'status_camera_lost counter min'
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_status_camera_lost_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_lost_counter_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_status_camera_lost_counter_max:
#      friendly_name: 'status_camera_lost counter max'
#      unit_of_measurement: count
#      value_template: >-
#        {% if states('sensor.motion_status_camera_lost_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_lost_counter_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_status_camera_lost_counter_stdev:
#      friendly_name: 'status_camera_lost counter stdev'
#      unit_of_measurement: count
#      value_template: >
#        {% if states('sensor.motion_status_camera_lost_counter_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_status_camera_lost_counter_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_status_camera_lost_counter_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_lost_counter
#  sampling_size: 100
#  max_age:
#    hours: 72

###
# start event
###

- platform: mqtt
  name: motion_${MOTION_CAMERA}_event_start
  qos: 1
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/start'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/start'
  expire_after: !secret motion-expire-after
  force_update: true
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

###
# image event
###

#- platform: mqtt
#  name: motion_${MOTION_CAMERA}_event_image
#  qos: 1
#  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/image'
#  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/image'
#  expire_after: !secret motion-expire-after
#  force_update: true
#  value_template: >
#    {% if value_json is defined %}True{% else %}False{% endif %}

###
# end event
###

- platform: mqtt
  name: motion_${MOTION_CAMERA}_event_end
  qos: 2
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/end'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/end'
  expire_after: !secret motion-end-expire-after
  force_update: !secret motion-end-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## human readable
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_end_status:
      friendly_name: '${MOTION_CAMERA} motion end '
      value_template: >-
        {% if states('binary_sensor.motion_${MOTION_CAMERA}_end')|lower == 'on' %}
          {%- set e = states('sensor.motion_${MOTION_CAMERA}_event_end') -%}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            Counter: {{ states('counter.motion_${MOTION_CAMERA}_end_counter') -}};
            {%- set device = state_attr('sensor.motion_${MOTION_CAMERA}_event_end','device') -%}
            {%- set camera = state_attr('sensor.motion_${MOTION_CAMERA}_event_end','camera') -%}
            {%- set event = state_attr('sensor.motion_${MOTION_CAMERA}_event_end','event') -%}
            {%- set end = state_attr('sensor.motion_${MOTION_CAMERA}_event_end','end') -%}
            {%- set elapsed = state_attr('sensor.motion_${MOTION_CAMERA}_event_end','elapsed')|int -%}
            {%- set when = end|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -%}
            {%- if elapsed > 0 %} Duration: {{ elapsed }} seconds{%- else -%}None{%- endif -%};
            from: {{ device -}}/{{- camera -}}/{{- event -}}; at: {{ when -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_end_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_device:
      friendly_name: '${MOTION_CAMERA} device'
      value_template: >-
        {% if states('binary_sensor.motion_${MOTION_CAMERA}_end')|lower == 'on' %}
          {%- set e = states('sensor.motion_${MOTION_CAMERA}_event_end') -%}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {{ state_attr('sensor.motion_${MOTION_CAMERA}_event_end','device') }}
          {% else %}null{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_camera_device') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_name:
      friendly_name: '${MOTION_CAMERA} name'
      value_template: >-
        {{ '${MOTION_CAMERA}' }}

## counting
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_end_counter:
      friendly_name: '${MOTION_CAMERA} end counter'
      unit_of_measurement: count
      value_template: >-
        {{ states('counter.motion_${MOTION_CAMERA}_end_counter')|int }}

## timing
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_end_date:
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_event_end|lower != 'none' 
              and state_attr('sensor.motion_${MOTION_CAMERA}_event_end','end')|lower != 'none' %}
          {% set date = states.sensor.motion_${MOTION_CAMERA}_event_end.attributes.end|int %}
          {% if date > 0 %}{{ date }}{% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_end_when:
      friendly_name: '${MOTION_CAMERA} end'
      value_template: >-
        {% set s = states('sensor.motion_${MOTION_CAMERA}_end_date')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_end_ago:
      friendly_name: '${MOTION_CAMERA} end ago'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_end_date')|float %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|float - s %}
          {% if s|int <  86400 %}{{ s|float }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## elapsed
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_end_elapsed:
      value_template: >
        {% if states.sensor.motion_${MOTION_CAMERA}_event_end|lower != 'none'
              and state_attr('sensor.motion_${MOTION_CAMERA}_event_end','elapsed')|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_event_end.attributes.elapsed }}
        {% else %}null{% endif %}

###
## annotated
###

## event_annotated
- platform: mqtt
  name: motion_${MOTION_CAMERA}_event_annotated
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/end/+'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/end/+'
  expire_after: !secret motion-annotated-expire-after
  force_update: !secret motion-annotated-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## status
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_status:
      friendly_name: '${MOTION_CAMERA} annotated status'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated_expired','off') %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected')|map(attribute='entity')|list %}
            {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','count') %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            ANNOTATED: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_${MOTION_CAMERA}_annotated_counter') -}}/{{- states('sensor.motion_annotated_counter') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_count:
      friendly_name: '${MOTION_CAMERA} annotated count'
      unit_of_measurement: entities
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated_expired','off') %}
          {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','count') %}
          {% if count|lower != 'none' and count|lower != 'unknown' and count != 'null' %}
            {{ count|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## count_entity
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_count_entity:
      friendly_name: '${MOTION_CAMERA} annotated count entity'
      unit_of_measurement: entities
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated_expired','off') %}
          {% set detected = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected') %}
          {% if detected|lower != 'none' and detected|lower != 'unknown' and detected != 'null' %}
            {% set count = detected|selectattr('entity','==',states('sensor.motion_${MOTION_CAMERA}_detect_entity'))|map(attribute='count')|sum %}
            {% if count|lower != 'none' and count|lower != 'unknown' and count != 'null' %}
              {{ count|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## counts
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_counts:
      friendly_name: '${MOTION_CAMERA} annotated counts'
      value_template: >-
        {% set detected = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected') %}
        {% if detected|lower != 'none' and detected|lower != 'unknown' and detected|length > 0  %}
          {{ detected|map(attribute='count')|list }}
        {% else %}null{% endif %}

## list
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_list:
      friendly_name: '${MOTION_CAMERA} annotated entity list'
      value_template: >-
        {% set detected = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected') %}
        {% if detected|lower != 'none' and detected|lower != 'unknown' and detected|length > 0 %}
          {{ detected|map(attribute='entity')|list }}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_counter:
      friendly_name: '${MOTION_CAMERA} annotated counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_annotated_counter')|int }}

## date
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_date:
      unit_of_measurement: 's'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated','on') %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if e is mapping %}
            {% set s = e.end %}
            {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
              {{ s|int }}
            {%- else -%}null{%- endif -%}
          {%- else -%}null{%- endif -%}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_when:
      friendly_name: '${MOTION_CAMERA} annotated when'
      value_template: >-
        {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_date')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## elapsed
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_elapsed:
      friendly_name: '${MOTION_CAMERA} annotated elapsed'
      unit_of_measurement: 's'
      value_template: >
        {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
        {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
          {% set s = e.elapsed %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## delay

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_delay:
      friendly_name: '${MOTION_CAMERA} annotated delay'
      unit_of_measurement: 's'
      value_template: >
        {%- set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','timestamp') -%}
        {%- if s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' and s != null -%}
          {%- set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') -%}
          {%- if e|lower != 'unavailable' and e|lower != 'none' and e|lower != 'unknown' and e != null and e is iterable %}
            {%- set t = e.timestamp.end -%}
            {%- if t|lower != 'unavailable' and t|lower != 'none' and t|lower != 'unknown' and t != null and t|length > 0 %}
              {{- as_timestamp(s)|int - as_timestamp(t)|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_annotated_delay_mean:
#      friendly_name: '${MOTION_CAMERA} delay avg'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_delay_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_annotated_delay_min:
#      friendly_name: '${MOTION_CAMERA} delay min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_delay_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_annotated_delay_max:
#      friendly_name: '${MOTION_CAMERA} delay max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_delay_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_annotated_delay_stdev:
#      friendly_name: '${MOTION_CAMERA} delay stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_delay_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_annotated_delay_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_annotated_delay
#  sampling_size: 100
#  max_age:
#    hours: 72

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_ago_relative:
      friendly_name: '${MOTION_CAMERA} annotated ago relative'
      icon_template: 'mdi:eye'
      value_template: >
        {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_ago')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_ago:
      friendly_name: '${MOTION_CAMERA} annotated ago'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_date')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_ago_mean:
      friendly_name: '${MOTION_CAMERA} annotated ago avg'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_annotated_ago_min:
#      friendly_name: '${MOTION_CAMERA} annotated min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_annotated_ago_max:
#      friendly_name: '${MOTION_CAMERA} annotated max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_annotated_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} annotated stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_annotated_ago_change:
#      friendly_name: '${MOTION_CAMERA} annotated change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_ago_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_annotated_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_annotated_ago
  sampling_size: 100
  max_age:
    hours: 72

## percent
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_percent:
      friendly_name: '${MOTION_CAMERA} annotated percent'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_counter')|int > 0 and states('sensor.motion_end_counter')|int > 0 %}
          {% set value = states.sensor.motion_${MOTION_CAMERA}_annotated_counter.state|int / states.sensor.motion_end_counter.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_annotated_percent_mean:
      friendly_name: '${MOTION_CAMERA} annotated percent avg'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_percent_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_annotated_percent_min:
      friendly_name: '${MOTION_CAMERA} annotated percent min'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_percent_statistics.attributes.min_value|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_annotated_percent_max:
      friendly_name: '${MOTION_CAMERA} annotated percent max'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_percent_statistics.attributes.max_value|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_annotated_percent_stdev:
      friendly_name: '${MOTION_CAMERA} annotated percent stdev'
      unit_of_measurement: '%'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_annotated_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_annotated_percent_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_annotated_percent_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_annotated_percent
  sampling_size: 100
  max_age:
    hours: 72

###
## detected
###

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_status:
      friendly_name: '${MOTION_CAMERA} detected status'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected')|map(attribute='entity')|list %}
            {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','count') %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            {{ count }} entities: {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_${MOTION_CAMERA}_detected_counter') -}}/{{- states('sensor.motion_detected_counter') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count_entity
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_count_entity:
      friendly_name: '${MOTION_CAMERA} count entity'
      value_template: >-
        {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected')|selectattr('entity','==',states('sensor.motion_${MOTION_CAMERA}_detect_entity'))|map(attribute='count')|sum %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' %}
          {{ s|int }}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_counter:
      friendly_name: '${MOTION_CAMERA} detected counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_detected_counter')|int }}

## date
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_date:
      friendly_name: '${MOTION_CAMERA} detected date'
      unit_of_measurement: 's'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if e is mapping %}
            {% set s = e.end %}
            {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
              {{ s|int }}
            {%- else -%}null{%- endif -%}
          {%- else -%}null{%- endif -%}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_when:
      friendly_name: '${MOTION_CAMERA} detected when'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_date')|int > 0 %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_date') %}
          {% if s|int > 0 %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_when') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## counts
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_counts:
      friendly_name: '${MOTION_CAMERA} detected counts'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_expired','off') %}
          {{ states('sensor.motion_${MOTION_CAMERA}_annotated_counts') }}
        {%- else -%}null{%- endif -%}

## list
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_list:
      friendly_name: '${MOTION_CAMERA} detected list'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s|length > 0 %}
            {% set p = s|map(attribute='entity')|list %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_list') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_ago_relative:
      friendly_name: '${MOTION_CAMERA} detected ago relative'
      icon_template: 'mdi:eye'
      value_template: >
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_ago')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_ago:
      friendly_name: '${MOTION_CAMERA} detected ago'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_date')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_ago_mean:
      friendly_name: '${MOTION_CAMERA} detected ago avg'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics|lower != 'none' %}
          {% if states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics.state|int is number %}
            {{ states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics.state|float }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_ago_min:
#      friendly_name: '${MOTION_CAMERA} detected ago min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_ago_max:
#      friendly_name: '${MOTION_CAMERA} detected ago max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} detected ago stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_ago_change:
#      friendly_name: '${MOTION_CAMERA} detected ago change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_ago_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_ago
  sampling_size: 100
  max_age:
    hours: 72

# count
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_count:
      friendly_name: '${MOTION_CAMERA} detected count'
      unit_of_measurement: entities
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_expired','off') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_count') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_detected_count_mean:
#      friendly_name: '${MOTION_CAMERA} detected avg'
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_count_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_count_min:
#      friendly_name: '${MOTION_CAMERA} detected min'
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_count_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_count_max:
#      friendly_name: '${MOTION_CAMERA} detected max'
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_count_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_count_stdev:
#      friendly_name: '${MOTION_CAMERA} detected stdev'
#      unit_of_measurement: entities
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_count_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_count_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_count
#  sampling_size: 100
#  max_age:
#    hours: 72

# percent
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_percent:
      friendly_name: '${MOTION_CAMERA} detected percent'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_counter')|int > 0 and states('sensor.motion_annotated_counter')|int > 0 %}
          {% set value = states.sensor.motion_${MOTION_CAMERA}_detected_counter.state|int / states.sensor.motion_annotated_counter.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_percent_mean:
      friendly_name: '${MOTION_CAMERA} detected avg'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_percent_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_percent_min:
      friendly_name: '${MOTION_CAMERA} detected min'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_percent_statistics.attributes.min_value|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_percent_max:
      friendly_name: '${MOTION_CAMERA} detected max'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_percent_statistics.attributes.max_value|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_percent_stdev:
      friendly_name: '${MOTION_CAMERA} detected stdev'
      unit_of_measurement: '%'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_percent_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_percent_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_percent
  sampling_size: 100
  max_age:
    hours: 72

###
## detected_entity
###

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_status:
      friendly_name: '${MOTION_CAMERA} 🚶 status'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = states('sensor.motion_${MOTION_CAMERA}_detect_entity') %}
            {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected')|selectattr('entity','==',what)|map(attribute='count')|sum|int %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_${MOTION_CAMERA}_detected_entity_counter') -}}/{{- states('sensor.motion_detected_entity_counter') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_entity_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detect_entity:
      friendly_name: '${MOTION_CAMERA} 🚶'
      icon_template: 'mdi:adjust'
      value_template: >-
        {% if states.input_select.motion_${MOTION_CAMERA}_detect_entity is defined %}
          {{ states.input_select.motion_${MOTION_CAMERA}_detect_entity.state }}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_counter:
      friendly_name: '${MOTION_CAMERA} 🚶 counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_detected_entity_counter')|int }}

## date
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_date:
      friendly_name: '${MOTION_CAMERA} 🚶 date'
      unit_of_measurement: 's'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.end %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_entity_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when - human readable
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_when:
      friendly_name: '${MOTION_CAMERA} 🚶 when'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_date')|int > 0 %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_entity_date') %}
          {% if s|int > 0 %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_entity_when') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_ago_relative:
      friendly_name: '${MOTION_CAMERA} 🚶 ⧖'
      icon_template: 'mdi:eye'
      value_template: >
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_entity_ago')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_ago:
      friendly_name: '${MOTION_CAMERA} 🚶 ⧖'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_entity_date')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{% else %}null{% endif %}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_ago_mean:
      friendly_name: '${MOTION_CAMERA} 🚶 ⧖ avg'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics|lower != 'none' %}
          {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics.state|int is number %}
            {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics.state|float }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_ago_min:
#      friendly_name: '${MOTION_CAMERA} 🚶 ⧖ min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_ago_max:
#      friendly_name: '${MOTION_CAMERA} 🚶 ⧖ max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} 🚶 ⧖ stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_ago_change:
#      friendly_name: '${MOTION_CAMERA} 🚶 ⧖ change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_ago_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_entity_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_entity_ago
  sampling_size: 100
  max_age:
    hours: 72

## count
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_count:
      friendly_name: '${MOTION_CAMERA} 🚶 count'
      unit_of_measurement: entities
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity_expired','off') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_count_entity') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_detected_entity_count_mean:
#      friendly_name: '${MOTION_CAMERA} 🚶 avg'
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_count_min:
#      friendly_name: '${MOTION_CAMERA} 🚶 min'
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_count_max:
#      friendly_name: '${MOTION_CAMERA} 🚶 max'
#      unit_of_measurement: entities
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_count_stdev:
#      friendly_name: '${MOTION_CAMERA} 🚶 stdev'
#      unit_of_measurement: entities
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_count_change:
#      friendly_name: '${MOTION_CAMERA} 🚶 change'
#      unit_of_measurement: entities
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_count_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_entity_count_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_entity_count
#  sampling_size: 100
#  max_age:
#    hours: 72

## confidence

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_confidence:
      friendly_name: '${MOTION_CAMERA} 🚶 (β)'
      icon_template: 'mdi:account'
      unit_of_measurement: 'β'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','results') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|length > 0 %}
            {% set options = state_attr('input_select.motion_${MOTION_CAMERA}_detect_entity','options') %}
            {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
              {% set l = s|selectattr('entity','in',options)|map(attribute='confidence')|list %}
              {% if l|lower != 'none' and l|length > 0 %}
                {% set p = s|selectattr('entity','in',options)|map(attribute='confidence')|max|int %}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence.state %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_confidence_mean:
      friendly_name: '${MOTION_CAMERA} 🚶 confidence mean'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_confidence_min:
      friendly_name: '${MOTION_CAMERA} 🚶 confidence min'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_confidence_max:
      friendly_name: '${MOTION_CAMERA} 🚶 confidence max'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_confidence_stdev:
      friendly_name: '${MOTION_CAMERA} 🚶 confidence stdev'
      unit_of_measurement: 'β'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_confidence_change:
#      friendly_name: '${MOTION_CAMERA} 🚶 confidence change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_confidence_stdev_change:
#      friendly_name: '${MOTION_CAMERA} 🚶 confidence stdev change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_confidence_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} 🚶 confidence stdev mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_entity_confidence_change_mean:
#      friendly_name: '${MOTION_CAMERA} 🚶 confidence change mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_change_statistics|float }}
#        {%- else -%}null{%- endif -%}
#
- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_entity_confidence_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_entity_confidence
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_entity_confidence_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_entity_confidence_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_entity_confidence_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## percent
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_percent:
      friendly_name: '${MOTION_CAMERA} 🚶 %'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_counter')|int > 0 and states('sensor.motion_annotated_counter')|int > 0 %}
          {% set value = states('sensor.motion_${MOTION_CAMERA}_detected_entity_counter')|int / states('sensor.motion_annotated_counter')|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_percent_mean:
      friendly_name: '${MOTION_CAMERA} 🚶 %avg'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_percent_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_percent_min:
      friendly_name: '${MOTION_CAMERA} 🚶 min'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_percent_statistics.attributes.min_value|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_percent_max:
      friendly_name: '${MOTION_CAMERA} 🚶 max'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_percent_statistics.attributes.max_value|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_percent_stdev:
      friendly_name: '${MOTION_CAMERA} 🚶 stdev'
      unit_of_measurement: '%'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_percent_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_entity_percent_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_entity_percent
  sampling_size: 100
  max_age:
    hours: 72

###
## complete
###

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_complete:
      unit_of_measurement: 's'
      friendly_name: '${MOTION_CAMERA} complete'
      value_template: >
        {% set c = as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_annotated.last_updated) %}
        {% set s = as_timestamp(states.sensor.motion_${MOTION_CAMERA}_event_annotated.last_updated) %}
        {{  c|float - s|float }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_entity_complete_mean:
      friendly_name: '${MOTION_CAMERA} complete μ'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_complete_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_complete_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_complete_min:
      friendly_name: '${MOTION_CAMERA} complete min'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_complete_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_complete_statistics.attributes.min_value|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_complete_max:
      friendly_name: '${MOTION_CAMERA} complete max'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_complete_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_complete_statistics.attributes.max_value|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_entity_complete_stdev:
      friendly_name: '${MOTION_CAMERA} complete stdev'
      unit_of_measurement: '%'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_entity_complete_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_entity_complete_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_entity_complete_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_entity_complete
  sampling_size: 100
  max_age:
    hours: 72

###
## person
###

# array of 👱 count
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person:
      icon_template: 'mdi:counter'
      value_template: >-
        {% set options = state_attr('input_select.motion_${MOTION_CAMERA}_detect_person','options') %}
        {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
          {% set array = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','results') %}
          {% if array|lower != 'none' and array|lower != 'unknown' and array|length > 0 %}
            {% for results in array %}
              {%- if loop.first -%}[{%- else -%},{%- endif -%}
              {% if results.entity in options and results.confidence|int >= states('sensor.motion_detected_person_threshold')|int %}
                1
              {% else %}
                0
              {% endif %}
              {%- if loop.last -%}]{%- endif -%}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## sensor from counter

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_counter:
      friendly_name: '${MOTION_CAMERA} 👱 counter'
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_detected_person_counter') }}

## TODAY

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_person_ratio
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_person
  state: 'on'
  type: ratio
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_person_counter
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_person
  state: 'on'
  type: count
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_person_time
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_person
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_ratio_today:
      friendly_name: 'Today 👱 ratio'
      unit_of_measurement: '%'
      icon_template: 'mdi:percent'
      value_template: >
        {{ states('sensor.motion_${MOTION_CAMERA}_today_person_ratio') }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_counter_today:
      friendly_name: 'Today 👱 counter'
      unit_of_measurement: 'events'
      icon_template: 'mdi:counter'
      value_template: >-
        {{ states('sensor.motion_${MOTION_CAMERA}_today_person_counter')|int }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_time_today:
      friendly_name: 'Today 👱 time'
      unit_of_measurement: 'h'
      icon_template: 'mdi:timer-outline'
      value_template: >
        {{ states('sensor.motion_${MOTION_CAMERA}_today_person_time')|float }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_status_today:
      friendly_name: 'Today person'
      icon_template: 'mdi:account'
      value_template: >-
        {% set c = states('sensor.motion_${MOTION_CAMERA}_detected_person_counter_today') %}
        {% set r = states('sensor.motion_${MOTION_CAMERA}_detected_person_ratio_today') %}
        {% set t = states('sensor.motion_${MOTION_CAMERA}_detected_person_time_today') %}
        {% if c|lower != 'unknown' and r|lower != 'unknown' and t|lower != 'unknown' %}
          {{ c -}}; {{ t }} hours; {{ r }}%
        {% else %}No persons detected today{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_event:
      friendly_name: '${MOTION_CAMERA} 👱 event'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.event %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_event') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_camera:
      friendly_name: '${MOTION_CAMERA} 👱 camera'
      icon_template: 'mdi:camera'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.camera %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_camera') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_elapsed:
      friendly_name: '${MOTION_CAMERA} 👱 elapsed'
      icon_template: 'mdi:timer'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.elapsed %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_elapsed') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_date:
      friendly_name: '${MOTION_CAMERA} 👱 date'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.end %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_when:
      friendly_name: '${MOTION_CAMERA} 👱 when'
      icon_template: 'mdi:calendar-clock'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_date')|int > 0 %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_date') %}
          {% if s|int > 0 %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_when') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

# level

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_activity_icon:
      value_template: >-
        {%- if states.sensor.motion_${MOTION_CAMERA}_detected_person_date|lower != 'none'
               and states('sensor.motion_${MOTION_CAMERA}_detected_person_date')|lower != 'unknown'
               and states('sensor.motion_${MOTION_CAMERA}_detected_person_date')|lower != 'null'
               and states.sensor.motion_${MOTION_CAMERA}_detected_person_ago|lower != 'none'
               and states('sensor.motion_${MOTION_CAMERA}_detected_person_ago')|lower != 'unknown'
               and states('sensor.motion_${MOTION_CAMERA}_detected_person_ago')|lower != 'null' -%}
          {%- if states('sensor.motion_${MOTION_CAMERA}_detected_person_counter_today')|lower != 'unknown'
                 and states('sensor.motion_${MOTION_CAMERA}_detected_person_counter_today')|lower != 'null'
                 and states('sensor.motion_${MOTION_CAMERA}_detected_person_counter_today')|int <= 0 -%}
            {{ 'mdi:account-box' }}
          {%- elif (states('sensor.motion_${MOTION_CAMERA}_detected_person_ago')|int / 3600)|int > 0 -%}
            {{ 'mdi:account-multiple-remove' }}
          {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_ago_high_persistent','on') -%}
            {{ 'mdi:account-multiple-minus' }}
          {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_ago_high','on') -%}
            {{ 'mdi:account-minus' }}
          {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_ago_low_persistent','on') -%}
            {{ 'mdi:account-multiple-plus' }}
          {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_ago_low','on') -%}
            {{ 'mdi:account-plus' }}
          {%- else -%}
            {{ 'mdi:account' }}
          {%- endif -%}
        {%- else -%}
          {{ 'mdi:account-clock' }}
        {%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_activity_level:
      friendly_name: 'Person activity'
      icon_template: >-
        {{ states('sensor.motion_${MOTION_CAMERA}_person_activity_icon') }}
      value_template: >-
        {%- if states.sensor.motion_${MOTION_CAMERA}_detected_person_date|lower != 'none'
               and states('sensor.motion_${MOTION_CAMERA}_detected_person_date')|lower != 'unknown'
               and states('sensor.motion_${MOTION_CAMERA}_detected_person_date')|lower != 'null'
               and states.sensor.motion_${MOTION_CAMERA}_detected_person_ago|lower != 'none'
               and states('sensor.motion_${MOTION_CAMERA}_detected_person_ago')|lower != 'unknown'
               and states('sensor.motion_${MOTION_CAMERA}_detected_person_ago')|lower != 'null' -%}
          {%- if states('sensor.motion_${MOTION_CAMERA}_detected_person_counter_today')|lower != 'unknown'
                 and states('sensor.motion_${MOTION_CAMERA}_detected_person_counter_today')|lower != 'null'
                 and states('sensor.motion_${MOTION_CAMERA}_detected_person_counter_today')|int <= 0 -%}
            Nothing today
          {%- elif (states('sensor.motion_${MOTION_CAMERA}_detected_person_ago')|int / 3600)|int > 0 -%}
            {%- set h = (states('sensor.motion_${MOTION_CAMERA}_detected_person_ago')|int / 3600)|int -%}
            None: {{ h -}}h
          {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_ago_high_persistent','on') -%}
            Low
          {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_ago_high','on') -%}
            Decreasing
          {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_ago_low_persistent','on') -%}
            High
          {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_ago_low','on') -%}
            Increasing
          {%- else -%}
            Nominal
          {%- endif -%}
        {%- else -%}
          Pending
        {%- endif -%}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_ago_relative:
      friendly_name: '${MOTION_CAMERA} 👱 ⧖'
      icon_template: 'mdi:account'
      value_template: >
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_ago')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_ago:
      friendly_name: '${MOTION_CAMERA} ⧖'
      icon_template: 'mdi:camera-timer'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_date')|int %}
        {% if s > 0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s < 86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_ago_mean:
      friendly_name: '${MOTION_CAMERA} ⧖ μ'
      icon_template: 'mdi:account'
      unit_of_measurement: 's'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_ago_min:
#      friendly_name: '${MOTION_CAMERA} 👱 ago min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_ago_max:
#      friendly_name: '${MOTION_CAMERA} 👱 ago max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} 👱 ago stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_ago_change:
#      friendly_name: '${MOTION_CAMERA} 👱 ago change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_ago_stdev_change:
#      friendly_name: '${MOTION_CAMERA} 👱 ago stdev change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_ago_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} 👱 ago stdev mean'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_ago_change_mean:
#      friendly_name: '${MOTION_CAMERA} 👱 ago change mean'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_ago_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

# statistics
- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_person_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_ago
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_person_ago_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_ago_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_person_ago_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_ago_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## count

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_count:
      friendly_name: '${MOTION_CAMERA} Σ'
      icon_template: 'mdi:counter'
      unit_of_measurement: '👱'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person') %}
          {% if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' and s|length > 0 %}
            {% set s = s|from_json %}
            {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s is iterable %}
              {% set p = s|sum|int %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_expired','off') %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_detected_person_count.state %}
          {% if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_count_mean:
      friendly_name: '${MOTION_CAMERA} Σ μ'
      icon_template: 'mdi:account'
      unit_of_measurement: '👱'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_count_min:
      friendly_name: '${MOTION_CAMERA} Σ min'
      unit_of_measurement: '👱'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_count_max:
      friendly_name: '${MOTION_CAMERA} Σ max'
      unit_of_measurement: '👱'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_count_stdev:
      friendly_name: '${MOTION_CAMERA} Σ σ'
      unit_of_measurement: '👱'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_count_change:
      friendly_name: '${MOTION_CAMERA} Σ Δ'
      unit_of_measurement: '👱'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_count_statistics.attributes.change|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_count_stdev_change:
      friendly_name: '${MOTION_CAMERA} Σ σ Δ'
      unit_of_measurement: '👱'
      value_template: >
        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_count_stdev_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_count_stdev_statistics.attributes.change|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_count_stdev_mean:
      friendly_name: '${MOTION_CAMERA} Σ σ µ'
      unit_of_measurement: '👱'
      value_template: >
        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_count_stdev_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_count_stdev_statistics|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_count_change_mean:
      friendly_name: '${MOTION_CAMERA} Σ Δ µ'
      unit_of_measurement: '👱'
      value_template: >
        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_count_change_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_count_change_statistics|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_person_count_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_count
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_person_count_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_count_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_person_count_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_count_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## confidence

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_confidence:
      friendly_name: '${MOTION_CAMERA} 👱 (β)'
      icon_template: 'mdi:account'
      unit_of_measurement: 'β'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','results') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|length > 0 %}
            {% set options = state_attr('input_select.motion_${MOTION_CAMERA}_detect_person','options') %}
            {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
              {% set l = s|selectattr('entity','in',options)|map(attribute='confidence')|list %}
              {% if l|lower != 'none' and l|length > 0 %}
                {% set p = s|selectattr('entity','in',options)|map(attribute='confidence')|max|int %}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence.state %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_person_confidence_mean:
      friendly_name: '${MOTION_CAMERA} 👱 confidence mean'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_confidence_min:
      friendly_name: '${MOTION_CAMERA} 👱 confidence min'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_confidence_max:
      friendly_name: '${MOTION_CAMERA} 👱 confidence max'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_person_confidence_stdev:
      friendly_name: '${MOTION_CAMERA} 👱 confidence stdev'
      unit_of_measurement: 'β'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_confidence_change:
#      friendly_name: '${MOTION_CAMERA} 👱 confidence change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_confidence_stdev_change:
#      friendly_name: '${MOTION_CAMERA} 👱 confidence stdev change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_confidence_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} 👱 confidence stdev mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_person_confidence_change_mean:
#      friendly_name: '${MOTION_CAMERA} 👱 confidence change mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence_change_statistics|float }}
#        {%- else -%}null{%- endif -%}
#
- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_person_confidence_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_confidence
  sampling_size: 1000
  max_age:
    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_person_confidence_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_confidence_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_person_confidence_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_confidence_change
#  sampling_size: 100
#  max_age:
#    hours: 24

###
## vehicle
###

# array of 🚗 count
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle:
      icon_template: 'mdi:counter'
      value_template: >-
        {% set options = state_attr('input_select.motion_${MOTION_CAMERA}_detect_vehicle','options') %}
        {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
          {% set array = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','results') %}
          {% if array|lower != 'none' and array|lower != 'unknown' and array|length > 0 %}
            {% for results in array %}
              {%- if loop.first -%}[{%- else -%},{%- endif -%}
              {% if results.entity in options and results.confidence|int >= states('sensor.motion_detected_vehicle_threshold')|int %}
                1
              {% else %}
                0
              {% endif %}
              {%- if loop.last -%}]{%- endif -%}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## sensor from counter

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_counter:
      friendly_name: '${MOTION_CAMERA} 🚗 counter'
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_detected_vehicle_counter') }}

## TODAY

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_vehicle_ratio
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle
  state: 'on'
  type: ratio
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_vehicle_counter
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle
  state: 'on'
  type: count
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_vehicle_time
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_ratio_today:
      friendly_name: 'Today 🚗 ratio'
      unit_of_measurement: '%'
      icon_template: 'mdi:percent'
      value_template: >
        {{ states('sensor.motion_today_vehicle_ratio') }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_counter_today:
      friendly_name: 'Today 🚗 counter'
      unit_of_measurement: 'events'
      icon_template: 'mdi:counter'
      value_template: >-
        {{ states('sensor.motion_today_vehicle_counter')|int }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_time_today:
      friendly_name: 'Today 🚗 time'
      unit_of_measurement: 'h'
      icon_template: 'mdi:timer-outline'
      value_template: >
        {{ states('sensor.motion_today_vehicle_time')|float }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_status_today:
      friendly_name: 'Today vehicle'
      icon_template: 'mdi:car'
      value_template: >-
        {% set c = states('sensor.motion_detected_vehicle_counter_today') %}
        {% set r = states('sensor.motion_detected_vehicle_ratio_today') %}
        {% set t = states('sensor.motion_detected_vehicle_time_today') %}
        {% if c|lower != 'unknown' and r|lower != 'unknown' and t|lower != 'unknown' %}
          {{ c -}}; {{ t }} hours; {{ r }}%
        {% else %}No vehicles detected today{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_event:
      friendly_name: '${MOTION_CAMERA} 🚗 event'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.event %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_event') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_camera:
      friendly_name: '${MOTION_CAMERA} 🚗 camera'
      icon_template: 'mdi:camera'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.camera %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_camera') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_elapsed:
      friendly_name: '${MOTION_CAMERA} 🚗 elapsed'
      icon_template: 'mdi:timer'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle','on') or is_state('binary_sensor.motion_detected_${MOTION_CAMERA}_vehicle_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.elapsed %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_elapsed') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_date:
      friendly_name: '${MOTION_CAMERA} 🚗 date'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.end %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_when:
      friendly_name: '${MOTION_CAMERA} 🚗 when'
      icon_template: 'mdi:calendar-clock'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_date')|int > 0 %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_date') %}
          {% if s|int > 0 %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_when') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_ago_relative:
      friendly_name: '${MOTION_CAMERA} 🚗 ⧖'
      icon_template: 'mdi:car'
      value_template: >
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_ago:
      friendly_name: '${MOTION_CAMERA} ⧖'
      icon_template: 'mdi:camera-timer'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_date')|int %}
        {% if s > 0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s < 86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_ago_mean:
      friendly_name: '${MOTION_CAMERA} ⧖ μ'
      unit_of_measurement: 's'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_ago_min:
#      friendly_name: '${MOTION_CAMERA} 🚗 ago min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_ago_max:
#      friendly_name: '${MOTION_CAMERA} 🚗 ago max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} 🚗 ago stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_ago_change:
#      friendly_name: '${MOTION_CAMERA} 🚗 ago change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev_change:
#      friendly_name: '${MOTION_CAMERA} 🚗 ago stdev change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} 🚗 ago stdev mean'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_ago_change_mean:
#      friendly_name: '${MOTION_CAMERA} 🚗 ago change mean'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

# statistics
- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_vehicle_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_vehicle_ago_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_ago_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## count

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_count:
      friendly_name: '${MOTION_CAMERA} Σ'
      icon_template: 'mdi:counter'
      unit_of_measurement: '🚗'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle') %}
          {% if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' and s|length > 0 %}
            {% set s = s|from_json %}
            {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s is iterable %}
              {% set p = s|sum|int %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle_expired','off') %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count.state %}
          {% if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_count_mean:
      friendly_name: '${MOTION_CAMERA} Σ μ'
      icon_template: 'mdi:car'
      unit_of_measurement: '🚗'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_count_min:
#      friendly_name: '${MOTION_CAMERA} Σ min'
#      unit_of_measurement: '🚗'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_count_max:
#      friendly_name: '${MOTION_CAMERA} Σ max'
#      unit_of_measurement: '🚗'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_count_stdev:
#      friendly_name: '${MOTION_CAMERA} Σ σ'
#      unit_of_measurement: '🚗'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_count_change:
#      friendly_name: '${MOTION_CAMERA} Σ Δ'
#      unit_of_measurement: '🚗'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_count_stdev_change:
#      friendly_name: '${MOTION_CAMERA} Σ σ Δ'
#      unit_of_measurement: '🚗'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_count_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} Σ σ µ'
#      unit_of_measurement: '🚗'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_count_change_mean:
#      friendly_name: '${MOTION_CAMERA} Σ Δ µ'
#      unit_of_measurement: '🚗'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_vehicle_count_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_count
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_vehicle_count_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_vehicle_count_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_count_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## confidence

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_confidence:
      friendly_name: '${MOTION_CAMERA} 🚗 (β)'
      icon_template: 'mdi:car'
      unit_of_measurement: 'β'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') or is_state('binary_sensor.motion_detected_${MOTION_CAMERA}_vehicle_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','results') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|length > 0 %}
            {% set options = state_attr('input_select.motion_${MOTION_CAMERA}_detect_vehicle','options') %}
            {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
              {% set l = s|selectattr('entity','in',options)|map(attribute='confidence')|list %}
              {% if l|lower != 'none' and l|length > 0 %}
                {% set p = s|selectattr('entity','in',options)|map(attribute='confidence')|max|int %}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence.state %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_vehicle_confidence_mean:
      friendly_name: '${MOTION_CAMERA} 🚗 confidence mean'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_vehicle_confidence_min:
      friendly_name: '${MOTION_CAMERA} 🚗 confidence min'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_vehicle_confidence_max:
      friendly_name: '${MOTION_CAMERA} 🚗 confidence max'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev:
      friendly_name: '${MOTION_CAMERA} 🚗 confidence stdev'
      unit_of_measurement: 'β'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_confidence_change:
#      friendly_name: '${MOTION_CAMERA} 🚗 confidence change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev_change:
#      friendly_name: '${MOTION_CAMERA} 🚗 confidence stdev change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} 🚗 confidence stdev mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_vehicle_confidence_change_mean:
#      friendly_name: '${MOTION_CAMERA} 🚗 confidence change mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_change_statistics|float }}
#        {%- else -%}null{%- endif -%}
#
- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_vehicle_confidence_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence
  sampling_size: 1000
  max_age:
    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_vehicle_confidence_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_confidence_change
#  sampling_size: 100
#  max_age:
#    hours: 24

###
## animal
###

# array of 🐄 count
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal:
      icon_template: 'mdi:counter'
      value_template: >-
        {% set options = state_attr('input_select.motion_${MOTION_CAMERA}_detect_animal','options') %}
        {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
          {% set array = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','results') %}
          {% if array|lower != 'none' and array|lower != 'unknown' and array|length > 0 %}
            {% for results in array %}
              {%- if loop.first -%}[{%- else -%},{%- endif -%}
              {% if results.entity in options and results.confidence|int >= states('sensor.motion_detected_animal_threshold')|int %}
                1
              {% else %}
                0
              {% endif %}
              {%- if loop.last -%}]{%- endif -%}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## sensor from counter

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_counter:
      friendly_name: '${MOTION_CAMERA} 🐄 counter'
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_detected_animal_counter') }}

## TODAY

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_animal_ratio
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_animal
  state: 'on'
  type: ratio
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_animal_counter
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_animal
  state: 'on'
  type: count
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: motion_${MOTION_CAMERA}_today_animal_time
  entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_animal
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_ratio_today:
      friendly_name: 'Today 🐄 ratio'
      unit_of_measurement: '%'
      icon_template: 'mdi:percent'
      value_template: >
        {{ states('sensor.motion_today_animal_ratio') }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_counter_today:
      friendly_name: 'Today 🐄 counter'
      unit_of_measurement: 'events'
      icon_template: 'mdi:counter'
      value_template: >-
        {{ states('sensor.motion_today_animal_counter')|int }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_time_today:
      friendly_name: 'Today 🐄 time'
      unit_of_measurement: 'h'
      icon_template: 'mdi:timer-outline'
      value_template: >
        {{ states('sensor.motion_today_animal_time')|float }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_status_today:
      friendly_name: 'Today animal'
      icon_template: 'mdi:cow'
      value_template: >-
        {% set c = states('sensor.motion_detected_animal_counter_today') %}
        {% set r = states('sensor.motion_detected_animal_ratio_today') %}
        {% set t = states('sensor.motion_detected_animal_time_today') %}
        {% if c|lower != 'unknown' and r|lower != 'unknown' and t|lower != 'unknown' %}
          {{ c -}}; {{ t }} hours; {{ r }}%
        {% else %}No animals detected today{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_event:
      friendly_name: '${MOTION_CAMERA} 🐄 event'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.event %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_event') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_camera:
      friendly_name: '${MOTION_CAMERA} 🐄 camera'
      icon_template: 'mdi:camera'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.camera %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_camera') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_elapsed:
      friendly_name: '${MOTION_CAMERA} 🐄 elapsed'
      icon_template: 'mdi:timer'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.elapsed %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_elapsed') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_date:
      friendly_name: '${MOTION_CAMERA} 🐄 date'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.end %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_when:
      friendly_name: '${MOTION_CAMERA} 🐄 when'
      icon_template: 'mdi:calendar-clock'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_date')|int > 0 %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_date') %}
          {% if s|int > 0 %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_when') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_ago_relative:
      friendly_name: '${MOTION_CAMERA} 🐄 ⧖'
      icon_template: 'mdi:cow'
      value_template: >
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_ago')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_ago:
      friendly_name: '${MOTION_CAMERA} ⧖'
      icon_template: 'mdi:camera-timer'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_date')|int %}
        {% if s > 0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s < 86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_ago_mean:
      friendly_name: '${MOTION_CAMERA} ⧖ μ'
      unit_of_measurement: 's'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_ago_min:
#      friendly_name: '${MOTION_CAMERA} 🐄 ago min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_ago_max:
#      friendly_name: '${MOTION_CAMERA} 🐄 ago max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} 🐄 ago stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_ago_change:
#      friendly_name: '${MOTION_CAMERA} 🐄 ago change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_ago_stdev_change:
#      friendly_name: '${MOTION_CAMERA} 🐄 ago stdev change'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_ago_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} 🐄 ago stdev mean'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_ago_change_mean:
#      friendly_name: '${MOTION_CAMERA} 🐄 ago change mean'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_ago_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

# statistics
- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_animal_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_ago
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_animal_ago_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_ago_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_animal_ago_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_ago_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## count

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_count:
      friendly_name: '${MOTION_CAMERA} Σ'
      icon_template: 'mdi:counter'
      unit_of_measurement: '🐄'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal') %}
          {% if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' and s|length > 0 %}
            {% set s = s|from_json %}
            {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s is iterable %}
              {% set p = s|sum|int %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal_expired','off') %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_detected_animal_count.state %}
          {% if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_count_mean:
      friendly_name: '${MOTION_CAMERA} Σ μ'
      icon_template: 'mdi:cow'
      unit_of_measurement: '🐄'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_count_min:
#      friendly_name: '${MOTION_CAMERA} Σ min'
#      unit_of_measurement: '🐄'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_count_max:
#      friendly_name: '${MOTION_CAMERA} Σ max'
#      unit_of_measurement: '🐄'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_count_stdev:
#      friendly_name: '${MOTION_CAMERA} Σ σ'
#      unit_of_measurement: '🐄'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_count_change:
#      friendly_name: '${MOTION_CAMERA} Σ Δ'
#      unit_of_measurement: '🐄'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_count_stdev_change:
#      friendly_name: '${MOTION_CAMERA} Σ σ Δ'
#      unit_of_measurement: '🐄'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_count_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} Σ σ µ'
#      unit_of_measurement: '🐄'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_count_change_mean:
#      friendly_name: '${MOTION_CAMERA} Σ Δ µ'
#      unit_of_measurement: '🐄'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_count_change_statistics|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_animal_count_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_count
  sampling_size: 1000
  max_age:
    hours: 24

#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_animal_count_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_count_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_animal_count_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_count_change
#  sampling_size: 100
#  max_age:
#    hours: 24

## confidence

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_confidence:
      friendly_name: '${MOTION_CAMERA} 🐄 (β)'
      icon_template: 'mdi:cow'
      unit_of_measurement: 'β'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','results') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|length > 0 %}
            {% set options = state_attr('input_select.motion_${MOTION_CAMERA}_detect_animal','options') %}
            {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
              {% set l = s|selectattr('entity','in',options)|map(attribute='confidence')|list %}
              {% if l|lower != 'none' and l|length > 0 %}
                {% set p = s|selectattr('entity','in',options)|map(attribute='confidence')|max|int %}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence.state %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_detected_animal_confidence_mean:
      friendly_name: '${MOTION_CAMERA} 🐄 confidence mean'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_animal_confidence_min:
      friendly_name: '${MOTION_CAMERA} 🐄 confidence min'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_animal_confidence_max:
      friendly_name: '${MOTION_CAMERA} 🐄 confidence max'
      unit_of_measurement: 'β'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_detected_animal_confidence_stdev:
      friendly_name: '${MOTION_CAMERA} 🐄 confidence stdev'
      unit_of_measurement: 'β'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_confidence_change:
#      friendly_name: '${MOTION_CAMERA} 🐄 confidence change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_confidence_stdev_change:
#      friendly_name: '${MOTION_CAMERA} 🐄 confidence stdev change'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_stdev_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_confidence_stdev_mean:
#      friendly_name: '${MOTION_CAMERA} 🐄 confidence stdev mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_stdev_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_stdev_statistics|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_detected_animal_confidence_change_mean:
#      friendly_name: '${MOTION_CAMERA} 🐄 confidence change mean'
#      unit_of_measurement: 'β'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_change_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_change_statistics|float }}
#        {%- else -%}null{%- endif -%}
#
- platform: statistics
  name: motion_${MOTION_CAMERA}_detected_animal_confidence_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_confidence
  sampling_size: 1000
  max_age:
    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_animal_confidence_stdev_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_stdev
#  sampling_size: 100
#  max_age:
#    hours: 24
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_detected_animal_confidence_change_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_confidence_change
#  sampling_size: 100
#  max_age:
#    hours: 24

###
## face
###

## event_face
- platform: mqtt
  name: motion_${MOTION_CAMERA}_event_face
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/face/+'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/face/+'
  expire_after: !secret motion-face-expire-after
  force_update: !secret motion-face-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## status
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_status:
      friendly_name: '${MOTION_CAMERA} FACE'
      value_template: >-
        {% if states('binary_sensor.motion_${MOTION_CAMERA}_face')|lower == 'on' %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','detected')|map(attribute='entity')|list %}
            {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','count') %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            ANNOTATED: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_${MOTION_CAMERA}_face_counter') -}}/{{- states('sensor.motion_face_counter') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_face_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_counter:
      friendly_name: '${MOTION_CAMERA} face counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_face_counter')|int }}

## date
- platform: template
  sensors:
    # date
    motion_${MOTION_CAMERA}_face_date:
      unit_of_measurement: 's'
      value_template: >-
        {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') %}
        {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
          {% set s = e.end %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
            {{ s|int }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## when
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_when:
      friendly_name: '${MOTION_CAMERA} face when'
      value_template: >-
        {% set s = states('sensor.motion_${MOTION_CAMERA}_face_date')|int %}
        {% if s > 0 %}
          {% set n = utcnow().timestamp() %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}; {{ (n|int-s)|int }} lag
        {% else %}Pending{% endif %}

## count 

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_count:
      friendly_name: '${MOTION_CAMERA} face count'
      unit_of_measurement: face
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_face','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_face_expired','off') %}
          {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','count') %}
          {% if count|lower != 'none' and count|lower != 'unknown' and count != 'null' %}
            {{ count|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_face_count_mean:
#      friendly_name: '${MOTION_CAMERA} count avg'
#      unit_of_measurement: faces
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_count_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_count_min:
#      friendly_name: '${MOTION_CAMERA} count min'
#      unit_of_measurement: faces
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_count_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_count_max:
#      friendly_name: '${MOTION_CAMERA} count max'
#      unit_of_measurement: faces
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_count_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_count_stdev:
#      friendly_name: '${MOTION_CAMERA} count stdev'
#      unit_of_measurement: faces
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_count_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_face_count_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_face_count
#  sampling_size: 100
#  max_age:
#    hours: 72

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_ago:
      friendly_name: '${MOTION_CAMERA} face ago'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_face_date')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_face_ago_mean:
#      friendly_name: '${MOTION_CAMERA} face ago avg'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_ago_min:
#      friendly_name: '${MOTION_CAMERA} face min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_ago_max:
#      friendly_name: '${MOTION_CAMERA} face max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} face stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_face_ago_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_face_ago
#  sampling_size: 100
#  max_age:
#    hours: 72
#

## percent

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_percent:
      friendly_name: '${MOTION_CAMERA} face percent'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_counter')|int > 0 and states('sensor.motion_end_counter')|int > 0 %}
          {% set value = states.sensor.motion_${MOTION_CAMERA}_face_counter.state|int / states.sensor.motion_end_counter.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_face_percent_mean:
#      friendly_name: '${MOTION_CAMERA} face percent avg'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_percent_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_percent_min:
#      friendly_name: '${MOTION_CAMERA} face percent min'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_percent_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_percent_max:
#      friendly_name: '${MOTION_CAMERA} face percent max'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_percent_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_percent_stdev:
#      friendly_name: '${MOTION_CAMERA} face percent stdev'
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_percent_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_face_percent_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_face_percent
#  sampling_size: 100
#  max_age:
#    hours: 72
#

## delay 

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_delay:
      friendly_name: '${MOTION_CAMERA} FACE delay'
      unit_of_measurement: 's'
      value_template: >
        {%- set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','timestamp') -%}
        {%- if s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' and s != null -%}
          {%- set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') -%}
          {%- if e|lower != 'unavailable' and e|lower != 'none' and e|lower != 'unknown' and e != null and e is iterable %}
            {%- set t = e.timestamp.end -%}
            {%- if t|lower != 'unavailable' and t|lower != 'none' and t|lower != 'unknown' and t != null and t|length > 0 %}
              {{- as_timestamp(s)|int - as_timestamp(t)|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_face_delay_mean:
#      friendly_name: '${MOTION_CAMERA} face delay avg'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_delay_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_delay_min:
#      friendly_name: '${MOTION_CAMERA} face delay min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_delay_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_delay_max:
#      friendly_name: '${MOTION_CAMERA} face delay max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_delay_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_delay_stdev:
#      friendly_name: '${MOTION_CAMERA} face delay stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_delay_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_face_delay_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_face_delay
#  sampling_size: 100
#  max_age:
#    hours: 72

###
## face_detected
###

## human readable status
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_status:
      friendly_name: '${MOTION_CAMERA} face detected status'
      value_template: >-
        {% if states('binary_sensor.motion_${MOTION_CAMERA}_face_detected')|lower == 'on' %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','detected')|list %}
            {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','count')|int %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            FACE: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_${MOTION_CAMERA}_face_detected_counter') -}}/{{- states('sensor.motion_face_detected_counter') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count_entity
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_count_entity:
      friendly_name: '${MOTION_CAMERA} face detected count entity'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_face_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_face_detected_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected')|selectattr('entity','==',states('sensor.motion_${MOTION_CAMERA}_detect_entity'))|map(attribute='count')|sum %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_counter:
      friendly_name: '${MOTION_CAMERA} face detected counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_face_detected_counter')|int }}

## date
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_date:
      friendly_name: '${MOTION_CAMERA} face detected date'
      unit_of_measurement: 's'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_face_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_face_detected_expired','off') %}
          {% set date = states('sensor.motion_${MOTION_CAMERA}_annotated_date')|int %}
          {% if date > 0 %}{{ date }}{% else %}null{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_when:
      friendly_name: '${MOTION_CAMERA} face detected when'
      value_template: >-
        {% set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_date')|int %}
        {% if s > 0 %}
          {% set n = utcnow().timestamp() %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_ago:
      friendly_name: '${MOTION_CAMERA} face detected ago'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_date')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_ago_mean:
      friendly_name: '${MOTION_CAMERA} detected ago avg'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics|lower != 'none' %}
          {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.state|int is number %}
            {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.state|float }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_face_detected_ago_min:
      friendly_name: '${MOTION_CAMERA} detected ago min'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_face_detected_ago_max:
      friendly_name: '${MOTION_CAMERA} detected ago max'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_face_detected_ago_stdev:
      friendly_name: '${MOTION_CAMERA} detected ago stdev'
      unit_of_measurement: 's'
      value_template: >
        {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_face_detected_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_face_detected_ago
  sampling_size: 100
  max_age:
    hours: 72

## count

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_count:
      friendly_name: '${MOTION_CAMERA} face detected count'
      unit_of_measurement: face
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_face_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_face_detected_expired','off') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_count') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_count_mean:
      friendly_name: '${MOTION_CAMERA} face detected count avg'
      unit_of_measurement: face
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_face_detected_count_min:
      friendly_name: '${MOTION_CAMERA} face detected count min'
      unit_of_measurement: face
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_face_detected_count_max:
      friendly_name: '${MOTION_CAMERA} face detected count max'
      unit_of_measurement: face
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_face_detected_count_stdev:
      friendly_name: '${MOTION_CAMERA} face detected count stdev'
      unit_of_measurement: face
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_face_detected_count_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_face_detected_count
  sampling_size: 100
  max_age:
    hours: 72

## percent

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_percent:
      friendly_name: '${MOTION_CAMERA} face detected percent'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_counter')|int > 0 and states('sensor.motion_annotated_counter')|int > 0 %}
          {% set value = states.sensor.motion_${MOTION_CAMERA}_face_detected_counter.state|int / states.sensor.motion_annotated_counter.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_face_detected_percent_mean:
#      friendly_name: '${MOTION_CAMERA} face detected percent'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_percent_min:
#      friendly_name: '${MOTION_CAMERA} face detected percent min'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_percent_max:
#      friendly_name: '${MOTION_CAMERA} face detected percent max'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_percent_stdev:
#      friendly_name: '${MOTION_CAMERA} face detected percent stdev'
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_face_detected_percent_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_face_detected_percent
#  sampling_size: 100
#  max_age:
#    hours: 72

###
# alpr
###

- platform: mqtt
  name: motion_${MOTION_CAMERA}_event_alpr
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/alpr/+'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/alpr/+'
  expire_after: !secret motion-alpr-expire-after
  force_update: !secret motion-alpr-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## status
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_status:
      friendly_name: '${MOTION_CAMERA} ALPR status'
      value_template: >-
        {% if states('binary_sensor.motion_${MOTION_CAMERA}_alpr')|lower == 'on' %}
          {%- set e = states('sensor.motion_${MOTION_CAMERA}_event_alpr') -%}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            Counter: {{ states('counter.motion_${MOTION_CAMERA}_alpr_counter') -}}/{{- states('sensor.motion_alpr_counter') -}};
            State: {{ e|lower == 'true'  -}};
            {%- set event = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','event') -%}
            {%- set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','count') -%}
            {%- set detected = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','detected') -%}
            {%- set when = event.end|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -%}
            {%- if event.elapsed > 0 -%}Duration: {{ event.elapsed }} seconds{%- else -%}None{%- endif -%};
            {% set what = state_attr('sensor.motion_event_alpr','detected') %}
            {% if what is none or what|lower == 'unknown' or what|length == 0 %}{% set what = 'nothing' %}{% endif %}
            {%- if count > 0 -%}{{ count }} entities: {{ what }}{%- else -%}nothing{%- endif -%}; from {{ event.device -}}/{{- event.camera -}}/{{- event.event -}}; at {{ when -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_alpr_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_count:
      friendly_name: '${MOTION_CAMERA} alpr count'
      unit_of_measurement: license
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr_expired','off') %}
          {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','count') %}
          {% if count|lower != 'none' and count|lower != 'unknown' and count != 'null' %}
            {{ count|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_counter:
      friendly_name: '${MOTION_CAMERA} alpr counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_alpr_counter')|int }}

## date
- platform: template
  sensors:
    # date
    motion_${MOTION_CAMERA}_alpr_date:
      unit_of_measurement: 's'
      value_template: >-
        {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','event') %}
        {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
          {% set s = e.end %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
            {{ s|int }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## when
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_when:
      friendly_name: '${MOTION_CAMERA} alpr when'
      value_template: >-
        {% set s = states('sensor.motion_${MOTION_CAMERA}_alpr_date')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## ago
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_ago:
      friendly_name: '${MOTION_CAMERA} alpr ago'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_alpr_date')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## delay

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_delay:
      friendly_name: '${MOTION_CAMERA} ALPR delay'
      unit_of_measurement: 's'
      value_template: >
        {%- set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','timestamp') -%}
        {%- if s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' and s != null -%}
          {%- set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','event') -%}
          {%- if e|lower != 'unavailable' and e|lower != 'none' and e|lower != 'unknown' and e != null and e is iterable %}
            {%- set t = e.timestamp.end -%}
            {%- if t|lower != 'unavailable' and t|lower != 'none' and t|lower != 'unknown' and t != null and t|length > 0 %}
              {{- as_timestamp(s)|int - as_timestamp(t)|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_delay_mean:
      friendly_name: '${MOTION_CAMERA} alpr delay avg'
      unit_of_measurement: 's'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_delay_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_delay_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_delay_min:
      friendly_name: '${MOTION_CAMERA} alpr delay min'
      unit_of_measurement: 's'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_delay_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_delay_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_delay_max:
      friendly_name: '${MOTION_CAMERA} alpr delay max'
      unit_of_measurement: 's'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_delay_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_delay_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_delay_stdev:
      friendly_name: '${MOTION_CAMERA} alpr delay stdev'
      unit_of_measurement: 's'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_delay_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_delay_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_alpr_delay_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_alpr_delay
  sampling_size: 100
  max_age:
    hours: 72

###
# alpr_detected
###

## human readable status
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_status:
      friendly_name: '${MOTION_CAMERA} ALPR detected status'
      value_template: >-
        {% if states('binary_sensor.motion_${MOTION_CAMERA}_alpr')|lower == 'on' %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','detected') %}
            {% if what is none or what|lower == 'unknown' or what|length == 0 %}{% set what = 'nothing' %}{% endif %}
            {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_alpr','count')|int %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            ALPR DETECTED: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_${MOTION_CAMERA}_alpr_detected_counter') -}}/{{- states('sensor.motion_alpr_detected_counter') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_alpr_detected_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## count_entity
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_count_entity:
      friendly_name: '${MOTION_CAMERA} ALPR detected count entity'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr_detected_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','detected')|selectattr('entity','==',states('sensor.motion_${MOTION_CAMERA}_detect_entity'))|map(attribute='count')|sum %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_counter:
      friendly_name: '${MOTION_CAMERA} ALPR detected counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_alpr_detected_counter')|int }}

## date
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_date:
      friendly_name: '${MOTION_CAMERA} ALPR detected date'
      unit_of_measurement: 's'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr_detected_expired','off') %}
          {% set date = states('sensor.motion_${MOTION_CAMERA}_annotated_date')|int %}
          {% if date > 0 %}{{ date }}{% else %}null{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_alpr_detected_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_when:
      friendly_name: '${MOTION_CAMERA} ALPR detected when'
      value_template: >-
        {% set s = states('sensor.motion_${MOTION_CAMERA}_alpr_detected_date')|int %}
        {% if s > 0 %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}Pending{% endif %}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_ago:
      friendly_name: '${MOTION_CAMERA} ALPR detected ago'
      unit_of_measurement: 's'
      value_template: >
        {% set t = states('sensor.time') %}
        {% set s = states('sensor.motion_${MOTION_CAMERA}_alpr_detected_date')|int %}
        {% if s >  0 %}
          {% set s = utcnow().timestamp()|int - s %}
          {% if s <  86400 %}{{ s }}{%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_ago_mean:
      friendly_name: '${MOTION_CAMERA} detected ago avg'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics|lower != 'none' %}
          {% if states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics.state|int is number %}
            {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics.state|float }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_detected_ago_min:
      friendly_name: '${MOTION_CAMERA} detected ago min'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_detected_ago_max:
      friendly_name: '${MOTION_CAMERA} detected ago max'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_detected_ago_stdev:
      friendly_name: '${MOTION_CAMERA} detected ago stdev'
      unit_of_measurement: 's'
      value_template: >
        {% if states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics|lower != 'none' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_ago_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_alpr_detected_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_alpr_detected_ago
  sampling_size: 100
  max_age:
    hours: 72

## count

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_count:
      friendly_name: '${MOTION_CAMERA} ALPR detected count'
      unit_of_measurement: license
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr_detected','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr_detected_expired','off') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_annotated_count') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' %}
            {{ s|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_count_mean:
      friendly_name: '${MOTION_CAMERA} ALPR detected count avg'
      unit_of_measurement: license
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_count_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_detected_count_min:
      friendly_name: '${MOTION_CAMERA} ALPR detected count min'
      unit_of_measurement: license
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_count_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_detected_count_max:
      friendly_name: '${MOTION_CAMERA} ALPR detected count max'
      unit_of_measurement: license
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_count_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_alpr_detected_count_stdev:
      friendly_name: '${MOTION_CAMERA} ALPR detected count stdev'
      unit_of_measurement: license
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_count_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}
#
- platform: statistics
  name: motion_${MOTION_CAMERA}_alpr_detected_count_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_alpr_detected_count
  sampling_size: 100
  max_age:
    hours: 72

## percent
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_alpr_detected_percent:
      friendly_name: '${MOTION_CAMERA} ALPR detected percent'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_counter')|int > 0 and states('sensor.motion_annotated_counter')|int > 0 %}
          {% set value = states.sensor.motion_${MOTION_CAMERA}_alpr_detected_counter.state|int / states.sensor.motion_annotated_counter.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_alpr_detected_percent_mean:
#      friendly_name: '${MOTION_CAMERA} ALPR detected percent'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_percent_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_alpr_detected_percent_min:
#      friendly_name: '${MOTION_CAMERA} ALPR detected percent min'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_percent_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_alpr_detected_percent_max:
#      friendly_name: '${MOTION_CAMERA} ALPR detected percent max'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_percent_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_alpr_detected_percent_stdev:
#      friendly_name: '${MOTION_CAMERA} ALPR detected percent stdev'
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_alpr_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_alpr_detected_percent_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_alpr_detected_percent_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_alpr_detected_percent
#  sampling_size: 100
#  max_age:
#    hours: 72

## update camera

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_end_update:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_end.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_annotated_update:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_annotated.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_composite_update:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_composite.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_animated_update:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_animated.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_animated_mask_update:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_animated_mask.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_face_update:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_face.last_updated) }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_camera_alpr_update:
      value_template: >-
        {{ as_timestamp(states.camera.motion_${MOTION_CAMERA}_event_alpr.last_updated) }}
