###
## AUTO-GENERATED from homeassistant/motion/automation.webcam.yaml.tmpl
##
## - MOTION_DEVICE: ${MOTION_DEVICE}
## - MOTION_CAMERA: ${MOTION_CAMERA}
###

## tensorflow

#- id: motion_${MOTION_CAMERA}_start_tensorflow
#  alias: motion_${MOTION_CAMERA}_start_tensorflow
#  initial_state: off
#  trigger:
#    platform: state
#    entity_id: motion_${MOTION_CAMERA}_event_start
#  condition:
#    condition: and
#    conditions:
#      - condition: template
#        value_template: >-
#          {{ is_state('input_boolean.motion_tensorflow_detect','on') }}
#      - condition: template
#        value_template: >
#          {{ trigger.to_state.state != trigger.from_state.state }}
#      - condition: template
#        value_template: >
#          {{ trigger.to_state.state|lower == 'true' }}
#  action:
#    - service: image_processing.scan
#      entity_id: image_processing.motion_${MOTION_CAMERA}_tensorflow

## media

- id: motion_${MOTION_CAMERA}_detected_entity_media_animated
  alias: motion_${MOTION_CAMERA}_detected_entity_media_animated
  initial_state: off
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_detected_entity_date
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_media_save','on') }}
      - condition: template
        value_template: >-
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_date')|int > 0 }}
      - condition: template
        value_template: >-
          {% if is_state('input_boolean.motion_media_mask','off') %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_animated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_animated_mask','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if is_state('input_boolean.motion_media_mask','off') %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
          {% else %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
          {% endif %}
        filename: >-
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_entity_date')|int %}
          {% set w = s|timestamp_custom("%H:%M:%S") %}
          {% set year = s|timestamp_custom("%Y") %}
          {% set month = s|timestamp_custom("%b") %}
          {% set day = s|timestamp_custom("%d") %}
          {{ '/media/Motion-Ã👁/' + year + '-' + month + '-' + day + '/entity/' + w + ' at ${MOTION_CAMERA}.gif' }}

- id: motion_${MOTION_CAMERA}_detected_person_media_animated
  alias: motion_${MOTION_CAMERA}_detected_person_media_animated
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_detected_person_date
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_media_save','on') }}
      - condition: template
        value_template: >-
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_person_date')|int > 0 }}
      - condition: template
        value_template: >-
          {% if is_state('input_boolean.motion_media_mask','off') %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_animated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_animated_mask','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if is_state('input_boolean.motion_media_mask','off') %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
          {% else %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
          {% endif %}
        filename: >-
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_date')|int %}
          {% set w = s|timestamp_custom("%H:%M:%S") %}
          {% set year = s|timestamp_custom("%Y") %}
          {% set month = s|timestamp_custom("%b") %}
          {% set day = s|timestamp_custom("%d") %}
          {{ '/media/Motion-Ã👁/' + year + '-' + month + '-' + day + '/person/' + w + ' at ${MOTION_CAMERA}.gif' }}

- id: motion_${MOTION_CAMERA}_detected_vehicle_media_animated
  alias: motion_${MOTION_CAMERA}_detected_vehicle_media_animated
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_detected_vehicle_date
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_media_save','on') }}
      - condition: template
        value_template: >-
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_date')|int > 0 }}
      - condition: template
        value_template: >-
          {% if is_state('input_boolean.motion_media_mask','off') %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_animated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_animated_mask','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if is_state('input_boolean.motion_media_mask','off') %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
          {% else %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
          {% endif %}
        filename: >-
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_date')|int %}
          {% set w = s|timestamp_custom("%H:%M:%S") %}
          {% set year = s|timestamp_custom("%Y") %}
          {% set month = s|timestamp_custom("%b") %}
          {% set day = s|timestamp_custom("%d") %}
          {{ '/media/Motion-Ã👁/' + year + '-' + month + '-' + day + '/vehicle/' + w + ' at ${MOTION_CAMERA}.gif' }}

- id: motion_${MOTION_CAMERA}_detected_animal_media_animated
  alias: motion_${MOTION_CAMERA}_detected_animal_media_animated
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_detected_animal_date
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_media_save','on') }}
      - condition: template
        value_template: >-
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_animal_date')|int > 0 }}
      - condition: template
        value_template: >-
          {% if is_state('input_boolean.motion_media_mask','off') %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_animated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_animated_mask','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if is_state('input_boolean.motion_media_mask','off') %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
          {% else %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
          {% endif %}
        filename: >-
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_animal_date')|int %}
          {% set w = s|timestamp_custom("%H:%M:%S") %}
          {% set year = s|timestamp_custom("%Y") %}
          {% set month = s|timestamp_custom("%b") %}
          {% set day = s|timestamp_custom("%d") %}
          {{ '/media/Motion-Ã👁/' + year + '-' + month + '-' + day + '/animal/' + w + ' at ${MOTION_CAMERA}.gif' }}

###
# counters
###

# lost
- id: motion_${MOTION_CAMERA}_status_camera_lost_counter
  alias: motion_${MOTION_CAMERA}_status_camera_lost_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_status_camera_lost
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_status_camera_lost','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_status_camera_lost_counter

# found
- id: motion_${MOTION_CAMERA}_status_camera_found_counter
  alias: motion_${MOTION_CAMERA}_status_camera_found_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_status_camera_found
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_status_camera_found','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_status_camera_found_counter

# end
- id: motion_${MOTION_CAMERA}_end_counter
  alias: motion_${MOTION_CAMERA}_end_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_end
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_end','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_end_counter

# annotated
- id: motion_${MOTION_CAMERA}_annotated_counter
  alias: motion_${MOTION_CAMERA}_annotated_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_annotated
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_annotated_counter

# detected
- id: motion_${MOTION_CAMERA}_detected_counter
  alias: motion_${MOTION_CAMERA}_detected_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_detected_counter

# detected_entity
- id: motion_${MOTION_CAMERA}_detected_entity_counter
  alias: motion_${MOTION_CAMERA}_detected_entity_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_entity
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_detected_entity_counter

# detected_person
- id: motion_${MOTION_CAMERA}_detected_person_counter
  alias: motion_${MOTION_CAMERA}_detected_person_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_person
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_detected_person_counter

# detected_vehicle
- id: motion_${MOTION_CAMERA}_detected_vehicle_counter
  alias: motion_${MOTION_CAMERA}_detected_vehicle_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_detected_vehicle_counter

# detected_animal
- id: motion_${MOTION_CAMERA}_detected_animal_counter
  alias: motion_${MOTION_CAMERA}_detected_animal_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_animal
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_detected_animal_counter

# face
- id: motion_${MOTION_CAMERA}_face_counter
  alias: motion_${MOTION_CAMERA}_face_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_face
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_face','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_face_counter

# face_detected
- id: motion_${MOTION_CAMERA}_face_detected_counter
  alias: motion_${MOTION_CAMERA}_face_detected_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_face_detected
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_face_detected','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_face_detected_counter

# alpr
- id: motion_${MOTION_CAMERA}_alpr_counter
  alias: motion_${MOTION_CAMERA}_alpr_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_alpr
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_alpr_counter

# alpr_detected
- id: motion_${MOTION_CAMERA}_alpr_detected_counter
  alias: motion_${MOTION_CAMERA}_alpr_detected_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_alpr_detected
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr_detected','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_alpr_detected_counter

# person_face
- id: motion_${MOTION_CAMERA}_person_face_counter
  alias: motion_${MOTION_CAMERA}_person_face_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_person_face
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_person_face_counter

# vehicle_alpr
- id: motion_${MOTION_CAMERA}_vehicle_alpr_counter
  alias: motion_${MOTION_CAMERA}_vehicle_alpr_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_vehicle_alpr
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_vehicle_alpr','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_vehicle_alpr_counter

###
## capture source events
###

# end
- id: motion_${MOTION_CAMERA}_end_snapshot
  alias: motion_${MOTION_CAMERA}_end_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_end_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_end' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated_mask.gif' }}
#    - condition: template
#      value_template: >-
#        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_end_old','off') }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_end_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_end_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_end' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end.jpg' }}

# composite
- id: motion_${MOTION_CAMERA}_end_composite_snapshot
  alias: motion_${MOTION_CAMERA}_end_composite_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_end_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_end_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_composite.jpg' }}

# annotated

- id: motion_${MOTION_CAMERA}_annotated_snapshot
  alias: motion_${MOTION_CAMERA}_annotated_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_annotated_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_annotated') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_annotated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if states('sensor.motion_${MOTION_CAMERA}_annotated_count')|int > 0 %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_annotated' }}
          {% else %}
            {{ 'camera.motion_nosignal' }}
          {% endif %}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated_mask.gif' }}
#    - condition: template
#      value_template: >-
#        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated_old','off') }}
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_annotated
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/annotated.jpg'
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_annotated_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_annotated_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated_mask.gif' }}

- id: motion_${MOTION_CAMERA}_annotated_composite
  alias: motion_${MOTION_CAMERA}_annotated_composite
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_annotated_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_annotated_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_composite.jpg' }}

## face

- id: motion_${MOTION_CAMERA}_face_snapshot
  alias: motion_${MOTION_CAMERA}_face_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_face_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_face') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_face','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if states('sensor.motion_${MOTION_CAMERA}_face_count')|int > 0 %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_face' }}
          {% else %}
            {{ 'camera.motion_nosignal' }}
          {% endif %}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/face.jpg' }}
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_face
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/face.jpg'

## alpr

- id: motion_${MOTION_CAMERA}_alpr_snapshot
  alias: motion_${MOTION_CAMERA}_alpr_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_alpr_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_alpr') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_alpr','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if states('sensor.motion_${MOTION_CAMERA}_alpr_count')|int > 0 %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_alpr' }}
          {% else %}
            {{ 'camera.motion_nosignal' }}
          {% endif %}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/alpr.jpg' }}
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_alpr
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/alpr.jpg'

## detected

- id: motion_${MOTION_CAMERA}_detected_snapshot
  alias: motion_${MOTION_CAMERA}_detected_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_annotated') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_annotated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_annotated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated_mask.gif' }}
#    - condition: template
#      value_template: >-
#        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_old','off') }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected.jpg' }}

- id: motion_${MOTION_CAMERA}_detected_composite
  alias: motion_${MOTION_CAMERA}_detected_composite
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_composite.jpg' }}

## detected_entity

- id: motion_${MOTION_CAMERA}_detected_entity_snapshot
  alias: motion_${MOTION_CAMERA}_detected_entity_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_entity_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_annotated') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_annotated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_annotated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_entity.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_entity_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_entity_animated_mask.gif' }}
#    - condition: template
#      value_template: >-
#        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity_old','off') }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_entity_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_entity_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_entity_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_entity_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_entity' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_entity.jpg' }}

- id: motion_${MOTION_CAMERA}_detected_entity_composite
  alias: motion_${MOTION_CAMERA}_detected_entity_composite
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_entity_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_entity_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_entity_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_entity_composite.jpg' }}

## detected_person

- id: motion_${MOTION_CAMERA}_detected_person_snapshot
  alias: motion_${MOTION_CAMERA}_detected_person_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_person_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_annotated') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_annotated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_annotated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_person.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_person_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_person_animated_mask.gif' }}
#    - condition: template
#      value_template: >-
#        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_old','off') }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_person_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_person_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_person_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_person_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_person' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_person.jpg' }}

- id: motion_${MOTION_CAMERA}_detected_person_composite
  alias: motion_${MOTION_CAMERA}_detected_person_composite
  initial_state: off
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_person
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_person_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_person_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_person_composite.jpg' }}

## detected_vehicle

- id: motion_${MOTION_CAMERA}_detected_vehicle_snapshot
  alias: motion_${MOTION_CAMERA}_detected_vehicle_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_vehicle_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_annotated') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_annotated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_annotated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_vehicle.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_vehicle_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_vehicle_animated_mask.gif' }}
#    - condition: template
#      value_template: >-
#        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle_old','off') }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_vehicle_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_vehicle_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_vehicle_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_vehicle_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_vehicle' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_vehicle.jpg' }}

- id: motion_${MOTION_CAMERA}_detected_vehicle_composite
  alias: motion_${MOTION_CAMERA}_detected_vehicle_composite
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_vehicle_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_vehicle_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_vehicle_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_vehicle_composite.jpg' }}

## detected_animal

- id: motion_${MOTION_CAMERA}_detected_animal_snapshot
  alias: motion_${MOTION_CAMERA}_detected_animal_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_animal_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_annotated') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_annotated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_annotated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animal.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animal_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animal_animated_mask.gif' }}
#    - condition: template
#      value_template: >-
#        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal_old','off') }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_animal_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animal_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_animal_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animal_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_animal' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animal.jpg' }}

- id: motion_${MOTION_CAMERA}_detected_animal_composite
  alias: motion_${MOTION_CAMERA}_detected_animal_composite
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_animal_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animal_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_animal_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animal_composite.jpg' }}

## face_detected

- id: motion_${MOTION_CAMERA}_face_detected_snapshot
  alias: motion_${MOTION_CAMERA}_face_detected_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_face_detected_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_face') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_face','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_face' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/face_detected.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_face_detected' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/face_detected.jpg' }}

## alpr_detected

- id: motion_${MOTION_CAMERA}_alpr_detected_snapshot
  alias: motion_${MOTION_CAMERA}_alpr_detected_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_alpr_detected_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_alpr') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_alpr','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_alpr' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/alpr_detected.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_alpr_detected' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/alpr_detected.jpg' }}

## person_face

- id: motion_${MOTION_CAMERA}_person_face_snapshot
  alias: motion_${MOTION_CAMERA}_person_face_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_person_face_detected_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_detected_person') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_detected_person','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_person' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/person_face.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_person_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/person_face_composite.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_person_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/person_face_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_person_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/person_face_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_person_face' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/person_face.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_person_face_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/person_face.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_person_face_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/person_face_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_person_face_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/person_face_animated_mask.gif' }}

## vehicle_alpr

- id: motion_${MOTION_CAMERA}_vehicle_alpr_snapshot
  alias: motion_${MOTION_CAMERA}_vehicle_alpr_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_vehicle_alpr_detected_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_detected_vehicle') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_detected_vehicle','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_vehicle' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/vehicle_alpr.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_vehicle_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/vehicle_alpr_composite.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_vehicle_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/vehicle_alpr_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_vehicle_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/vehicle_alpr_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_vehicle_alpr' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/vehicle_alpr.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_vehicle_alpr_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/vehicle_alpr.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_vehicle_alpr_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/vehicle_alpr_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_vehicle_alpr_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/vehicle_alpr_animated_mask.gif' }}

###
# found
###

- id: motion_${MOTION_CAMERA}_tracker_found
  alias: motion_${MOTION_CAMERA}_tracker_found
  initial_state: on
  trigger:
    platform: state
    entity_id: counter.motion_${MOTION_CAMERA}_status_camera_found
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_tracker_found','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: mqtt.publish
      data_template:
        topic: '${MOTION_GROUP}/tracker/${MOTION_DEVICE}/${MOTION_CAMERA}'
        retain: true
        payload_template: >-
          { "topic":"${MOTION_GROUP}/tracker/${MOTION_DEVICE}/${MOTION_CAMERA}", "payload":"home", "date":{{ (utcnow().timestamp()|int) }} }

###
# lost
###

- id: motion_${MOTION_CAMERA}_tracker_lost
  alias: motion_${MOTION_CAMERA}_tracker_lost
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_lost
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_tracker_lost','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: mqtt.publish
      data_template:
        topic: '${MOTION_GROUP}/tracker/${MOTION_DEVICE}/${MOTION_CAMERA}'
        retain: true
        payload_template: >-
          { "topic":"${MOTION_GROUP}/tracker/${MOTION_DEVICE}/${MOTION_CAMERA}", "payload":"not_home", "date":{{ (utcnow().timestamp()|int) }} }

###
# notify lost and found
###

## found
- id: motion_${MOTION_CAMERA}_status_camera_notify_found
  alias: motion_${MOTION_CAMERA}_status_camera_notify_found
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_found
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_status_camera_notify','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state and trigger.to_state|lower != 'none' and trigger.to_state.state|lower != 'unknown' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          ${MOTION_CAMERA} camera found
        notification_id: >
          ${MOTION_CAMERA}
        message: >-
          ${MOTION_CAMERA} camera was {{ trigger.from_state.state }};
          found at {{ now().timestamp()|int|timestamp_custom("%a %b %d @ %I:%M %p %Z") | default(null) }}

## lost
- id: motion_${MOTION_CAMERA}_status_camera_notify_lost
  alias: motion_${MOTION_CAMERA}_status_camera_notify_lost
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_lost
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_status_camera_notify','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state and trigger.to_state|lower != 'none' and trigger.to_state.state|lower != 'unknown' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          ${MOTION_CAMERA} camera lost
        notification_id: >
          ${MOTION_CAMERA}
        message: >-
          ${MOTION_CAMERA} camera was {{ trigger.from_state.state }};
          lost at {{ now().timestamp()|int|timestamp_custom("%a %b %d @ %I:%M %p %Z") | default(null) }}

###
# notify detected
###

- id: motion_${MOTION_CAMERA}_detected_notify
  alias: motion_${MOTION_CAMERA}_detected_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detected_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_count')|int > 0 }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_count') }} entity(s)
          from {{ states('sensor.motion_${MOTION_CAMERA}_detected_camera') }}
        notification_id: >-
          {{ 'motion_detected-${MOTION_CAMERA}' }}
        message: >-
          {{ '[![]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected'
             + '.jpg?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_event')
             + ')]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_animated'
             + '.gif?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_event')
             + ')' }}
          Camera ${MOTION_CAMERA} detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_count') -}}:
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_list') -}};
          for {{ states('sensor.motion_${MOTION_CAMERA}_detected_elapsed') }} seconds
          at {{ states('sensor.motion_${MOTION_CAMERA}_detected_when') }}

##
# notify detected_entity
##

- id: motion_${MOTION_CAMERA}_detected_entity_notify
  alias: motion_${MOTION_CAMERA}_detected_entity_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_entity
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detected_entity_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_count')|int > 0 }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_count') }} entity(s)
          from {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_camera') }}
        notification_id: >-
          {{ 'motion_detected_entity-${MOTION_CAMERA}' }}
        message: >-
          {{ '[![]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_entity'
             + '.jpg?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_entity_event')
             + ')]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_entity_animated'
             + '.gif?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_entity_event')
             + ')' }}
          Camera ${MOTION_CAMERA} detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_count') }} entity(s)
          for {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_elapsed') }} seconds
          at {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_when') }}

##
# notify detected_person
##

- id: motion_${MOTION_CAMERA}_detected_person_notify
  alias: motion_${MOTION_CAMERA}_detected_person_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_person
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detected_person_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_person_count')|int > 0 }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_person_count') }} person(s)
          from {{ states('sensor.motion_${MOTION_CAMERA}_detected_person_camera') }}
        notification_id: >-
          {{ 'motion_detected_person-${MOTION_CAMERA}' }}
        message: >-
          {{ '[![]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_person'
             + '.jpg?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_person_event')
             + ')]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_person_animated'
             + '.gif?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_person_event')
             + ')' }}
          Camera ${MOTION_CAMERA} detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_person_count') }} person(s)
          for {{ states('sensor.motion_${MOTION_CAMERA}_detected_person_elapsed') }} seconds
          at {{ states('sensor.motion_${MOTION_CAMERA}_detected_person_when') }}

##
# notify detected_vehicle
##

- id: motion_${MOTION_CAMERA}_detected_vehicle_notify
  alias: motion_${MOTION_CAMERA}_detected_vehicle_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_vehicle','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detected_vehicle_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_count')|int > 0 }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_count') }} vehicle(s)
          from {{ states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_camera') }}
        notification_id: >-
          {{ 'motion_detected_vehicle-${MOTION_CAMERA}' }}
        message: >-
          {{ '[![]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_vehicle'
             + '.jpg?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_event')
             + ')]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_vehicle_animated'
             + '.gif?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_event')
             + ')' }}
          Camera ${MOTION_CAMERA} detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_count') }} vehicle(s)
          for {{ states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_elapsed') }} seconds
          at {{ states('sensor.motion_${MOTION_CAMERA}_detected_vehicle_when') }}

##
# notify detected_animal
##

- id: motion_${MOTION_CAMERA}_detected_animal_notify
  alias: motion_${MOTION_CAMERA}_detected_animal_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_animal
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_animal','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detected_animal_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_${MOTION_CAMERA}_detected_animal_count')|int > 0 }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_animal_count') }} animal(s)
          from {{ states('sensor.motion_${MOTION_CAMERA}_detected_animal_camera') }}
        notification_id: >-
          {{ 'motion_detected_animal-${MOTION_CAMERA}' }}
        message: >-
          {{ '[![]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_animal'
             + '.jpg?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_animal_event')
             + ')]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/${MOTION_CAMERA}/detected_animal_animated'
             + '.gif?e='
             + states('sensor.motion_${MOTION_CAMERA}_detected_animal_event')
             + ')' }}
          Camera ${MOTION_CAMERA} detected {{ states('sensor.motion_${MOTION_CAMERA}_detected_animal_count') }} animal(s)
          for {{ states('sensor.motion_${MOTION_CAMERA}_detected_animal_elapsed') }} seconds
          at {{ states('sensor.motion_${MOTION_CAMERA}_detected_animal_when') }}

##
# complete
##

- id: motion_${MOTION_CAMERA}_complete_counter
  alias: motion_${MOTION_CAMERA}_complete_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_complete
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_complete','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_complete_counter
