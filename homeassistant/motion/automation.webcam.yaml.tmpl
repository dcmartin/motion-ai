###
## AUTO-GENERATED from homeassistant/motion/automation.webcam.yaml.tmpl
##
## - MOTION_DEVICE: ${MOTION_DEVICE}
## - MOTION_CAMERA: ${MOTION_CAMERA}
###

## tensorflow

#- id: motion_${MOTION_CAMERA}_start_tensorflow
#  alias: motion_${MOTION_CAMERA}_start_tensorflow
#  initial_state: off
#  trigger:
#    platform: state
#    entity_id: motion_${MOTION_CAMERA}_event_start
#  condition:
#    condition: and
#    conditions:
#      - condition: template
#        value_template: >-
#          {{ is_state('input_boolean.motion_tensorflow_detect','on') }}
#      - condition: template
#        value_template: >
#          {{ trigger.to_state.state != trigger.from_state.state }}
#      - condition: template
#        value_template: >
#          {{ trigger.to_state.state|lower == 'true' }}
#  action:
#    - service: image_processing.scan
#      entity_id: image_processing.motion_${MOTION_CAMERA}_tensorflow

###
# counters
###

# lost
- id: motion_${MOTION_CAMERA}_status_camera_lost_counter
  alias: motion_${MOTION_CAMERA}_status_camera_lost_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_status_camera_lost
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_status_camera_lost','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_status_camera_lost_counter

# found
- id: motion_${MOTION_CAMERA}_status_camera_found_counter
  alias: motion_${MOTION_CAMERA}_status_camera_found_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_status_camera_found
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_status_camera_found','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_status_camera_found_counter

# end
- id: motion_${MOTION_CAMERA}_end_counter
  alias: motion_${MOTION_CAMERA}_end_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_end
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_end','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_end_counter

# annotated
- id: motion_${MOTION_CAMERA}_annotated_counter
  alias: motion_${MOTION_CAMERA}_annotated_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_annotated
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_annotated','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_annotated_counter

# detected
- id: motion_${MOTION_CAMERA}_detected_counter
  alias: motion_${MOTION_CAMERA}_detected_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_detected_counter

# face
- id: motion_${MOTION_CAMERA}_face_counter
  alias: motion_${MOTION_CAMERA}_face_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_face
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_face','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_face_counter

# alpr
- id: motion_${MOTION_CAMERA}_alpr_counter
  alias: motion_${MOTION_CAMERA}_alpr_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_alpr
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_alpr','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_alpr_counter

###
## capture source events
###

# end
- id: motion_${MOTION_CAMERA}_end_snapshot
  alias: motion_${MOTION_CAMERA}_end_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_end_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_end' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_end_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_end_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_end' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_end_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_end_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_end' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end.jpg' }}

# composite
- id: motion_${MOTION_CAMERA}_end_composite_snapshot
  alias: motion_${MOTION_CAMERA}_end_composite_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_end_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_end_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_end_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/end_composite.jpg' }}

# annotated

- id: motion_${MOTION_CAMERA}_annotated_snapshot
  alias: motion_${MOTION_CAMERA}_annotated_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_annotated_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_annotated') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_annotated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if states('sensor.motion_${MOTION_CAMERA}_annotated_count')|int > 0 %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_annotated' }}
          {% else %}
            {{ 'camera.motion_nosignal' }}
          {% endif %}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated_mask.gif' }}
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_annotated
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/annotated.jpg'
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_annotated_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_annotated_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated_mask.gif' }}
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_${MOTION_CAMERA}_annotated
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/annotated.jpg'
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_annotated_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_annotated_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_animated_mask.gif' }}

- id: motion_${MOTION_CAMERA}_annotated_composite
  alias: motion_${MOTION_CAMERA}_annotated_composite
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_annotated_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_annotated_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_annotated_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/annotated_composite.jpg' }}

## face

- id: motion_${MOTION_CAMERA}_face_snapshot
  alias: motion_${MOTION_CAMERA}_face_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_face_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_face') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_face','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if states('sensor.motion_${MOTION_CAMERA}_face_count')|int > 0 %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_face' }}
          {% else %}
            {{ 'camera.motion_nosignal' }}
          {% endif %}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/face.jpg' }}
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_face
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/face.jpg'
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_${MOTION_CAMERA}_face
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/face.jpg'

## alpr

- id: motion_${MOTION_CAMERA}_alpr_snapshot
  alias: motion_${MOTION_CAMERA}_alpr_snapshot
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_alpr_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_alpr') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_alpr','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {% if states('sensor.motion_${MOTION_CAMERA}_alpr_count')|int > 0 %}
            {{ 'camera.motion_${MOTION_CAMERA}_event_alpr' }}
          {% else %}
            {{ 'camera.motion_nosignal' }}
          {% endif %}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/alpr.jpg' }}
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_alpr
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/alpr.jpg'
    - service: local_file.update_file_path
      data:
        entity_id: camera.motion_${MOTION_CAMERA}_alpr
        file_path: '/config/www/images/motion/${MOTION_CAMERA}/alpr.jpg'

## detected

- id: motion_${MOTION_CAMERA}_detected_snapshot
  alias: motion_${MOTION_CAMERA}_detected_snapshot
  initial_state: on
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_annotated') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_annotated','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_annotated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected.jpg' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated.gif' }}
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_animated_mask' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_animated_mask' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated_mask.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_animated' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_animated.gif' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected.jpg' }}

- id: motion_${MOTION_CAMERA}_detected_composite
  alias: motion_${MOTION_CAMERA}_detected_composite
  initial_state: off
  trigger:
    - platform: state
      entity_id: counter.motion_${MOTION_CAMERA}_detected_counter
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('camera.motion_${MOTION_CAMERA}_event_composite') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' %}
            {% set ep = state_attr('camera.motion_${MOTION_CAMERA}_event_composite','entity_picture') %}
            {{ ep|lower != 'none' and ep|lower != 'unavailable' and ep|lower != 'none' and ep|lower != 'unknown' }}
          {% else %}false{% endif %}
  action:
    - service: camera.snapshot
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_event_composite' }}
        filename: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_detected_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_composite.jpg' }}
    - service: local_file.update_file_path
      data_template:
        entity_id: >-
          {{ 'camera.motion_${MOTION_CAMERA}_detected_composite' }}
        file_path: >-
          {{ '/config/www/images/motion/${MOTION_CAMERA}/detected_composite.jpg' }}

###
# found
###

- id: motion_${MOTION_CAMERA}_tracker_found
  alias: motion_${MOTION_CAMERA}_tracker_found
  initial_state: on
  trigger:
    platform: state
    entity_id: counter.motion_${MOTION_CAMERA}_status_camera_found
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_tracker_found','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: mqtt.publish
      data_template:
        topic: '${MOTION_GROUP}/tracker/${MOTION_DEVICE}/${MOTION_CAMERA}'
        retain: true
        payload_template: >-
          { "topic":"${MOTION_GROUP}/tracker/${MOTION_DEVICE}/${MOTION_CAMERA}", "payload":"home", "date":{{ (utcnow().timestamp()|int) }} }

###
# lost
###

- id: motion_${MOTION_CAMERA}_tracker_lost
  alias: motion_${MOTION_CAMERA}_tracker_lost
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_lost
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_tracker_lost','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: mqtt.publish
      data_template:
        topic: '${MOTION_GROUP}/tracker/${MOTION_DEVICE}/${MOTION_CAMERA}'
        retain: true
        payload_template: >-
          { "topic":"${MOTION_GROUP}/tracker/${MOTION_DEVICE}/${MOTION_CAMERA}", "payload":"not_home", "date":{{ (utcnow().timestamp()|int) }} }

###
# notify lost and found
###

## found
- id: motion_${MOTION_CAMERA}_status_camera_notify_found
  alias: motion_${MOTION_CAMERA}_status_camera_notify_found
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_found
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_status_camera_notify','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state and trigger.to_state|lower != 'none' and trigger.to_state.state|lower != 'unknown' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          ${MOTION_CAMERA} camera found
        notification_id: >
          ${MOTION_CAMERA}
        message: >-
          ${MOTION_CAMERA} camera was {{ trigger.from_state.state }};
          found at {{ now().timestamp()|int|timestamp_custom("%a %b %d @ %I:%M %p %Z") | default(null) }}

## lost
- id: motion_${MOTION_CAMERA}_status_camera_notify_lost
  alias: motion_${MOTION_CAMERA}_status_camera_notify_lost
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_${MOTION_CAMERA}_status_camera_lost
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_status_camera_notify','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state and trigger.to_state|lower != 'none' and trigger.to_state.state|lower != 'unknown' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          ${MOTION_CAMERA} camera lost
        notification_id: >
          ${MOTION_CAMERA}
        message: >-
          ${MOTION_CAMERA} camera was {{ trigger.from_state.state }};
          lost at {{ now().timestamp()|int|timestamp_custom("%a %b %d @ %I:%M %p %Z") | default(null) }}


##
# complete
##

- id: motion_${MOTION_CAMERA}_complete_counter
  alias: motion_${MOTION_CAMERA}_complete_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_${MOTION_CAMERA}_complete
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_complete','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: counter.increment
      entity_id: counter.motion_${MOTION_CAMERA}_complete_counter

###
# notify detected entity
###

- id: motion_${MOTION_CAMERA}_detect_entity_notify
  alias: motion_${MOTION_CAMERA}_detect_entity_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_entity
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detect_entity_notify','on') }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          ${MOTION_CAMERA}: detected
          {% set s = states('input_select.motion_${MOTION_CAMERA}_detect_entity') %}
          {% if s|lower != 'all' %}
            {{ s -}}(s)
          {% else %}
            {{ 'entity(s)' }}
          {% endif %}
        notification_id: >-
          {{ 'motion_detected_entity-${MOTION_CAMERA}' }}
        message: >-
          {%- set mc = '${MOTION_CAMERA}' -%}
          {{ '[![]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/' + mc + '/detected_entity'
             + '.jpg?e='
             + states('sensor.motion_' + mc + '_detected_entity_event')
             + ')]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/' + mc + '/detected_entity_animated'
             + '.gif?e='
             + states('sensor.motion_' + mc + '_detected_entity_event')
             + ')' }}
          {{ 'Camera ' + mc + ' detected: ' -}}
          {%- set s = states('input_select.motion_' + mc + '_detect_entity') -%}
          {%- if s|lower != 'all' -%}
            {{ s -}}(s)
          {%- else -%}
            {%- set s = states('sensor.motion_' + mc + '_detected_list') -%}
            {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
              {%- set s = s|replace('\'','"')|from_json -%}
              {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s is iterable -%}
                {%- for e in  s -%}
                  {%- if not loop.first -%},{%- endif -%}
                  {{- e -}}
                {%- endfor -%}
              {%- else -%}
                {{ 'unknown' -}}
              {%- endif -%}
            {%- else -%}
              {{ 'none' -}}
            {%- endif -%}
          {%- endif -%};
          {{ states('sensor.motion_' + mc + '_detected_entity_ago') -}}s ago;
          for {{ states('sensor.motion_' + mc + '_detected_entity_elapsed') -}}s;
          at {{ states('sensor.motion_' + mc + '_detected_entity_when') }}

##
# speak
##

- id: motion_${MOTION_CAMERA}_detect_entity_speak
  alias: motion_${MOTION_CAMERA}_detect_entity_speak
  initial_state: on
  description: 'Speak when entity detected'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_entity
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detect_entity_notify','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detect_entity_speak','on') -}}
      - condition: template
        value_template: >
          {%- set s = states('sensor.motion_media_player_selected') -%}
          {{- s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' }}
  action:
    - service: tts.cloud_say
      data_template:
        entity_id: >-
          {{ states('sensor.motion_media_player_selected') }}
        language: en-US
        options:
          gender: female
        message: >-
          Camera ${MOTION_CAMERA} detected
          {{ states('input_select.motion_${MOTION_CAMERA}_detect_entity') -}}(s)
          at {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_when') }}

##
# alert
##

- id: motion_${MOTION_CAMERA}_detect_entity_alert
  alias: motion_${MOTION_CAMERA}_detect_entity_alert
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_entity
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {%- set mc = '${MOTION_CAMERA}' -%}
          {{ is_state('binary_sensor.motion_' + mc + '_detected_entity','on') }}
      - condition: template
        value_template: >
          {%- set mc = '${MOTION_CAMERA}' -%}
          {{ is_state('input_boolean.motion_' + mc + '_detect_entity_notify','on') }}
      - condition: template
        value_template: >
          {%- set mc = '${MOTION_CAMERA}' -%}
          {{ is_state('input_boolean.motion_' + mc + '_detect_entity_alert','on') -}}
      - condition: template
        value_template: >
          {%- set s = states('sensor.motion_person_device') -%}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|length > 0 }}
  action:
    - alias: "set_state: motion_${MOTION_CAMERA}_smartphone_notify"
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_${MOTION_CAMERA}_smartphone_notify
        state: >-
          {{- states('sensor.motion_person_device') -}}
    - alias: "trigger: motion_${MOTION_CAMERA}_detect_entity_alert_one"
      service: automation.trigger
      entity_id: automation.motion_${MOTION_CAMERA}_detect_entity_alert_one

##
# alert selected
##

- id: motion_${MOTION_CAMERA}_detect_entity_alert_selected
  alias: motion_${MOTION_CAMERA}_detect_entity_alert_selected
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_entity
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detect_entity_notify','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detect_entity_alert','on') -}}
      - condition: template
        value_template: >
          {{- not is_state('input_select.motion_smartphone_name','all')
              and not is_state('input_select.motion_smartphone_name','none') -}}
      - condition: template
        value_template: >
          {{- is_state('input_boolean.motion_notify_smartphone','on') -}}
      - condition: template
        value_template: >
          {{- is_state('binary_sensor.motion_person_configure','on') -}}
  action:
    - alias: "set_state: motion_${MOTION_CAMERA}_smartphone_notify"
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_${MOTION_CAMERA}_smartphone_notify
        state: >-
          {{ states('input_select.motion_smartphone_name') }}
    - alias: "trigger: motion_${MOTION_CAMERA}_detect_entity_alert_one"
      service: automation.trigger
      entity_id: automation.motion_${MOTION_CAMERA}_detect_entity_alert_one

##
# alert all
##

- id: motion_${MOTION_CAMERA}_detect_entity_alert_all
  alias: motion_${MOTION_CAMERA}_detect_entity_alert_all
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_${MOTION_CAMERA}_detected_entity
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_entity','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detect_entity_notify','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_${MOTION_CAMERA}_detect_entity_alert','on') -}}
      - condition: template
        value_template: >
          {{- is_state('input_select.motion_smartphone_name','all') -}}
      - condition: template
        value_template: >
          {{- is_state('input_boolean.motion_notify_smartphone','on') -}}
      - condition: template
        value_template: >
          {{- is_state('binary_sensor.motion_person_configure','on') -}}
  action:
    - alias: "notify all smartphones"
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = state_attr('input_select.motion_smartphone_name','options')[repeat.index - 1] %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: "set_state: motion_${MOTION_CAMERA}_smartphone_notify"
            service: python_script.set_state
            data_template:
              entity_id: sensor.motion_${MOTION_CAMERA}_smartphone_notify
              state: >-
                {{ state_attr('input_select.motion_smartphone_name','options')[repeat.index - 1] }}
          - alias: "trigger: motion_${MOTION_CAMERA}_detect_entity_alert_one"
            service: automation.trigger
            entity_id: automation.motion_${MOTION_CAMERA}_detect_entity_alert_one
          - alias: "wait until complete"
            wait_template: >-
              {% set s = state_attr('automation.motion_${MOTION_CAMERA}_detect_entity_alert_one','current') %}
              {{ s is number and s|int == 0 }}

##
# alert one
##

- id: motion_${MOTION_CAMERA}_detect_entity_alert_one
  alias: motion_${MOTION_CAMERA}_detect_entity_alert_one
  initial_state: on
  trigger: []
  condition: []
  action:
    - condition: and
      conditions:
        - condition: template
          value_template: >
            {%- set s = states('sensor.motion_${MOTION_CAMERA}_smartphone_notify') -%}
            {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'all' and s|length > 0 }}
    - alias: 'send smartphone notification ${MOTION_CAMERA}'
      service_template: >-
        {%- set s = states('sensor.motion_${MOTION_CAMERA}_smartphone_notify') -%}
        {{- 'notify.mobile_app_' + s -}}
      data_template:
        title: >-
          ALERT: ${MOTION_CAMERA}: detected entity(s)
        message: >-
          {%- set mc = '${MOTION_CAMERA}' -%}
          {{ 'Camera ' + mc + ' detected: ' -}}
          {%- set s = states('input_select.motion_' + mc + '_detect_entity') -%}
          {%- if s|lower != 'all' -%}
            {{ s -}}(s)
          {%- else -%}
            {%- set s = states('sensor.motion_' + mc + '_detected_list') -%}
            {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
              {%- set s = s|replace('\'','"')|from_json -%}
              {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s is iterable -%}
                {%- for e in  s -%}
                  {%- if not loop.first -%},{%- endif -%}
                  {{- e -}}
                {%- endfor -%}
              {%- else -%}
                {{ 'unknown' -}}
              {%- endif -%}
            {%- else -%}
              {{ 'none' -}}
            {%- endif -%}
          {%- endif -%};
          {{ states('sensor.motion_' + mc + '_detected_entity_ago') -}}s ago;
          for {{ states('sensor.motion_' + mc + '_detected_entity_elapsed') }}s;
          at {{ states('sensor.motion_' + mc + '_detected_entity_when') }}
        data:
          push:
            category: 'motion_smartphone_alert'
            sound:
              name: default
              critical: >-
                {%- set mc = '${MOTION_CAMERA}' -%}
                {%- if is_state('binary_sensor.motion_' + mc + '_detect_entity_alert_critical','on') -%}
                  {{- '1' -}}
                {%- else -%}
                  {{- null -}}
                {%- endif -%}
              volume: 1.0
            url:
              _: >-
                {{- '/lovelace-experimental/${MOTION_CAMERA}' -}}
          action_data:
            device: >-
              {{ states('sensor.motion_${MOTION_CAMERA}_detected_entity_device') }}
            camera: >-
              {{ '${MOTION_CAMERA}' }}
            event: >-
              {{- states('sensor.motion_${MOTION_CAMERA}_detected_entity_event') -}}
            entity: >-
              {{ states('input_select.motion_${MOTION_CAMERA}_detect_entity') }}
            image: >-
              {%- set c = '${MOTION_CAMERA}' -%}
              {%- set e = states('sensor.motion_' + c + '_detected_entity_event') -%}
              {{- '/local/images/motion/'
                 + c
                 + '/detected_entity_animated'
                 + '.gif?e='
                 + e -}}
          attachment:
            hide-thumbnal: false
            content-type: gif
            url: >-
              {%- set c = '${MOTION_CAMERA}' -%}
              {%- set e = states('sensor.motion_' + c + '_detected_entity_event') -%}
              {{- states('sensor.motion_base_url')
                 + '/local/images/motion/'
                 + c
                 + '/detected_entity_animated'
                 + '.gif?e='
                 + e -}}

