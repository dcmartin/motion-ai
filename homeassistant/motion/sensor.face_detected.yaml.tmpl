###
## AUTO-GENERATED from homeassistant/motion/sensor.face.yaml.tmpl
##
## - MOTION_GROUP: ${MOTION_GROUP}
## - MOTION_CLIENT: ${MOTION_CLIENT}
## - MOTION_CAMERA: ${MOTION_CAMERA}
###

###
## face
###

## event_face
- platform: mqtt
  name: motion_${MOTION_CAMERA}_event_face
  state_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/face/+'
  json_attributes_topic: '${MOTION_GROUP}/${MOTION_CLIENT}/${MOTION_CAMERA}/event/face/+'
  expire_after: !secret motion-face-expire-after
  force_update: !secret motion-face-force-update
  value_template: >
    {% if value_json is defined %}True{% else %}False{% endif %}

## status
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_status:
      friendly_name: '${MOTION_CAMERA} FACE'
      value_template: >-
        {% if states('binary_sensor.motion_${MOTION_CAMERA}_face')|lower == 'on' %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','detected')|map(attribute='entity')|list %}
            {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','count') %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            FACE: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_${MOTION_CAMERA}_face_counter') -}}/{{- states('sensor.motion_face_counter') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_face_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_counter:
      friendly_name: '${MOTION_CAMERA} face counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_face_counter')|int }}

## date
- platform: template
  sensors:
    # date
    motion_${MOTION_CAMERA}_face_date:
      unit_of_measurement: 's'
      value_template: >-
        {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') %}
        {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
          {% set s = e.end %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|int > 0 %}
            {{ s|int }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

## when
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_when:
      friendly_name: '${MOTION_CAMERA} face when'
      value_template: >-
        {% set s = states('sensor.motion_${MOTION_CAMERA}_face_date')|int %}
        {% if s > 0 %}
          {% set n = utcnow().timestamp() %}
          {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}; {{ (n|int-s)|int }} lag
        {% else %}Pending{% endif %}

## count 

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_count:
      friendly_name: '${MOTION_CAMERA} face count'
      unit_of_measurement: '😐'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_face','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_face_expired','off') %}
          {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','count') %}
          {% if count|lower != 'none' and count|lower != 'unknown' and count != 'null' %}
            {{ count|int }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_face_count_mean:
#      friendly_name: '${MOTION_CAMERA} count mean'
#      unit_of_measurement: '😐's
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_count_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_count_min:
#      friendly_name: '${MOTION_CAMERA} count min'
#      unit_of_measurement: '😐's
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_count_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_count_max:
#      friendly_name: '${MOTION_CAMERA} count max'
#      unit_of_measurement: '😐's
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_count_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_count_stdev:
#      friendly_name: '${MOTION_CAMERA} count stdev'
#      unit_of_measurement: '😐's
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_count_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_face_count_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_face_count
#  sampling_size: 100
#  max_age:
#    hours: 72

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_ago:
      friendly_name: '${MOTION_CAMERA} face ago'
      unit_of_measurement: 's'
      value_template: >
        {%- set s = states('sensor.motion_${MOTION_CAMERA}_face_date') -%}
        {%- if s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' and s|lower != 'null' -%}
          {%- set s = utcnow().timestamp()|int - s|int -%}
          {{- s -}}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_face_ago_mean:
#      friendly_name: '${MOTION_CAMERA} face ago mean'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_ago_min:
#      friendly_name: '${MOTION_CAMERA} face min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_ago_max:
#      friendly_name: '${MOTION_CAMERA} face max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} face stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_face_ago_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_face_ago
#  sampling_size: 100
#  max_age:
#    hours: 72
#

## percent

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_percent:
      friendly_name: '${MOTION_CAMERA} face %'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_counter')|int > 0 and states('sensor.motion_end_counter')|int > 0 %}
          {% set value = states.sensor.motion_${MOTION_CAMERA}_face_counter.state|int / states.sensor.motion_end_counter.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

#- platform: template
#  sensors:
#    motion_${MOTION_CAMERA}_face_percent_mean:
#      friendly_name: '${MOTION_CAMERA} face % mean'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_percent_statistics.state|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_percent_min:
#      friendly_name: '${MOTION_CAMERA} face % min'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_percent_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_percent_max:
#      friendly_name: '${MOTION_CAMERA} face % max'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_percent_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_percent_stdev:
#      friendly_name: '${MOTION_CAMERA} face % stdev'
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_percent_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#
#- platform: statistics
#  name: motion_${MOTION_CAMERA}_face_percent_statistics
#  entity_id: sensor.motion_${MOTION_CAMERA}_face_percent
#  sampling_size: 100
#  max_age:
#    hours: 72
#

## delay 

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_delay:
      friendly_name: '${MOTION_CAMERA} FACE delay'
      unit_of_measurement: 's'
      value_template: >
        {%- set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','timestamp') -%}
        {%- if s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'unknown' and s != null -%}
          {%- set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') -%}
          {%- if e|lower != 'unavailable' and e|lower != 'none' and e|lower != 'unknown' and e != null and e is iterable %}
            {%- set t = e.timestamp.end -%}
            {%- if t|lower != 'unavailable' and t|lower != 'none' and t|lower != 'unknown' and t != null and t|length > 0 %}
              {{- as_timestamp(s)|int - as_timestamp(t)|int }}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_delay_mean:
      friendly_name: '${MOTION_CAMERA} face delay mean'
      unit_of_measurement: 's'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_delay_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_delay_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_delay_min:
#      friendly_name: '${MOTION_CAMERA} face delay min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_delay_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_delay_max:
#      friendly_name: '${MOTION_CAMERA} face delay max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_delay_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_delay_stdev:
#      friendly_name: '${MOTION_CAMERA} face delay stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_delay_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_delay_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_face_delay_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_face_delay
  sampling_size: 100
  max_age:
    hours: 72

###
## face_detected
###

## human readable status
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_status:
      friendly_name: '${MOTION_CAMERA} 😐'
      value_template: >-
        {% if states('binary_sensor.motion_${MOTION_CAMERA}_face_detected')|lower == 'on' %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') %}
          {% if e|lower != 'none' and e|lower != 'unknown' and e|lower != 'unavailable' and e|lower != 'null' and e is mapping %}
            {% set n = utcnow().timestamp()|int %}
            {% set end = e.end|int %}
            {% set ago = n - end %}
            {% set event = e.event %}
            {% set device = e.device %}
            {% set camera = e.camera %}
            {% set elapsed = e.elapsed|int %}
            {% set what = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','detected')|list %}
            {% set count = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','count')|int %}
            {% set when = end|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
            {% set delay = n - end %}
            FACE: {{ count }} {{ what }};
            from {{ device -}}/{{- camera -}}/{{- event -}};
            at {{ when }};
            ago: {{ ago }};
            delay: {{ delay }};
            duration: {{ elapsed }};
            counter: {{ states('counter.motion_${MOTION_CAMERA}_face_detected_counter') -}}/{{- states('sensor.motion_face_detected_counter') -}}
          {% else %}Pending{% endif %}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## counter
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_counter:
      friendly_name: '${MOTION_CAMERA} 😐 counter'
      unit_of_measurement: count
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_face_detected_counter')|int }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_event:
      friendly_name: '${MOTION_CAMERA} 👱 event'
      value_template: >
        {% set mc = '${MOTION_CAMERA}_' %}
        {% if is_state('binary_sensor.motion_' + mc + 'face_detected','on') %}
          {% set e = state_attr('sensor.motion_' + mc + 'event_face','event') %}
          {% if e is mapping %}
            {% set s = e.event %}
            {% if s|lower != 'none' and s|lower != 'unknown' and s != 'null' and s|int > 0 %}
              {{ s|int }}
            {%- else -%}null{%- endif -%}
          {%- else -%}null{%- endif -%}
        {% else %}
          {% set s = states('sensor.motion_' + mc + 'face_detected_event') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## date
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_date:
      unit_of_measurement: 's'
      value_template: >-
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_face_detected','on') %}
          {% set e = state_attr('sensor.motion_${MOTION_CAMERA}_event_face','event') %}
          {% if e is mapping %}
            {% set s = e.end %}
            {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|int > 0 %}
              {{ s|int }}
            {%- else -%}null{%- endif -%}
          {%- else -%}null{%- endif -%}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## when
- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_when:
      friendly_name: '${MOTION_CAMERA} 😐 when'
      value_template: >-
        {% set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_date')|int %}
        {% if s > 0 %}
          {% set n = utcnow().timestamp() %}
            {{ s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") -}}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_when') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_ago:
      friendly_name: '${MOTION_CAMERA} 😐 ago'
      unit_of_measurement: 's'
      value_template: >
        {%- set s = states('sensor.motion_${MOTION_CAMERA}_face_detected_date') -%}
        {%- if s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' and s|lower != 'null' -%}
          {%- set s = utcnow().timestamp()|int - s|int -%}
          {{- s -}}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_ago_mean:
      friendly_name: '${MOTION_CAMERA} 😐 ago mean'
      unit_of_measurement: 's'
      value_template: >-
        {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics|lower != 'none' %}
          {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.state|int is number %}
            {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.state|float }}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_ago_min:
#      friendly_name: '${MOTION_CAMERA} 😐 ago min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_ago_max:
#      friendly_name: '${MOTION_CAMERA} 😐 ago max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} 😐 ago stdev'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics|lower != 'none' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_face_detected_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_face_detected_ago
  sampling_size: 100
  max_age:
    hours: 72

## count

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_count:
      friendly_name: '${MOTION_CAMERA} 😐 count'
      unit_of_measurement: '😐'
      value_template: >
        {% set mc = '${MOTION_CAMERA}_' %}
        {% if is_state('binary_sensor.motion_' + mc + 'face_detected','on') %}
          {% set s = state_attr('sensor.motion_' + mc + 'face','detected') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'unavailable' and s is iterable %}
            {% set t = states('sensor.motion_face_detected_threshold') %}
            {% if t|lower != 'none' and t|lower != 'unknown' and t != 'null' and t|lower != 'unavailable' and t|int > 0 %}
              {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s is iterable %}
                {% set s = s|select("greaterthan",t) %}
                {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s is iterable %}
                  {{ s|count }}
                {% else %}null{% endif %}
              {% else %}null{% endif %}
            {% else %}null{% endif %}
          {% else %}null{% endif %}
        {% elif is_state('binary_sensor.motion_' + mc + 'face_detected_expired','off') %}
          {% set s = states('sensor.motion_' + mc + 'face_detected_count') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'unavailable' %}
            {{ s }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_count_mean:
      friendly_name: '${MOTION_CAMERA} 😐 count mean'
      unit_of_measurement: '😐'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_count_min:
#      friendly_name: '${MOTION_CAMERA} 😐 count min'
#      unit_of_measurement: '😐'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_count_max:
#      friendly_name: '${MOTION_CAMERA} 😐 count max'
#      unit_of_measurement: '😐'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_count_stdev:
#      friendly_name: '${MOTION_CAMERA} 😐 count stdev'
#      unit_of_measurement: '😐'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_count_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_face_detected_count_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_face_detected_count
  sampling_size: 100
  max_age:
    hours: 72

## percent

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_percent:
      friendly_name: '${MOTION_CAMERA} 😐 %'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_counter')|int > 0 and states('sensor.motion_face_counter')|int > 0 %}
          {% set value = states.sensor.motion_${MOTION_CAMERA}_face_detected_counter.state|int / states.sensor.motion_face_counter.state|int * 100.0 %}
          {{ "%.2f"|format(value|float) }}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_face_detected_percent_mean:
      friendly_name: '${MOTION_CAMERA} 😐 % mean'
      unit_of_measurement: '%'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_percent_min:
#      friendly_name: '${MOTION_CAMERA} 😐 % min'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics.attributes.min_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_percent_max:
#      friendly_name: '${MOTION_CAMERA} 😐 % max'
#      unit_of_measurement: '%'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics.attributes.max_value|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_face_detected_percent_stdev:
#      friendly_name: '${MOTION_CAMERA} 😐 % stdev'
#      unit_of_measurement: '%'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_face_detected_percent_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_face_detected_percent_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_face_detected_percent
  sampling_size: 100
  max_age:
    hours: 72
