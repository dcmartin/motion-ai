###
## AUTO-GENERATED from homeassistant/motion/sensor.person_face.yaml.tmpl
##
## - MOTION_GROUP: ${MOTION_GROUP}
## - MOTION_CLIENT: ${MOTION_CLIENT}
## - MOTION_CAMERA: ${MOTION_CAMERA}
###

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_counter:
      friendly_name: '${MOTION_CAMERA} ðŸ™† counter'
      value_template: >
        {{ states('counter.motion_${MOTION_CAMERA}_person_face_counter') }}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_event:
      friendly_name: '${MOTION_CAMERA} ðŸ™† event'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.event %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_person_face_event') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_camera:
      friendly_name: '${MOTION_CAMERA} ðŸ™† camera'
      icon_template: 'mdi:camera'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.camera %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_person_face_camera') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_elapsed:
      friendly_name: '${MOTION_CAMERA} ðŸ™† elapsed'
      icon_template: 'mdi:timer'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face','on') or is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face_expired','off') %}
          {% set s = state_attr('sensor.motion_${MOTION_CAMERA}_event_annotated','event') %}
          {% if s|lower != 'none' and s is mapping %}
            {% set p = s.elapsed %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_person_face_elapsed') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_date:
      friendly_name: '${MOTION_CAMERA} ðŸ™† date'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face','on') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_detected_date') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% set p = s %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_person_face_date.state %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_when:
      friendly_name: '${MOTION_CAMERA} ðŸ™† when'
      icon_template: 'mdi:calendar-clock'
      value_template: >
        {% if is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face','on') %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_person_face_date') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
            {% set p = s|int|timestamp_custom("%a %b %d %I:%M:%S %p %Z") %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {% else %}
          {% set s = states('sensor.motion_${MOTION_CAMERA}_person_face_when') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {{ s }}
          {% else %}Pending{% endif %}
        {% endif %}

## ago

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_ago_relative:
      friendly_name: '${MOTION_CAMERA} ðŸ™† â§–'
      icon_template: 'mdi:account'
      value_template: >
        {% set s = states('sensor.motion_${MOTION_CAMERA}_person_face_ago')|int %}
        {% if s > 0 %}
          {% set d = (s/86400)|int %}
          {% set h = (s/3600)|int %}
          {% if d < 1 %}
            {% set m = ((s-(d*86400)-(h*3600))/60)|int %}
            {% set s = (s % 60)|int %}
            {% if h < 1 %}
              {% if m < 1 %}
                {{ s -}}s
              {% else %}
                {{ m -}}m; {{ s -}}s
              {% endif %}
            {% else %}
              {{ h -}}h; {{ m -}}m
            {% endif %}
          {% else %}
            {{ d -}}d; {{ h -}}h
          {% endif %}
        {%- else -%}Pending{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_ago:
      friendly_name: '${MOTION_CAMERA} â§–'
      icon_template: 'mdi:camera-timer'
      unit_of_measurement: 's'
      value_template: >
        {%- set s = states('sensor.motion_${MOTION_CAMERA}_person_face_date') -%}
        {%- if s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' and s|lower != 'null' -%}
          {%- set s = utcnow().timestamp()|int - s|int -%}
          {{- s -}}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_ago_mean:
      friendly_name: '${MOTION_CAMERA} â§– Î¼'
      icon_template: 'mdi:account'
      unit_of_measurement: 's'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics.state|float }}
        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_person_face_ago_min:
#      friendly_name: '${MOTION_CAMERA} ðŸ™† â§– min'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics.attributes.min_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_person_face_ago_max:
#      friendly_name: '${MOTION_CAMERA} ðŸ™† â§– max'
#      unit_of_measurement: 's'
#      value_template: >-
#        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics.attributes.max_value|int }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_person_face_ago_stdev:
#      friendly_name: '${MOTION_CAMERA} ðŸ™† â§– Ïƒ'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics.attributes.standard_deviation|float }}
#        {%- else -%}null{%- endif -%}
#    motion_${MOTION_CAMERA}_person_face_ago_change:
#      friendly_name: '${MOTION_CAMERA} ðŸ™† â§– Î”'
#      unit_of_measurement: 's'
#      value_template: >
#        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics') != 'unknown' %}
#          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_ago_statistics.attributes.change|float }}
#        {%- else -%}null{%- endif -%}

# statistics
- platform: statistics
  name: motion_${MOTION_CAMERA}_person_face_ago_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_person_face_ago
  sampling_size: 1000
  max_age:
    hours: 24

## confidence

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_confidence:
      friendly_name: '${MOTION_CAMERA} ðŸ™† (Î²)'
      icon_template: 'mdi:account'
      unit_of_measurement: 'Î²'
      value_template: >
        {%- if is_state('binary_sensor.motion_${MOTION_CAMERA}_person_face','on') -%}
          {%- set s = states('sensor.motion_${MOTION_CAMERA}_detected_person_confidence') -%}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' -%}
            {% set p = s|int %}
          {% endif %}
        {% endif %}
        {% if p is defined %}
          {{ p }}
        {%- elif is_state('binary_sensor.motion_${MOTION_CAMERA}_detected_person_expired','off') -%}
          {% set s = states.sensor.motion_${MOTION_CAMERA}_detected_person_confidence.state %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_confidence_count:
      friendly_name: '${MOTION_CAMERA} ðŸ™† Î² Î£'
      unit_of_measurement: 'ðŸ™†'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics.attributes.count|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_person_face_confidence_mean:
      friendly_name: '${MOTION_CAMERA} ðŸ™† Î² Î¼'
      unit_of_measurement: 'Î²'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics.state|float }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_person_face_confidence_min:
      friendly_name: '${MOTION_CAMERA} ðŸ™† Î² min'
      unit_of_measurement: 'Î²'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics.attributes.min_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_person_face_confidence_max:
      friendly_name: '${MOTION_CAMERA} ðŸ™† Î² max'
      unit_of_measurement: 'Î²'
      value_template: >-
        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics.attributes.max_value|int }}
        {%- else -%}null{%- endif -%}
    motion_${MOTION_CAMERA}_person_face_confidence_stdev:
      friendly_name: '${MOTION_CAMERA} ðŸ™† Î² Ïƒ'
      unit_of_measurement: 'Î²'
      value_template: >
        {% if states('sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics') != 'unknown' %}
          {{ states.sensor.motion_${MOTION_CAMERA}_person_face_confidence_statistics.attributes.standard_deviation|float }}
        {%- else -%}null{%- endif -%}

- platform: statistics
  name: motion_${MOTION_CAMERA}_person_face_confidence_statistics
  entity_id: sensor.motion_${MOTION_CAMERA}_person_face_confidence
  sampling_size: 1000
  max_age:
    hours: 24

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_faces:
      friendly_name: 'ðŸ™† (${MOTION_CAMERA})'
      icon_template: 'mdi:account'
      value_template: >-
        {% set mc = '${MOTION_CAMERA}' %}
        {% set pe = states('sensor.motion_' + mc + '_detected_person_event') %}
        {% set fe = states('sensor.motion_' + mc + '_face_detected_event') %}
        {% if pe|lower != 'null' and pe|lower != 'unavailable' and pe|lower != 'none' and pe|lower != 'unknown'
          and fe|lower != 'null' and fe|lower != 'unavailable' and fe|lower != 'none' and fe|lower != 'unknown'
          and pe == fe %}
          {% set entitys = state_attr('sensor.motion_' + mc + '_event_annotated','results') %}
          {% set faces = state_attr('sensor.motion_' + mc + '_event_face','results') %}
          {% if entitys|lower != 'null' and entitys|lower != 'unavailable' and entitys|lower != 'none' and entitys|lower != 'unknown'
            and faces|lower != 'null' and faces|lower != 'unavailable' and faces|lower != 'none' and faces|lower != 'unknown' %}
            {% if faces|count > 0 and entitys|count > 0 -%}
              [{%- for face in faces if face.confidence|float >= states('sensor.motion_face_detected_threshold')|float -%}
                {% if loop.first %}{% else %},{% endif %}
                {%- set fw = face.width|int -%}
                {%- set fh = face.height|int -%}
                {%- set fx = face.x + (fw/2)|int -%}
                {%- set fy = face.y + (fh/2)|int -%}
                {%- for person in entitys if person.entity == 'person' and person.confidence|float >= states('sensor.motion_detected_person_threshold')|float
                     and fx|int >= person.center.x - (person.width/2)|int
                     and fx|int <= person.center.x + (person.height/2)|int
                     and fy|int >= person.center.y|int - (person.height/2)|int
                     and fy|int <= person.center.y|int + (person.height/2)|int -%}
                  {% if loop.first %}{% else %},{% endif %}
                  {{- '1' -}}
                {%- endfor -%}
              {%- else -%}{{- '0' -}}{%- endfor -%}]
            {%- else -%}null{%- endif -%}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}

- platform: template
  sensors:
    motion_${MOTION_CAMERA}_person_face_results:
      value_template: >-
        {% set mc = '${MOTION_CAMERA}' %}
        {% if is_state('binary_sensor.motion_' + mc + '_detected_person','on') and is_state('binary_sensor.motion_' + mc + '_face_detected','on') %}
          {% set entitys = state_attr('sensor.motion_' + mc + '_event_annotated','results') %}
          {% set faces = state_attr('sensor.motion_' + mc + '_event_face','results') %}
          {% if faces|count > 0 and entitys|count > 0 -%}
            [{%- for face in faces if face.confidence|float >= states('sensor.motion_face_detected_threshold')|float -%}
              {% if loop.first %}{% else %},{% endif %}
              {%- set fw = face.width|int -%}
              {%- set fh = face.height|int -%}
              {%- set fx = face.x + (fw/2)|int -%}
              {%- set fy = face.y + (fh/2)|int -%}
              {%- for person in entitys if person.entity == 'person' and person.confidence|float >= states('sensor.motion_detected_person_threshold')|float
                   and fx|int >= person.center.x - (person.width/2)|int
                   and fx|int <= person.center.x + (person.height/2)|int
                   and fy|int >= person.center.y|int - (person.height/2)|int
                   and fy|int <= person.center.y|int + (person.height/2)|int -%}
                {% if loop.first %}{% else %},{% endif %}
                 {"p":{
                   "c":{{- person.confidence|int -}},
                   "x":{{- person.center.x - (person.width/2)|int -}},
                   "y":{{- person.center.y - (person.height/2)|int -}},
                   "w":{{- person.width -}},
                   "h":{{- person.height -}}},
                  "f":{
                   "c":{{- face.confidence|int -}},
                   "x":{{- fx -}},
                   "y":{{- fy -}},
                   "w":{{- fw -}},
                   "h":{{- fh -}}
                  }}
                  {%- endfor -%}
            {%- else -%}null{%- endfor -%}]
          {%- else -%}null{%- endif -%}
        {%- elif is_state('binary_sensor.motion_' + mc + '_person_face_expired','off') -%}
          {% set s = states('sensor.motion_' + mc + '_person_face_results') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {{ s }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
