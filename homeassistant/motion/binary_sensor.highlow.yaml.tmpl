###
## AUTO-GENERATED from homeassistant/motion/binary_sensor.highlow.yaml.tmpl
##
##  - PKG="${PKG}"
##  - SENSOR="${SENSOR}"
##  - ITEM="${ITEM}"
##
## highlow BINARY_SENSOR (low, high, low_persistent, high_persistent)
##
##  + Produces:
##	> binary_sensor.${PKG}_${SENSOR}_${ITEM}_count_low
##	> binary_sensor.${PKG}_${SENSOR}_${ITEM}_count_high
##	> binary_sensor.${PKG}_${SENSOR}_${ITEM}_count_low_persistent
##	> binary_sensor.${PKG}_${SENSOR}_${ITEM}_count_high_persistent
##
## External dependencies:
##  - sensor.${PKG}_${SENSOR}_$(ITEM} (platform: template)
##  - sensor.${PKG}_${SENSOR}_$(ITEM}_statistics (platform: statistics)
##
## Control dependencies:
##  - input_number.${PKG}_${SENSOR}_$(ITEM}_deviation
###

## highlow
- platform: template
  sensors:
    # low
    ${PKG}_${SENSOR}_${ITEM}_low:
      value_template: >-
        {% if states.sensor.${PKG}_${SENSOR}_${ITEM}|lower != 'none'
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics|lower != 'none'
              and states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation|lower != 'none'
              and states.sensor.${PKG}_${SENSOR}_${ITEM}.state|float is number
              and states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation.state|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.attributes.standard_deviation|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.attributes.standard_deviation|float > 0 %}
          {{ (((states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.state|float) - (states.sensor.${PKG}_${SENSOR}_${ITEM}.state|float)) / (states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.attributes.standard_deviation|float) > (states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation.state|float)) }}
        {%- else -%}false{%- endif -%}
      icon_template: >
          mdi:emoticon-sad
    # high
    ${PKG}_${SENSOR}_${ITEM}_high:
      value_template: >-
        {% if states.sensor.${PKG}_${SENSOR}_${ITEM}|lower != 'none'
              and states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation|lower != 'none'
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics|lower != 'none'
              and states.sensor.${PKG}_${SENSOR}_${ITEM}.state|float is number
              and states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation.state|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.attributes.standard_deviation|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.attributes.standard_deviation|float > 0 %}
          {{ (((states.sensor.${PKG}_${SENSOR}_${ITEM}.state|float) - (states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.state|float)) / (states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.attributes.standard_deviation|float)) > (states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation.state|float) }}
        {%- else -%}false{%- endif -%}
      icon_template: >-
          mdi:emoticon-happy
    # low_persistent
    ${PKG}_${SENSOR}_${ITEM}_low_persistent:
      value_template: >-
        {% if states.sensor.${PKG}_${SENSOR}_${ITEM}|lower != 'none' 
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics|lower != 'none'
              and states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation|lower != 'none'
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_stdev_statistics|lower != 'none' 
              and states.sensor.${PKG}_${SENSOR}_${ITEM}.state|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.state|float is number
              and states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation.state|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_stdev_statistics.state|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_stdev_statistics.state|float > 0 %}
            {{ (((states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.state|float) - (states.sensor.${PKG}_${SENSOR}_${ITEM}.state|float)) / (states.sensor.${PKG}_${SENSOR}_${ITEM}_stdev_statistics.state|float) > (states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation.state|float)) }}
        {%- else -%}false{%- endif -%}
      icon_template: >
          mdi:emoticon-sad
    ${PKG}_${SENSOR}_${ITEM}_high_persistent:
      value_template: >-
        {% if states.sensor.${PKG}_${SENSOR}_${ITEM}|lower != 'none' 
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics|lower != 'none'
              and states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation|lower != 'none'
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_stdev_statistics|lower != 'none' 
              and states.sensor.${PKG}_${SENSOR}_${ITEM}.state|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.state|float is number
              and states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation.state|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_stdev_statistics.state|float is number
              and states.sensor.${PKG}_${SENSOR}_${ITEM}_stdev_statistics.state|float > 0 %}
          {{ (((states.sensor.${PKG}_${SENSOR}_${ITEM}.state|float) - (states.sensor.${PKG}_${SENSOR}_${ITEM}_statistics.state|float)) / (states.sensor.${PKG}_${SENSOR}_${ITEM}_stdev_statistics.state|float)) > (states.input_number.${PKG}_${SENSOR}_${ITEM}_deviation.state|float) }}
        {%- else -%}false{%- endif -%}
      icon_template: >-
          mdi:emoticon-happy
