###
# homeassistant/sensor/motion/person.yaml
###

- platform: template
  sensors:
    motion_domain_person_status:
      friendly_name: Person status
      icon_template: 'mdi:account'
      attribute_templates:
        ids: >-
          [{%- for state in states.person -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- state.attributes.id -}}"
          {%- endfor -%}]
        connected: >-
          {{ states.person|selectattr('state','==','home')|list|count + states.person|selectattr('state','==','not_home')|list|count }}
        disconnected: >-
          {{ states.person|count - (states.person|selectattr('state','==','home')|list|count + states.person|selectattr('state','==','not_home')|list|count) }}
        agos: >-
          [{%- for state in states.person -%}
            {%- if not loop.first -%},{%- endif -%}
            {{- utcnow().timestamp() - state.last_updated|as_timestamp -}}
          {%- endfor -%}]
        online: >-
          {% set s = states.person|selectattr('state','!=','unknown')|list -%}
          {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
            {{- '{' -}}
            {%- for i in s -%}
              {%- if not loop.first -%},{%- endif -%}
              {%- set t = i.attributes.friendly_name -%}
              {%- set a = i.last_updated|relative_time -%}
              "{{- t -}}":"{{- a -}}"
            {%- endfor -%} 
            {{- '}' -}}
          {%- else -%}null{%- endif %}
        offline: >-
          {% set s = states.person|selectattr('state','==','unknown')|list -%}
          {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
            {{- '{' -}}
            {%- for i in s -%}
              {%- if not loop.first -%},{%- endif -%}
              {%- set t = i.attributes.friendly_name -%}
              {%- set a = i.last_updated|relative_time -%}
              "{{- t -}}":"{{- a -}}"
            {%- endfor -%} 
            {{- '}' -}}
          {%- else -%}null{%- endif %}
        recent: >-
          {% set s = states.person|selectattr('state','!=','unknown')|list -%}
          {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
            {%- set u = state_attr('sensor.motion_uptime','ago')|int -%}
            {%- set w = state_attr('sensor.motion_uptime','wait')|int -%}
            {%- set t = utcnow().timestamp()|int -%}
            {{- '{' -}}
            {%- for i in s if (t - i.last_updated|as_timestamp) < (u - w) -%}
              {%- if not loop.first -%},{%- endif -%}
              {%- set t = i.attributes.friendly_name -%}
              {%- set a = i.last_updated|relative_time -%}
              "{{- t -}}":"{{- a -}}"
            {%- endfor -%}
            {{- '}' -}}
          {%- else -%}null{%- endif %}
      value_template: >-
        {{- states('sensor.motion_domain_person_count') -}}; {{ states('sensor.motion_domain_person_percent') -}}%
    motion_domain_person_count:
      friendly_name: Person count
      icon_template: 'mdi:counter'
      unit_of_measurement: count
      attribute_templates:
        min: >-
          {{ states('sensor.motion_domain_person_count_min')|default('null') }}
        max: >-
          {{ states('sensor.motion_domain_person_count_max')|default('null') }}
        mean: >-
          {{ states('sensor.motion_domain_person_count_mean')|default('null') }}
        stdev: >-
          {{ states('sensor.motion_domain_person_count_stdev')|default('null') }}
      value_template: >-
        {% set s = states.person|default(null) %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' %}
          {{ s|count}}
        {% else %}null{% endif %}
    motion_domain_person_percent:
      friendly_name: Person on-line percent
      icon_template: 'mdi:percent'
      unit_of_measurement: '%'
      attribute_templates:
        min: >-
          {{ states('sensor.motion_domain_person_percent_min')|default('null') }}
        max: >-
          {{ states('sensor.motion_domain_person_percent_max')|default('null') }}
        mean: >-
          {{ states('sensor.motion_domain_person_percent_mean')|default('null') }}
        stdev: >-
          {{ states('sensor.motion_domain_person_percent_stdev')|default('null') }}
      value_template: >-
        {% set c = states('sensor.motion_domain_person_count')|int(0) %}
        {% if c > 0 %}
          {% set o = state_attr('sensor.motion_domain_person_status','connected')|int(0) %}
          {{ (o / c * 100)|int(0) }}
        {% else %}null{% endif %}

# count statistics

- platform: statistics
  name: motion_domain_person_count_min
  entity_id: sensor.motion_domain_person_count
  state_characteristic: value_min
  sampling_size: 100
  max_age:
    hours: 72

- platform: statistics
  name: motion_domain_person_count_mean
  entity_id: sensor.motion_domain_person_count
  state_characteristic: mean
  sampling_size: 100
  max_age:
    hours: 72

- platform: statistics
  name: motion_domain_person_count_max
  entity_id: sensor.motion_domain_person_count
  state_characteristic: value_max
  sampling_size: 100
  max_age:
    hours: 72

- platform: statistics
  name: motion_domain_person_count_stdev
  entity_id: sensor.motion_domain_person_count
  state_characteristic: standard_deviation
  sampling_size: 100
  max_age:
    hours: 72

# percent statistics

- platform: statistics
  name: motion_domain_person_percent_min
  entity_id: sensor.motion_domain_person_percent
  state_characteristic: value_min
  sampling_size: 100
  max_age:
    hours: 72

- platform: statistics
  name: motion_domain_person_percent_mean
  entity_id: sensor.motion_domain_person_percent
  state_characteristic: mean
  sampling_size: 100
  max_age:
    hours: 72

- platform: statistics
  name: motion_domain_person_percent_max
  entity_id: sensor.motion_domain_person_percent
  state_characteristic: value_max
  sampling_size: 100
  max_age:
    hours: 72

- platform: statistics
  name: motion_domain_person_percent_stdev
  entity_id: sensor.motion_domain_person_percent
  state_characteristic: standard_deviation
  sampling_size: 100
  max_age:
    hours: 72
