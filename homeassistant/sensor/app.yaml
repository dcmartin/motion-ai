###
## homeassistant/sensor/app.yaml
###

- platform: command_line
  name: motion_devices_config
  scan_interval: 86400
  command_timeout: 20
  command: "eval {{ states('input_text.motion_devices_config') -}}"
  json_attributes:
    - timestamp
    - config
  value_template: >
    {{- value_json is defined and 'timestamp' in value_json and 'config' in value_json -}}

- platform: command_line
  name: motion_database_clean
  scan_interval: 86400
  command_timeout: 10
  command: "eval {{ state_attr('sensor.motion_hub','rmdb') -}}"
  json_attributes:
    - exit
  value_template: >
    {{- value_json is defined and value_json is iterable and 'exit' in value_json -}}

- platform: command_line
  name: motion_database_size
  scan_interval: 1800
  command_timeout: 10
  command: "eval {{ state_attr('sensor.motion_hub','dudb') -}}"
  json_attributes:
    - kbytes
    - file
  value_template: >
    {{- value_json is defined and 'kbytes' in value_json and 'file' in value_json -}}

- platform: template
  sensors:
    motion_hub:
      friendly_name: Device
      icon_template: 'mdi:raspberry-pi'
      attribute_templates:
        unit_system: >-
          {%- set s = state_attr('sensor.motion_addon_config','config') -%}
          {%- if s is iterable and 'supervisor' in s and s.supervisor is iterable and 'config' in s.supervisor and s.supervisor.config is iterable and 'unit_system' in s.supervisor.config -%}
            {%- set unit_system = s.supervisor.config.unit_system -%}
          {%- else -%}
            {%- set unit_system = {'accumulated_precipitation':'in','length':'mi','mass':'lb','pressure':'psi','temperature':'Â°F','volume':'gal','wind_speed':'mph'} -%}
          {%- endif -%}
          {{ unit_system }}
        host: >-
          {% set host = none %}
          {% set s = states('sensor.motion_addon_config') %}
          {% if s|lower == 'true' %}
            {% set s = state_attr('sensor.motion_addon_config','config') %}
            {% if s is iterable and 'supervisor' in s %}
              {% set s = s.supervisor %}
              {% if s is iterable and 'host' in s %}
                {% set s = s.host %}
                {% if s is iterable and s.result|default('')|lower == 'ok' %}
                  {% set host = s.data %}
                {% endif %}
              {% endif %}
            {% endif %}
          {% endif %}
          {{ host }}
        info: >-
          {% set info = none %}
          {% set s = states('sensor.motion_addon_config') %}
          {% if s|lower == 'true' %}
            {% set s = state_attr('sensor.motion_addon_config','config') %}
            {% if s is iterable and 'supervisor' in s %}
              {% set s = s.supervisor %}
              {% if s is iterable and 'info' in s %}
                {% set s = s.info %}
                {% if s is iterable and s.result|default('')|lower == 'ok' %}
                  {% set info = s.data %}
                {% endif %}
              {% endif %}
            {% endif %}
          {% endif %}
          {{ info }}
        services: >-
          {% set services = none %}
          {% set s = states('sensor.motion_addon_config') %}
          {% if s|lower == 'true' %}
            {% set s = state_attr('sensor.motion_addon_config','config') %}
            {% if s is iterable and 'supervisor' in s %}
              {% set s = s.supervisor %}
              {% if s is iterable and 'services' in s %}
                {% set s = s.services %}
                {% if s is iterable and s.result|default('')|lower == 'ok' %}
                  {% set services = s.data %}
                {% endif %}
              {% endif %}
            {% endif %}
          {% endif %}
          {{ services }}
        lan: >-
          {{ states('sensor.host_lan_ipv4') }}
        wan: >-
          {{ states('sensor.host_wan_ip') }}
        disk: >-
          {%- set s = states.sensor.motion_sysmon_disk.attributes -%}
          {{- s -}}
        database: >-
          {% set s = state_attr('sensor.motion_database_size','kbytes') %}
          {% if s|lower != 'none' and s|float(0) > 0 %}
            {% set kb = s|float %}
            {% set gib = kb/1000000 %}
            {% set s = states('sensor.disk_use') %}
            {% if s|lower != 'none' and s|float(0) > 0 %}
              {% set usage = gib / s|float * 100 %}
            {% else %}
              {% set usage = 0 %}
            {% endif %}
              {"gib":{{ '%0.2f'|format(gib) }},"usage":{{ '%0.2f'|format(usage) }}}
          {% else %}none{% endif %}
        cleaned: >-
          {% set s = state_attr('sensor.motion_database_clean','exit') %}
          {{ s|lower == 'on' }}
        file: >-
          {{ state_attr('sensor.motion_database_size','file') }}
        rmdb: >-
          rm -fr /config/home-assistant* && echo '{"exit":"on"}' || echo '{"exit":"off"}'
        dudb: >-
          du -k /config/home-assistant_v2.db | awk '{ printf("{\"kbytes\":%d,\"file\":\"%s\"}",$1,$2) }'
      value_template: >-
        {% if states.input_text.motion_hub is defined %}
          {{ states('input_text.motion_hub') }}
        {% else %}null{% endif %}

## log level

- platform: template
  sensors:
    motion_log_level:
      friendly_name: Log level
      attribute_templates:
        all: >-
          {% set s = state_attr('input_select.motion_log_level','options') -%}
          {% set levels = none -%}
          {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
            {% set levels = s -%}
          {%- endif -%}
          {{- levels }}
        trace: >-
          {% set trace = ['trace'] -%}
          {{- trace }}
        debug: >-
          {% set debug = ['trace','debug'] -%}
          {{- debug }}
        info: >-
          {% set info = ['trace','debug','info'] -%}
          {{- info }}
        notice: >-
          {% set notice = ['trace','debug','info','notice'] -%}
          {{- notice }}
        alert: >-
          {% set alert = ['trace','debug','info','notice','alert'] -%}
          {{- alert }}
        critical: >-
          {% set critical = ['trace','debug','info','notice','alert','critical'] -%}
          {{- critical }}
      icon_template: >-
        {% set s = states('input_select.motion_log_level') -%}
        {%- if s|lower == 'critical' -%}
          {{- 'mdi:alert-circle' -}}
        {%- elif s|lower == 'alert' -%}
          {{- 'mdi:alert' -}}
        {%- elif s|lower == 'notice' -%}
          {{- 'mdi:message' -}}
        {%- elif s|lower == 'info' -%}
          {{- 'mdi:information' -}}
        {%- elif s|lower == 'debug' -%}
          {{- 'mdi:bug-check' -}}
        {%- elif s|lower == 'trace' -%}
          {{- 'mdi:bug' -}}
        {%- else -%}
          {{- 'mdi:cancel' -}}
        {%- endif -%}
      value_template: >-
        {{ states('input_select.motion_log_level') }}

- platform: template
  sensors:
    motion_group:
      friendly_name: Group
      icon_template: 'mdi:camera-control'
      value_template: >-
        {% if states.input_text.motion_group is defined %}
          {{ states.input_text.motion_group.state }}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_client:
      friendly_name: Client
      icon_template: 'mdi:message-settings'
      value_template: >-
        {% if states.input_text.motion_client is defined %}
          {{ states.input_text.motion_client.state }}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_app:
      friendly_name: App
      icon_template: >-
        {%- if is_state_attr('binary_sensor.motion_addon_update','addon','age_home') -%}
          {{- 'mdi:home-heart' -}}
        {%- elif is_state_attr('binary_sensor.motion_addon_update','addon','motion_classic') -%}
           {{- 'mdi:eye-plus' -}}
        {%- else -%}
           {{- 'mdi:apps' -}}
        {%- endif %}
      attribute_templates:
        entity_picture: >-
          {%- set s = state_attr('sensor.motion_name','addon') -%}
          {%- if s|lower != 'none' and 'update' in s -%}
            {%- set s = s['update'].entity_picture|default(none) -%}
          {%- endif -%}
          {%- if s|lower == 'none' -%}
            {%- set s = '/local/images/icon.png' -%}
          {%- endif -%}
          {{ s }}
        summary: >-
          There are {{ states('zone.home') }} people at home. Today is {{ state_attr('sensor.motion_date','summary') }} at {{ state_attr('sensor.motion_time','summary') -}}.
          System up {{ state_attr('sensor.motion_uptime','relative') -}}. Storage remaining: {{ state_attr('sensor.motion_sysmon_disk','time') -}}.
          There are {{ states('sensor.motion_alarm_count') }} active alarms of {{ state_attr('binary_sensor.motion_alarm','total') }} total alerts.
          Setup is {{ state_attr('binary_sensor.motion_device_class','summary') -}}.
          {% set s = state_attr('binary_sensor.motion_reload','config') %}
          {% if s|lower != 'none' %} Add-on updated {{ s }} ago.{% endif %}
          {% set s = state_attr('binary_sensor.motion_reload','valid') %}
          {% if s|lower != 'none' %}Configuration {% if s == True %}valid{% elif s == False %}invalid{% else %}pending{% endif %} {{ state_attr('binary_sensor.motion_reload','status') }} ago.{% endif -%}
      value_template: >-
        {%- set s = states('input_text.motion_app') -%}
        {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|string|length > 0 %}
          {{ s }}
        {% else %}
          {%- set s = state_attr('sensor.motion_name','title') -%}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|string|length > 0 %}
            {{ s }}
          {% else %}Unknown app{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_site:
      friendly_name: Site
      icon_template: 'mdi:home'
      value_template: >-
        {%- set s = states('input_text.motion_site') -%}
        {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|string|length > 0 %}
          {{ s }}
        {% else %}
          {%- set s = state_attr('sensor.motion_name','config') -%}
          {% if s|lower != 'none' and 'config' in s and 'ipaddr' in s.config and s.config.ipaddr|lower != 'none' %}
            {{ s }}
          {% else %}Unknown site{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_name:
      friendly_name: System name
      icon_template: >-
        {{- state_attr('binary_sensor.motion_addon_update','icon') -}}
      attribute_templates:
        entity_picture: >-
          {{- state_attr('binary_sensor.motion_addon_update','entity_picture') -}}
        addon: >-
          {%- set s = states.binary_sensor.motion_addon_update.attributes -%}
          {{- s -}}
        title: >-
          {%- set s = state_attr('binary_sensor.motion_addon_update','title') %}
          {% if s|lower != 'none'%}
            {{ s }}
          {% else %}none{% endif %}
        config: >-
          {%- set s = states.sensor.motion_addon_config.attributes -%}
          {{- s -}}
        wan_url: >-
         {{ states('sensor.motion_wan_url') }}
        base_url: >-
         {{ states('sensor.motion_base_url') }}
        ip: >-
         {{- state_attr('sensor.motion_wan_url','ip') -}}
        internet: >-
         {{- state_attr('sensor.motion_wan_url','status') -}}
        site: >-
         {% set s = states('input_text.motion_site') -%}
         {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {{- s -}}
         {%- else -%}My House{%- endif -%}
      value_template: >-
        {%- set s = states('input_text.motion_name') -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {%- set name = s|string -%}
        {%- endif -%}
        {%- if not name is defined -%}
          {%- set s = state_attr('binary_sensor.motion_addon_update','addon') -%}
          {%- if s|lower != 'none' -%}
            {%- set name = s -%}
          {%- else -%}
            {%- set name = 'homeassistant' -%}
          {%- endif -%}
        {%- endif -%}
        {{- name }}

- platform: template
  sensors:
    motion_wan_url:
      attribute_templates:
        ip: >-
          {{ states('sensor.internet_ip') }}
        status: >-
          {%- set s = states.sensor.internet_good.attributes -%}
          {{- s -}}
      value_template: >-
        {% set port = states('input_number.motion_port') %}
        {% set wan = states('sensor.internet_ip') %}
        {% if wan|lower != 'null' and wan|lower != 'none' and wan|lower != 'unknown' %}
          {{ 'http://' + wan + ':' + port|int|string }}
        {% else %}null{% endif %}
    motion_base_url:
      attribute_templates:
        wan: >-
          {{ states('sensor.motion_wan_url') }}
        ip: >-
          {{ state_attr('sensor.motion_wan_url','ip') }}
        status: >-
          {{ state_attr('sensor.motion_wan_url','status') }}
      value_template: >-
        {% set type = states('input_select.motion_url') %}
        {% set port = states('input_number.motion_port') %}
        {% set lan = states('sensor.host_lan_ipv4') %}
        {% set wan = states('sensor.internet_ip') %}
        {% set url = states('sensor.motion_url') %}
        {% if type|lower != 'none' and port|lower != 'none' and type|lower != 'unknown' and port|lower != 'unknown' %}
          {% if type == 'local' and lan|lower != 'none' and lan|lower != 'unknown' %}
            {% set p = 'http://' + lan + ':' + port|int|string %}
          {% elif type == 'remote' and wan|lower != 'null' and wan|lower != 'none' and wan|lower != 'unknown' %}
            {% set p = 'http://' + wan + ':' + port|int|string %}
          {% endif %}
        {% endif %}
        {% if p is  defined %}
          {{ p }}
        {% elif url|lower != 'none' and url|lower != 'unknown' %}
           {{ url }}
        {% elif port|lower != 'none' and port|lower != 'unknown' %}
           http://localhost:{{- port|int(0) }}
        {% else %}
           http://localhost
        {% endif %}

## POWER

- platform: template
  sensors:
    motion_power_status_ratio_today:
      friendly_name: 'Power ratio (1d)'
      icon_template: 'mdi:alert'
      attribute_templates:
        min: >-
          {{ states('sensor.motion_power_status_ratio_min_1d') }}
        max: >-
          {{ states('sensor.motion_power_status_ratio_max_1d') }}
        mean: >-
          {{ states('sensor.motion_power_status_ratio_mean_1d') }}
        count: >-
          {{ states('sensor.motion_power_status_ratio_count_1d') }}
        stdev: >-
          {{ states('sensor.motion_power_status_ratio_stdev_1d') }}
        coverage: >-
          {{ state_attr('sensor.motion_power_status_ratio_count_1d','age_coverage_ratio')|float(0) * 100 }}
        usage: >-
          {{ state_attr('sensor.motion_power_status_ratio_count_1d','buffer_usage_ratio')|float(0) * 100 }}
        oldest: >-
          {{ states('sensor.motion_power_status_ratio_oldest_1d') }}
      value_template: >-
        {{ states('sensor.motion_power_status_ratio_history_stats_1d')|int('null') }}

- platform: history_stats
  name: motion_power_status_ratio_history_stats_1d
  entity_id: binary_sensor.motion_power_status_status
  state: 'on'
  type: ratio
  start: >-
    {{ now().replace(hour=0).replace(minute=0).replace(second=0) }}
  end: '{{ now() }}'

- platform: statistics
  name: motion_power_status_ratio_oldest_1d
  entity_id: sensor.motion_power_status_ratio_history_stats_1d
  state_characteristic: datetime_oldest
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_ratio_count_1d
  entity_id: sensor.motion_power_status_ratio_history_stats_1d
  state_characteristic: count
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_ratio_mean_1d
  entity_id: sensor.motion_power_status_ratio_history_stats_1d
  state_characteristic: mean
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_ratio_min_1d
  entity_id: sensor.motion_power_status_ratio_history_stats_1d
  state_characteristic: value_min
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_ratio_max_1d
  entity_id: sensor.motion_power_status_ratio_history_stats_1d
  state_characteristic: value_max
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_ratio_stdev_1d
  entity_id: sensor.motion_power_status_ratio_history_stats_1d
  state_characteristic: standard_deviation
  sampling_size: 100
  max_age:
    days: 1

# ratio: 1 week

- platform: template
  sensors:
    motion_power_status_ratio_week:
      friendly_name: 'Power ratio (1w)'
      icon_template: 'mdi:alert'
      attribute_templates:
        min: >-
          {{ states('sensor.motion_power_status_ratio_min_1w') }}
        max: >-
          {{ states('sensor.motion_power_status_ratio_max_1w') }}
        mean: >-
          {{ states('sensor.motion_power_status_ratio_mean_1w') }}
        count: >-
          {{ states('sensor.motion_power_status_ratio_count_1w') }}
        stdev: >-
          {{ states('sensor.motion_power_status_ratio_stdev_1w') }}
        coverage: >-
          {{ state_attr('sensor.motion_power_status_ratio_count_1w','age_coverage_ratio')|float(0) * 100 }}
        usage: >-
          {{ state_attr('sensor.motion_power_status_ratio_count_1w','buffer_usage_ratio')|float(0) * 100 }}
        oldest: >-
          {{ states('sensor.motion_power_status_ratio_oldest_1w') }}
      value_template: >-
        {{ states('sensor.motion_power_status_ratio_history_stats_1w')|int('null') }}

- platform: history_stats
  name: motion_power_status_ratio_history_stats_1w
  entity_id: binary_sensor.motion_power_status_status
  state: 'on'
  type: ratio
  start: >-
    {{ state_attr('sensor.motion_power_status_week','start')|float(now().replace(hour=0).replace(minute=0).replace(second=0) - timedelta(days=7)) }}
  end: '{{ now() }}'

- platform: statistics
  name: motion_power_status_ratio_oldest_1w
  entity_id: sensor.motion_power_status_ratio_history_stats_1w
  state_characteristic: datetime_oldest
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_ratio_count_1w
  entity_id: sensor.motion_power_status_ratio_history_stats_1w
  state_characteristic: count
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_ratio_mean_1w
  entity_id: sensor.motion_power_status_ratio_history_stats_1w
  state_characteristic: mean
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_ratio_min_1w
  entity_id: sensor.motion_power_status_ratio_history_stats_1w
  state_characteristic: value_min
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_ratio_max_1w
  entity_id: sensor.motion_power_status_ratio_history_stats_1w
  state_characteristic: value_max
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_ratio_stdev_1w
  entity_id: sensor.motion_power_status_ratio_history_stats_1w
  state_characteristic: standard_deviation
  sampling_size: 100
  max_age:
    days: 7

## home_time

# time: 1 day

- platform: template
  sensors:
    motion_power_status_time_today:
      friendly_name: 'Power time (1d)'
      icon_template: 'mdi:clock-alert'
      attribute_templates:
        min: >-
          {{ states('sensor.motion_power_status_time_min_1d') }}
        max: >-
          {{ states('sensor.motion_power_status_time_max_1d') }}
        mean: >-
          {{ states('sensor.motion_power_status_time_mean_1d') }}
        count: >-
          {{ states('sensor.motion_power_status_time_count_1d') }}
        stdev: >-
          {{ states('sensor.motion_power_status_time_stdev_1d') }}
        coverage: >-
          {{ state_attr('sensor.motion_power_status_time_count_1d','age_coverage_time')|float(0) * 100 }}
        usage: >-
          {{ state_attr('sensor.motion_power_status_time_count_1d','buffer_usage_time')|float(0) * 100 }}
        oldest: >-
          {{ states('sensor.motion_power_status_time_oldest_1d') }}
      value_template: >-
        {{ states('sensor.motion_power_status_time_history_stats_1d')|int('null') }}

# 1 day

- platform: history_stats
  name: motion_power_status_time_history_stats_1d
  entity_id: binary_sensor.motion_power_status_status
  state: 'on'
  type: time
  start: >-
    {{ now().replace(hour=0).replace(minute=0).replace(second=0) }}
  end: '{{ now() }}'

- platform: statistics
  name: motion_power_status_time_oldest_1d
  entity_id: sensor.motion_power_status_time_history_stats_1d
  state_characteristic: datetime_oldest
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_time_count_1d
  entity_id: sensor.motion_power_status_time_history_stats_1d
  state_characteristic: count
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_time_mean_1d
  entity_id: sensor.motion_power_status_time_history_stats_1d
  state_characteristic: mean
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_time_min_1d
  entity_id: sensor.motion_power_status_time_history_stats_1d
  state_characteristic: value_min
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_time_max_1d
  entity_id: sensor.motion_power_status_time_history_stats_1d
  state_characteristic: value_max
  sampling_size: 100
  max_age:
    days: 1

- platform: statistics
  name: motion_power_status_time_stdev_1d
  entity_id: sensor.motion_power_status_time_history_stats_1d
  state_characteristic: standard_deviation
  sampling_size: 100
  max_age:
    days: 1

# 1 week

- platform: template
  sensors:
    motion_power_status_time_week:
      friendly_name: 'Power time (1w)'
      icon_template: 'mdi:clock-alert'
      attribute_templates:
        min: >-
          {{ states('sensor.motion_power_status_time_min_1w') }}
        max: >-
          {{ states('sensor.motion_power_status_time_max_1w') }}
        mean: >-
          {{ states('sensor.motion_power_status_time_mean_1w') }}
        count: >-
          {{ states('sensor.motion_power_status_time_count_1w') }}
        stdev: >-
          {{ states('sensor.motion_power_status_time_stdev_1w') }}
        coverage: >-
          {{ state_attr('sensor.motion_power_status_time_count_1w','age_coverage_ratio')|float(0) * 100 }}
        usage: >-
          {{ state_attr('sensor.motion_power_status_time_count_1w','buffer_usage_ratio')|float(0) * 100 }}
        oldest: >-
          {{ states('sensor.motion_power_status_time_oldest_1w') }}
      value_template: >-
        {{ states('sensor.motion_power_status_time_history_stats_1w')|int('null') }}

- platform: history_stats
  name: motion_power_status_time_history_stats_1w
  entity_id: binary_sensor.motion_power_status_status
  state: 'on'
  type: time
  start: >-
    {{ state_attr('sensor.motion_power_status_week','start')|float(now().replace(hour=0).replace(minute=0).replace(second=0) - timedelta(days=7)) }}
  end: '{{ now() }}'

- platform: statistics
  name: motion_power_status_time_oldest_1w
  entity_id: sensor.motion_power_status_time_history_stats_1w
  state_characteristic: datetime_oldest
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_time_count_1w
  entity_id: sensor.motion_power_status_time_history_stats_1w
  state_characteristic: count
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_time_mean_1w
  entity_id: sensor.motion_power_status_time_history_stats_1w
  state_characteristic: mean
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_time_min_1w
  entity_id: sensor.motion_power_status_time_history_stats_1w
  state_characteristic: value_min
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_time_max_1w
  entity_id: sensor.motion_power_status_time_history_stats_1w
  state_characteristic: value_max
  sampling_size: 100
  max_age:
    days: 7

- platform: statistics
  name: motion_power_status_time_stdev_1w
  entity_id: sensor.motion_power_status_time_history_stats_1w
  state_characteristic: standard_deviation
  sampling_size: 100
  max_age:
    days: 7

## power_status_today

- platform: template
  sensors:
    motion_power_status_today:
      friendly_name: 'Power (today)'
      icon_template: 'mdi:clock-alert'
      attribute_templates:
        start: >-
          {{ now().replace(hour=0).replace(minute=0).replace(second=0).timestamp() }}
        ratio: >-
          {%- set s = states('sensor.motion_power_status_ratio_history_stats_1d') -%}
          {%- if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' -%}
            {{- s|int(0) -}}
          {%- else -%}null{%- endif -%}
        time: >-
          {%- set s = states('sensor.motion_power_status_time_history_stats_1d') -%}
          {%- if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' -%}
            {{- s|int(0) -}}
          {%- else -%}null{%- endif -%}
        oldest: >-
          {{- states('sensor.motion_power_status_time_oldest_1d') -}}
      value_template: >-
        Ratio: {{ state_attr('sensor.motion_power_status_today','ratio') -}}%;
        Time: {{ state_attr('sensor.motion_power_status_today','time') -}}h;
        Oldest: {{ state_attr('sensor.motion_power_status_today','oldest') }}

## home_week

- platform: template
  sensors:
    motion_power_status_week:
      friendly_name: 'Power (week)'
      icon_template: 'mdi:clock-alert'
      attribute_templates:
        start: >-
          {{ (now().replace(hour=0).replace(minute=0).replace(second=0) - timedelta(days=7))|as_timestamp }}
        ratio: >-
          {%- set s = states('sensor.motion_power_status_ratio_history_stats_1w') -%}
          {%- if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' -%}
            {{- s|int(0) -}}
          {%- else -%}null{%- endif -%}
        time: >-
          {%- set s = states('sensor.motion_power_status_time_history_stats_1w') -%}
          {%- if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'null' -%}
            {{- s|int(0) -}}
          {%- else -%}null{%- endif -%}
        oldest: >-
          ["{{- state_attr('sensor.motion_power_status_ratio_week','oldest') -}}","{{-state_attr('sensor.motion_power_status_time_week','oldest') -}}"]
      value_template: >-
        Ratio: {{ state_attr('sensor.motion_power_status_week','ratio') -}}%;
        Time: {{ state_attr('sensor.motion_power_status_week','time') -}}h;
        Oldest: {{ state_attr('sensor.motion_power_status_week','oldest') }}
