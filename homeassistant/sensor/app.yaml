###
## homeassistant/sensor/app.yaml
###

- platform: command_line
  name: motion_database_size
  scan_interval: 120
  command_timeout: 10
  command: "eval {{- state_attr('sensor.motion_hub','command') -}}"
  json_attributes:
    - kbytes
    - file
  value_template: >
    {{- value_json is defined and 'kbytes' in value_json and 'file' in value_json -}}

- platform: template
  sensors:
    motion_hub:
      friendly_name: Device
      icon_template: 'mdi:raspberry-pi'
      attribute_templates:
        lan: >-
          {{ states('sensor.host_lan_ipv4') }}
        wan: >-
          {{ states('sensor.host_wan_ip') }}
        disk: >-
          {{ states.sensor.motion_sysmon_disk.attributes|default(null) }}
        database: >-
          {% set s = state_attr('sensor.motion_database_size','kbytes') %}
          {% if s|lower != 'none' and s|float(0) > 0 %}
            {% set kb = s|float %}
            {% set gib = kb/1000000 %}
            {% set s = states('sensor.disk_use') %}
            {% if s|lower != 'none' and s|float(0) > 0 %}
              {% set usage = gib / s|float * 100 %}
            {% else %}
              {% set usage = 0 %}
            {% endif %}
              {"gib":{{ '%0.2f'|format(gib) }},"usage":{{ '%0.2f'|format(usage) }}}
          {% else %}none{% endif %}
        file: >-
          {{ state_attr('sensor.motion_database_size','file') }}
        command: >-
          du -k /config/home-assistant_v2.db | awk '{ printf("{\"kbytes\":%d,\"file\":\"%s\"}",$1,$2) }'
      value_template: >-
        {% if states.input_text.motion_hub is defined %}
          {{ states('input_text.motion_hub') }}
        {% else %}null{% endif %}

## log level

- platform: template
  sensors:
    motion_log_level:
      friendly_name: Log level
      attribute_templates:
        all: >-
          {% set s = state_attr('input_select.motion_log_level','options') -%}
          {% set levels = none -%}
          {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
            {% set levels = s -%}
          {%- endif -%}
          {{- levels }}
        debug: >-
          {% set debug = ['trace','debug'] -%}
          {{- debug }}
        info: >-
          {% set info = ['trace','debug','info'] -%}
          {{- info }}
        notice: >-
          {% set notice = ['trace','debug','info','notice'] -%}
          {{- notice }}
        alert: >-
          {% set alert = ['trace','debug','info','notice','alert'] -%}
          {{- alert }}
        critical: >-
          {% set critical = ['trace','debug','info','notice','alert','critical'] -%}
          {{- critical }}
      icon_template: >-
        {% set s = states('input_select.motion_log_level') -%}
        {%- if s|lower == 'critical' -%}
          {{- 'mdi:alert-circle' -}}
        {%- elif s|lower == 'alert' -%}
          {{- 'mdi:alert' -}}
        {%- elif s|lower == 'notice' -%}
          {{- 'mdi:message' -}}
        {%- elif s|lower == 'info' -%}
          {{- 'mdi:information' -}}
        {%- elif s|lower == 'debug' -%}
          {{- 'mdi:bug' -}}
        {%- else -%}
          {{- 'mdi:cancel' -}}
        {%- endif -%}
      value_template: >-
        {{ states('input_select.motion_log_level') }}

- platform: template
  sensors:
    motion_group:
      friendly_name: Group
      icon_template: 'mdi:camera-control'
      value_template: >-
        {% if states.input_text.motion_group is defined %}
          {{ states.input_text.motion_group.state }}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_client:
      friendly_name: Client
      icon_template: 'mdi:message-settings'
      value_template: >-
        {% if states.input_text.motion_client is defined %}
          {{ states.input_text.motion_client.state }}
        {% else %}null{% endif %}

- platform: template
  sensors:
    motion_app:
      friendly_name: App
      icon_template: >-
        {%- if is_state_attr('binary_sensor.motion_addon_update','addon','age_home') -%}
          {{- 'mdi:home-heart' -}}
        {%- elif is_state_attr('binary_sensor.motion_addon_update','addon','motion_classic') -%}
           {{- 'mdi:eye-plus' -}}
        {%- else -%}
           {{- 'mdi:apps' -}}
        {%- endif %}
      attribute_templates:
        entity_picture: >-
          {%- set s = state_attr('sensor.motion_name','addon') -%}
          {%- if s|lower != 'none' and 'update' in s -%}
            {%- set s = s['update'].entity_picture|default(none) -%}
          {%- endif -%}
          {%- if s|lower == 'none' -%}
            {%- set s = '/local/images/icon.png' -%}
          {%- endif -%}
          {{ s }}
        summary: >-
          Today is {{ state_attr('sensor.motion_date','day') -}}, {{ state_attr('sensor.motion_date','month') }} {{ state_attr('sensor.motion_date','date') }}
          at {{ state_attr('sensor.motion_time','hour') -}}:{{- state_attr('sensor.motion_time','minute') }} {{ state_attr('sensor.motion_time','ampm') -}}.
          There are {{ states('zone.home') }} people at home.
          {% if states('weather.forecast')|lower != 'unknown' -%}Weather is {{ states('weather.forecast') -}}.{% endif %}
          Setup is {% if is_state('binary_sensor.motion_device_class_status','on') %}complete{% else %}incomplete{% endif -%}.
          There are {{ states('sensor.motion_alarm_count') }} active alarms of {{ state_attr('binary_sensor.motion_alarm','total') }} total alerts.
          System up for {{ state_attr('sensor.motion_uptime','relative') }}
          Add-on refreshed {{ state_attr('binary_sensor.motion_reload','config') }} ago,
          Configutation tested {{ state_attr('binary_sensor.motion_reload','valid') -}}; {{ state_attr('binary_sensor.motion_reload','status') }} ago.
      value_template: >-
        {%- set s = states('input_text.motion_app') -%}
        {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|string|length > 0 %}
          {{ s }}
        {% else %}
          {%- set s = state_attr('sensor.motion_name','title') -%}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|string|length > 0 %}
            {{ s }}
          {% else %}Unknown app{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_site:
      friendly_name: Site
      icon_template: 'mdi:home'
      value_template: >-
        {%- set s = states('input_text.motion_site') -%}
        {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|string|length > 0 %}
          {{ s }}
        {% else %}
          {%- set s = state_attr('sensor.motion_name','config') -%}
          {% if s|lower != 'none' and 'config' in s and 'ipaddr' in s.config and s.config.ipaddr|lower != 'none' %}
            {{ s }}
          {% else %}Unknown site{% endif %}
        {% endif %}

- platform: template
  sensors:
    motion_name:
      friendly_name: System name
      icon_template: >-
        {{- state_attr('binary_sensor.motion_addon_update','icon') -}}
      attribute_templates:
        entity_picture: >-
          {{- state_attr('binary_sensor.motion_addon_update','entity_picture') -}}
        addon: >-
          {{- states.binary_sensor.motion_addon_update.attributes|default(none) -}}
        title: >-
          {%- set s = state_attr('binary_sensor.motion_addon_update','title') %}
          {% if s|lower != 'none'%}
            {{ s }}
          {% else %}none{% endif %}
        config: >-
          {{- states.sensor.motion_addon_config.attributes|default(none) -}}
        wan_url: >-
         {{ states('sensor.motion_wan_url') }}
        base_url: >-
         {{ states('sensor.motion_base_url') }}
        ip: >-
         {{- state_attr('sensor.motion_wan_url','ip') -}}
        internet: >-
         {{- state_attr('sensor.motion_wan_url','status') -}}
        site: >-
         {% set s = states('input_text.motion_site') -%}
         {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {{- s -}}
         {%- else -%}My House{%- endif -%}
      value_template: >-
        {%- set s = states('input_text.motion_name') -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {%- set name = s|string -%}
        {%- endif -%}
        {%- if not name is defined -%}
          {%- set s = state_attr('binary_sensor.motion_addon_update','addon') -%}
          {%- if s|lower != 'none' -%}
            {%- set name = s -%}
          {%- else -%}
            {%- set name = 'homeassistant' -%}
          {%- endif -%}
        {%- endif -%}
        {{- name }}

- platform: template
  sensors:
    motion_wan_url:
      attribute_templates:
        ip: >-
          {{ states('sensor.internet_ip') }}
        status: >-
          {{- states.sensor.internet_good.attributes|default(none) -}}
      value_template: >-
        {% set port = states('input_number.motion_port') %}
        {% set wan = states('sensor.internet_ip') %}
        {% if wan|lower != 'null' and wan|lower != 'none' and wan|lower != 'unknown' %}
          {{ 'http://' + wan + ':' + port|int|string }}
        {% else %}null{% endif %}
    motion_base_url:
      attribute_templates:
        wan: >-
          {{ states('sensor.motion_wan_url') }}
        ip: >-
          {{ state_attr('sensor.motion_wan_url','ip') }}
        status: >-
          {{ state_attr('sensor.motion_wan_url','status') }}
      value_template: >-
        {% set type = states('input_select.motion_url') %}
        {% set port = states('input_number.motion_port') %}
        {% set lan = states('sensor.host_lan_ipv4') %}
        {% set wan = states('sensor.internet_ip') %}
        {% set url = states('sensor.motion_url') %}
        {% if type|lower != 'none' and port|lower != 'none' and type|lower != 'unknown' and port|lower != 'unknown' %}
          {% if type == 'local' and lan|lower != 'none' and lan|lower != 'unknown' %}
            {% set p = 'http://' + lan + ':' + port|int|string %}
          {% elif type == 'remote' and wan|lower != 'null' and wan|lower != 'none' and wan|lower != 'unknown' %}
            {% set p = 'http://' + wan + ':' + port|int|string %}
          {% endif %}
        {% endif %}
        {% if p is  defined %}
          {{ p }}
        {% elif url|lower != 'none' and url|lower != 'unknown' %}
           {{ url }}
        {% elif port|lower != 'none' and port|lower != 'unknown' %}
           http://localhost:{{- port|int(0) }}
        {% else %}
           http://localhost
        {% endif %}

