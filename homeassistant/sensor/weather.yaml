###
# sensor/weather.yaml
###

#- platform: rest
#  name: 'Weather.gov alert count'
#  scan_interval: 3600
#  resource: 'https://api.weather.gov/alerts/active/count'
#  value_template: >-
#    {% if value_json.zones.CA is defined %}
#      {{ value_json.zones.CA }}
#    {% else %}0{% endif %}

- platform: template
  sensors:
    weather_dawn:
      value_template: >-
        {{ state_attr('sun.sun','next_dawn')|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
    weather_sunrise:
      value_template: >-
        {{ states.sun.sun.attributes.next_rising|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
    weather_sunset:
      value_template: >-
        {{ states.sun.sun.attributes.next_setting|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
    weather_dusk:
      value_template: >-
        {{ states.sun.sun.attributes.next_dusk|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
    weather_home:
      attribute_templates:
        summary: >-
          {%- if is_state('binary_sensor.weather_forecasted','on') -%}
            Outside is {{ state_attr('binary_sensor.weather_forecasted','condition') }} {{ state_attr('binary_sensor.weather_forecasted','temperature') }} degrees and {{ state_attr('binary_sensor.weather_forecasted','humidity') -}}% humidity.  Wind is {{ state_attr('binary_sensor.weather_forecasted','speed') }} from {{ state_attr('binary_sensor.weather_forecasted','direction') -}}.  {% set d = state_attr('binary_sensor.weather_forecasted','days') %} Over the next {{ d }} days the temperature will range from {{ state_attr('binary_sensor.weather_forecasted','lows')|min }} to {{ state_attr('binary_sensor.weather_forecasted','temperatures')|max -}}. 
            {%- set s = state_attr('binary_sensor.weather_forecasted','precipitations')|select('number')|list|sum -%}
            {%- set r = state_attr('binary_sensor.weather_forecasted','precipitations')|reject('==',0)|list|count -%}
            {%- if s|int > 0 and d|int > 0 %} Rain expected {{ r }} days
            {%- else -%}No rain expected{%- endif -%}
          {%- endif -%}
      value_template: >-
        {%- set s = states('sensor.motion_name') -%}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {%- set e = 'weather.' + s|lower|replace('-','_')|replace(' ','_') -%}
        {%- endif -%}
        {%- if e is defined and states(e)|lower != 'none' and states(e)|lower != 'unknown' -%}
          {{- e -}}
        {%- else -%}
          {%- if states.weather|count > 0 -%}
            {%- for n in states.weather|list|sort(reverse=true,attribute='last_updated') if n.entity_id != 'weather.forecast' -%}
              {%- if loop.first -%}{{- n.entity_id -}}{%- endif -%}
            {%- endfor -%}
          {%- else -%}null{%- endif -%}
        {%- endif -%}
    weather_ago_relative:
      friendly_name: 'Weather ago'
      icon_template: 'mdi:clock'
      value_template: >-
        {% set s = states('sensor.weather_ago') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set s = s|int(0) %}
          {% set h = (s/3600)|int(0) %}
          {% set m = ((s-(h*3600))/60)|int(0) %}
          {% set s = (s % 60)|int(0) %}
          {% if h < 1 %}
            {% if m < 1 %}
              {{- '00:00:' + '%02d' % s -}}
            {% else %}
            {{- '00:' + '%02d' % m + ':' + '%02d' % s -}}
            {% endif %}
          {% else %}
            {{- '%02d' % h + ':' + '%02d' % m + ':' + '%02d' % s -}}
          {% endif %}
        {% else %}Pending{% endif %}
    weather_ago:
      value_template: >-
        {% set s = states('sensor.weather_home') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set h = s %}
          {% set s = state_attr(h,'forecast') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
            {{ utcnow().timestamp() - states[h].last_updated|as_timestamp(0) }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
    weather_forecast:
      friendly_name: Weather forecast
      icon_template: >-
        {% set s = state_attr('binary_sensor.weather_forecasted','icon') %}
        {% if s|lower != 'none' %}{{ s }}{% else %}{{ 'mdi:cancel' }}{% endif %}
      value_template: >-
        {% set s = states('sensor.weather_home') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {{ states(s) }}
        {% else %}null{% endif %}

# temperature

- platform: template
  sensors:
    weather_temperature:
      friendly_name: Exterior temperature
      device_class: temperature
      attribute_templates:
        age: >-
          {{ timedelta(days=7) }}
        min: >-
          {{ states('sensor.weather_temperature_min')|default('null') }}
        max: >-
          {{ states('sensor.weather_temperature_max')|default('null') }}
        mean: >-
          {{ states('sensor.weather_temperature_mean')|default('null') }}
        stdev: >-
          {{ states('sensor.weather_temperature_stdev')|default('null') }}
        oldest: >-
          {{ states('sensor.weather_temperature_oldest') }}
        coverage: >-
         {{ state_attr('sensor.weather_temperature_oldest','age_coverage_ratio')|float(0) * 100 }}
        usage: >-
         {{ state_attr('sensor.weather_temperature_oldest','buffer_usage_ratio')|float(0) * 100 }}
        quartiles: >-
          {{ states('sensor.weather_temperature_quartiles_1w') }}
      value_template: >-
        {{- state_attr('binary_sensor.weather_forecasted','temperature') -}}

# history

- platform: history_stats
  name: weather_temperature_history_1w
  entity_id: binary_sensor.weather_forecasted
  state: 'on'
  type: ratio 
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) - timedelta(days=7) }}'
  end: '{{ now() }}'

# statistics

- platform: statistics
  name: weather_temperature_oldest
  entity_id: sensor.weather_temperature_history_1w
  state_characteristic: datetime_oldest
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_min
  entity_id: sensor.weather_temperature
  state_characteristic: value_min
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_mean
  entity_id: sensor.weather_temperature
  state_characteristic: mean
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_max
  entity_id: sensor.weather_temperature
  state_characteristic: value_max
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_stdev
  entity_id: sensor.weather_temperature
  state_characteristic: standard_deviation
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_quartiles_1w
  entity_id: sensor.weather_temperature
  state_characteristic: quantiles
  quantile_intervals: 4
  quantile_method: inclusive
  sampling_size: 1000
  max_age:
    days: 7

