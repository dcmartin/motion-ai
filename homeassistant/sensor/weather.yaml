###
# sensor/weather.yaml
###

- platform: template
  sensors:
    weather_dawn:
      value_template: >-
        {{ state_attr('sun.sun','next_dawn')|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
    weather_sunrise:
      value_template: >-
        {{ states.sun.sun.attributes.next_rising|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
    weather_sunset:
      value_template: >-
        {{ states.sun.sun.attributes.next_setting|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
    weather_dusk:
      value_template: >-
        {{ states.sun.sun.attributes.next_dusk|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
    weather_home:
      attribute_templates:
        summary: >-
          {%- if is_state('binary_sensor.weather_forecasted','on') -%}
            {%- set s = '%0.2f'|format(state_attr('binary_sensor.weather_forecasted','precipitations')|select('number')|list|sum) -%}
            {%- set r = state_attr('binary_sensor.weather_forecasted','precipitations')|select('number')|reject('==',0)|list|count -%}
            {%- set c = state_attr('binary_sensor.weather_forecasted','condition') -%}
            {%- set t = state_attr('binary_sensor.weather_forecasted','temperature') -%}
            {%- set h = state_attr('binary_sensor.weather_forecasted','humidity') -%}
            {%- set w = state_attr('binary_sensor.weather_forecasted','speed') -%}
            {%- set b = state_attr('binary_sensor.weather_forecasted','direction') -%}
            {%- set d = state_attr('binary_sensor.weather_forecasted','days') -%}
            {%- set n = state_attr('binary_sensor.weather_forecasted','lows')|min -%}
            {%- set m = state_attr('binary_sensor.weather_forecasted','temperatures')|max -%}
            {%- set us = state_attr('sensor.motion_hub','unit_system') -%}
            {%- set ap = 'total' -%}
            {%- set tp = 'Â°' -%}
            {%- set ws = '' -%}
            {%- if us|lower != 'none' and us is iterable and 'accumulated_precipitation' in us -%}
              {%- set ap = us.accumulated_precipitation -%}
              {%- set tp = us.temperature -%}
              {%- set ws = us.wind_speed -%}
            {%- endif -%}
            Outside is {{ c -}}; {{ t  }}{{ tp }} with {{ h -}}% humidity. Wind is {{ w }}{{ ws }} from {{ b -}}. Over the next {{ d }} days the temperature will range from {{ n  }}{{ tp }} to {{ m }}{{ tp -}}. {% if s|int > 0 and d|int > 0 %}Precipitation expected ({{- s }} {{ ap -}}) over {{ r }} days{%- else %}No precipitation forecasted{%- endif -%}.
          {%- endif -%}
      value_template: >-
        {%- set s = states('sensor.motion_name') -%}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {%- set e = 'weather.' + s|lower|replace('-','_')|replace(' ','_') -%}
        {%- endif -%}
        {%- if e is defined and states(e)|lower != 'none' and states(e)|lower != 'unknown' -%}
          {{- e -}}
        {%- else -%}
          {%- if states.weather|count > 0 -%}
            {%- for n in states.weather|list|sort(reverse=true,attribute='last_updated') if n.entity_id != 'weather.forecast' -%}
              {%- if loop.first -%}{{- n.entity_id -}}{%- endif -%}
            {%- endfor -%}
          {%- else -%}null{%- endif -%}
        {%- endif -%}
    weather_ago_relative:
      friendly_name: 'Weather ago'
      icon_template: 'mdi:clock'
      value_template: >-
        {% set s = states('sensor.weather_ago') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set s = s|int(0) %}
          {% set h = (s/3600)|int(0) %}
          {% set m = ((s-(h*3600))/60)|int(0) %}
          {% set s = (s % 60)|int(0) %}
          {% if h < 1 %}
            {% if m < 1 %}
              {{- '00:00:' + '%02d' % s -}}
            {% else %}
            {{- '00:' + '%02d' % m + ':' + '%02d' % s -}}
            {% endif %}
          {% else %}
            {{- '%02d' % h + ':' + '%02d' % m + ':' + '%02d' % s -}}
          {% endif %}
        {% else %}Pending{% endif %}
    weather_ago:
      value_template: >-
        {% set s = states('sensor.weather_home') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set h = s %}
          {% set s = state_attr(h,'forecast') %}
          {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
            {{ utcnow().timestamp() - states[h].last_updated|as_timestamp(0) }}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
    weather_forecast:
      friendly_name: Weather forecast
      icon_template: >-
        {% set s = state_attr('binary_sensor.weather_forecasted','icon') %}
        {% if s|lower != 'none' %}{{ s }}{% else %}{{ 'mdi:cancel' }}{% endif %}
      value_template: >-
        {% set s = states('sensor.weather_home') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {{ states(s) }}
        {% else %}null{% endif %}

# temperature

- platform: template
  sensors:
    weather_temperature:
      friendly_name: Exterior temperature
      device_class: temperature
      attribute_templates:
        age: >-
          {{ timedelta(days=7) }}
        min: >-
          {{ states('sensor.weather_temperature_min')|default('null') }}
        max: >-
          {{ states('sensor.weather_temperature_max')|default('null') }}
        mean: >-
          {{ states('sensor.weather_temperature_mean')|default('null') }}
        stdev: >-
          {{ states('sensor.weather_temperature_stdev')|default('null') }}
        oldest: >-
          {{ states('sensor.weather_forecasted_oldest') }}
        coverage: >-
         {{ state_attr('sensor.weather_forecasted_oldest','age_coverage_ratio')|float(0) * 100 }}
        usage: >-
         {{ state_attr('sensor.weather_forecasted_oldest','buffer_usage_ratio')|float(0) * 100 }}
      value_template: >-
        {{- state_attr('binary_sensor.weather_forecasted','temperature') -}}

# history

- platform: history_stats
  name: weather_forecasted_history_1w
  entity_id: binary_sensor.weather_forecasted
  state: 'on'
  type: ratio
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) - timedelta(days=7) }}'
  end: '{{ now() }}'

- platform: statistics
  name: weather_forecasted_oldest
  entity_id: sensor.weather_forecasted_history_1w
  state_characteristic: datetime_oldest
  sampling_size: 1000
  max_age:
    days: 7

# statistics

- platform: statistics
  name: weather_temperature_min
  entity_id: sensor.weather_temperature
  state_characteristic: value_min
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_mean
  entity_id: sensor.weather_temperature
  state_characteristic: mean
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_max
  entity_id: sensor.weather_temperature
  state_characteristic: value_max
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_stdev
  entity_id: sensor.weather_temperature
  state_characteristic: standard_deviation
  sampling_size: 1000
  max_age:
    days: 7

## ambient weather station

- platform: template
  sensors:
    weather_ambient_api:
      friendly_name: Ambient API
      icon_template: 'mdi:web'
      value_template: >-
        {{ '' }}

- platform: command_line
  name: weather_ambient_command
  scan_interval: 300
  command_timeout: 10
  command: "eval {{ state_attr('sensor.weather_ambient','eval') }}"
  json_attributes:
    - devices
  value_template: >
    {{- value_json is defined and value_json is iterable -}}

- platform: rest
  name: weather_ambient_rest
  timeout: 10
  authentication: 'basic'
  scan_interval: 60
  method: 'GET'
  json_attributes_path: '$.[0]'
  json_attributes:
    - macAddress
    - lastData
    - info
  force_update: true
  resource_template: >-
    {{ state_attr('binary_sensor.weather_ambient','resource') }}
  value_template: >-
    {{- value_json is defined and value_json is iterable -}}

- platform: template
  sensors:
    weather_ambient:
      friendly_name: Add-on configuration
      icon_template: 'mdi:apps'
      attribute_templates:
        eval: >-
          {%- set s = state_attr('binary_sensor.weather_ambient','resource') -%}
          {{- 'curl -sSL -k "' +  s|string + '"' + '| jq \'{"devices":to_entries}\'' -}}
        rest: >-
          {% set s = states('sensor.weather_ambient_rest') %}
          {% if s|lower == 'true' %}on{% elif s|lower == 'false' %}off{% else %}unknown{% endif %}
        command: >-
          {% set s = states('sensor.weather_ambient_command') %}
          {% if s|lower == 'true' %}on{% elif s|lower == 'false' %}off{% else %}unknown{% endif %}
        source: >-
          {% set s = state_attr('sensor.weather_ambient_rest','lastData') %}
          {% if s|lower != 'none' and s is iterable and 'dateutc' in s %}
            {% set r = s.dateutc %}
          {% endif %}
          {% set s = state_attr('sensor.weather_ambient_command','devices') %}
          {% if s|lower != 'none' and s is iterable and s|count > 0 %}
            {%- set s = s|first -%}
            {% if s|lower != 'none' and s is iterable and 'lastData' in s %}
              {% set c = s.lastData.dateutc -%}
            {% endif %}
          {% endif %}
          {% if r is defined and r|lower != 'none' and r|int(0) > 0  and c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {% if r|int(0) > c|int(0) %}
              {{ 'rest' }}
            {% else %}
              {{ 'command' }}
            {% endif %}
          {% elif r is defined and r|lower != 'none' and r|int(0) > 0 %}
            {{ 'rest' }}
          {% elif c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {{ 'command' }}
          {% else %}none{% endif %}
        timestamp: >-
          {% set s = state_attr('sensor.weather_ambient_rest','lastData') %}
          {% if s|lower != 'none' and s is iterable and 'dateutc' in s %}
            {% set r = s.dateutc %}
          {% endif %}
          {% set s = state_attr('sensor.weather_ambient_command','devices') %}
          {% if s|lower != 'none' and s is iterable and s|count > 0 %}
            {% set s = s|first -%}
            {% if s|lower != 'none' and s is iterable and 'lastData' in s %}
              {% set c = s.lastData.dateutc -%}
            {% endif %}
          {% endif %}
          {% if r is defined and r|lower != 'none' and r|int(0) > 0  and c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {% if r|int(0) > c|int(0) %}
              {{ r }}
            {% else %}
              {{ c }}
            {% endif %}
          {% elif r is defined and r|lower != 'none' and r|int(0) > 0 %}
            {{ r }}
          {% elif c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {{ c }}
          {% else %}none{% endif %}
        info: >-
          {% set s = state_attr('sensor.weather_ambient_rest','lastData') %}
          {% if s|lower != 'none' and s is iterable and 'dateutc' in s %}
            {% set r = s.dateutc %}
            {% set sr = state_attr('sensor.weather_ambient_rest','info') %}
          {% endif %}
          {% set s = state_attr('sensor.weather_ambient_command','devices') %}
          {% if s|lower != 'none' and s is iterable and s|count > 0 %}
            {% set s = s|first %}
            {% if s|lower != 'none' and s is iterable and 'lastData' in s %}
              {% set c = s.lastData.dateutc %}
              {% set sc = s.info %}
            {% endif %}
          {% endif %}
          {% if r is defined and r|lower != 'none' and r|int(0) > 0  and c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {% if r|int(0) > c|int(0) %}
              {{ sr }}
            {% else %}
              {{ sc }}
            {% endif %}
          {% elif r is defined and r|lower != 'none' and r|int(0) > 0 %}
            {{ sr }}
          {% elif c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {{ sc }}
          {% else %}none{% endif %}
        lastData: >-
          {% set s = state_attr('sensor.weather_ambient_rest','lastData') %}
          {% if s|lower != 'none' and s is iterable and 'dateutc' in s %}
            {% set r = s.dateutc %}
            {% set sr = s %}
          {% endif %}
          {% set s = state_attr('sensor.weather_ambient_command','devices') %}
          {% if s|lower != 'none' and s is iterable and s|count > 0 %}
            {% set s = s|first %}
            {% if s|lower != 'none' and s is iterable and 'lastData' in s %}
              {% set c = s.lastData.dateutc %}
              {% set sc = s.lastData %}
            {% endif %}
          {% endif %}
          {% if r is defined and r|lower != 'none' and r|int(0) > 0  and c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {% if r|int(0) > c|int(0) %}
              {{ sr }}
            {% else %}
              {{ sc }}
            {% endif %}
          {% elif r is defined and r|lower != 'none' and r|int(0) > 0 %}
            {{ sr }}
          {% elif c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {{ sc }}
          {% else %}none{% endif %}
        macAddress: >-
          {% set s = state_attr('sensor.weather_ambient_rest','lastData') %}
          {% if s|lower != 'none' and s is iterable and 'dateutc' in s %}
            {% set r = s.dateutc %}
            {% set sr = state_attr('sensor.weather_ambient_rest','macAddress') %}
          {% endif %}
          {% set s = state_attr('sensor.weather_ambient_command','devices') %}
          {% if s|lower != 'none' and s is iterable and s|count > 0 %}
            {% set s = s|first %}
            {% if s|lower != 'none' and s is iterable and 'lastData' in s %}
              {% set c = s.lastData.dateutc %}
              {% set sc = s.macAddress %}
            {% endif %}
          {% endif %}
          {% if r is defined and r|lower != 'none' and r|int(0) > 0  and c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {% if r|int(0) > c|int(0) %}
              {{ sr }}
            {% else %}
              {{ sc }}
            {% endif %}
          {% elif r is defined and r|lower != 'none' and r|int(0) > 0 %}
            {{ sr }}
          {% elif c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {{ sc }}
          {% else %}none{% endif %}
      value_template: >-
          {% set s = state_attr('sensor.weather_ambient_rest','lastData') %}
          {% if s|lower != 'none' and s is iterable and 'dateutc' in s %}
            {% set r = s.dateutc %}
          {% endif %}
          {% set s = state_attr('sensor.weather_ambient_command','devices') %}
          {% if s|lower != 'none' and s is iterable and s|count > 0 %}
            {%- set s = s|first -%}
            {% if s|lower != 'none' and s is iterable and 'lastData' in s %}
              {% set c = s.lastData.dateutc -%}
            {% endif %}
          {% endif %}
          {% if r is defined and r|lower != 'none' and r|int(0) > 0  and c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {% if r|int(0) > c|int(0) %}
              {{ 'on' }}
            {% else %}
              {{ 'on' }}
            {% endif %}
          {% elif r is defined and r|lower != 'none' and r|int(0) > 0 %}
            {{ 'on' }}
          {% elif c is defined and c|lower != 'none' and c|int(0) > 0 %}
            {{ 'on' }}
          {% else %}off{% endif %}

# temperature

- platform: template
  sensors:
    weather_temperature_ambient:
      friendly_name: Ambient temperature
      device_class: temperature
      attribute_templates:
        age: >-
          {{ timedelta(days=7) }}
        min: >-
          {{ states('sensor.weather_temperature_ambient_min')|default('null') }}
        max: >-
          {{ states('sensor.weather_temperature_ambient_max')|default('null') }}
        mean: >-
          {{ states('sensor.weather_temperature_ambient_mean')|default('null') }}
        stdev: >-
          {{ states('sensor.weather_temperature_ambient_stdev')|default('null') }}
        oldest: >-
          {{ states('sensor.weather_ambient_oldest') }}
        coverage: >-
         {{ state_attr('sensor.weather_ambient_oldest','age_coverage_ratio')|float(0) * 100 }}
        usage: >-
         {{ state_attr('sensor.weather_ambient_oldest','buffer_usage_ratio')|float(0) * 100 }}
      value_template: >-
        {%- set s = state_attr('sensor.weather_ambient','lastData') -%}
        {%- if s|lower != 'none' and s is iterable and 'tempf' in s -%}
          {{- s.tempf -}}
        {%- else -%}none{%- endif -%}

# history

- platform: history_stats
  name: weather_ambient_history_1w
  entity_id: binary_sensor.weather_ambient
  state: 'on'
  type: ratio
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) - timedelta(days=7) }}'
  end: '{{ now() }}'

- platform: statistics
  name: weather_ambient_oldest
  entity_id: sensor.weather_ambient_history_1w
  state_characteristic: datetime_oldest
  sampling_size: 1000
  max_age:
    days: 7

# statistics

- platform: statistics
  name: weather_temperature_ambient_min
  entity_id: sensor.weather_temperature_ambient
  state_characteristic: value_min
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_ambient_mean
  entity_id: sensor.weather_temperature_ambient
  state_characteristic: mean
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_ambient_max
  entity_id: sensor.weather_temperature_ambient
  state_characteristic: value_max
  sampling_size: 1000
  max_age:
    days: 7

- platform: statistics
  name: weather_temperature_ambient_stdev
  entity_id: sensor.weather_temperature_ambient
  state_characteristic: standard_deviation
  sampling_size: 1000
  max_age:
    days: 7

# rain

- platform: template
  sensors:
    weather_rain:
      friendly_name: Rain (1h)
      device_class: 'precipitation'
      unit_of_measurement: 'in'
      attribute_templates:
        hour: >- 
          {{ states('sensor.weather_rain_1h') }}
        today: >- 
          {{ states('sensor.weather_rain_1d') }}
        week: >- 
          {{ states('sensor.weather_rain_1w') }}
        month: >- 
          {{ states('sensor.weather_rain_1m') }}
        total: >- 
          {{ states('sensor.weather_rain_total') }}
        age: >-
          {{ timedelta(days=90) }}
        min: >-
          {{ states('sensor.weather_rain_min_1d')|default('null') }}
        max: >-
          {{ states('sensor.weather_rain_max_1d')|default('null') }}
        mean: >-
          {{ states('sensor.weather_rain_mean_1d')|default('null') }}
        stdev: >-
          {{ states('sensor.weather_rain_stdev_1d')|default('null') }}
        oldest: >-
          {{ states('sensor.weather_ambient_oldest') }}
        coverage: >-
         {{ state_attr('sensor.weather_ambient_oldest','age_coverage_ratio')|float(0) * 100 }}
        usage: >-
         {{ state_attr('sensor.weather_ambient_oldest','buffer_usage_ratio')|float(0) * 100 }}
        last: >- 
          {%- set s = state_attr('binary_sensor.weather_ambient','data') -%}
          {%- if s|lower != 'none' and s is iterable and 'lastRain' in s -%}
            {{- s.lastRain|as_timestamp('none') -}}
          {%- else -%}none{%- endif -%}
        relative: >- 
          {%- set s = state_attr('binary_sensor.weather_ambient','data') -%}
          {%- if s|lower != 'none' and s is iterable and 'lastRain' in s -%}
            {{- s.lastRain|as_timestamp|as_datetime|relative -}}
          {%- else -%}none{%- endif -%}
      value_template: >-
        {%- set s = state_attr('binary_sensor.weather_ambient','data') -%}
        {%- if s|lower != 'none' and s is iterable and 'hourlyrainin' in s -%}
          {{- s.hourlyrainin -}}
        {%- else -%}none{%- endif -%}

# statistics

- platform: statistics
  name: weather_rain_min_1d
  entity_id: sensor.weather_rain_1d
  state_characteristic: value_min
  sampling_size: 1000
  max_age:
    days: 90

- platform: statistics
  name: weather_rain_mean_1d
  entity_id: sensor.weather_rain_1d
  state_characteristic: mean
  sampling_size: 1000
  max_age:
    days: 90

- platform: statistics
  name: weather_rain_max_1d
  entity_id: sensor.weather_rain_1d
  state_characteristic: value_max
  sampling_size: 1000
  max_age:
    days: 90

- platform: statistics
  name: weather_rain_stdev_1d
  entity_id: sensor.weather_rain_1d
  state_characteristic: standard_deviation
  sampling_size: 1000
  max_age:
    days: 90
