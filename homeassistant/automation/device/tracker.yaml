###
# homeassistant/automation/motion/device_tracker.yaml
###

- id: motion_device_tracker_created
  alias: motion_device_tracker_created
  initial_state: 'on'
  mode: queued
  trigger:
    - platform: event
      event_type: entity_registry_updated
      event_data:
        action: create
  condition:
    - condition: template
      value_template: >-
       {{ trigger.event.data.entity_id.split('.')[0] == 'device_tracker' }}
  action:
    - alias: 'set binary_sensor.motion_device_tracker_created to on'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_tracker_created
        device: >-
          {{ trigger.event.data.entity_id.split('.')|string }}
        event: >-
          {{ trigger.event }}
        timestamp: >-
          {{ utcnow().timestamp() }}
        state: >-
          {{ 'on' }}

- id: motion_device_tracker_automation_enable
  alias: motion_device_tracker_automation_enable
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_device_tracker_exist
    to: 'on'
  variables:
    automations: >-
      {% set automations = ['motion_device_tracker_activity_test','motion_device_tracker_activity_notify','motion_device_tracker_activity_dismiss'] %}
      {{ automations }}
  action:
    - alias: 'enable automations for device_tracker'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = automations[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = automations[repeat.index-1] %}
                {{ 'automation.' + s|string }}
          - condition: template
            value_template: >-
              {{ states(automation)|lower == 'off' }}
          - alias: 'enable automation'
            service: automation.turn_on
            data_template:
              entity_id: >-
                {{ automation }}

- id: motion_device_tracker_automation_disable
  alias: motion_device_tracker_automation_disable
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_device_tracker_exist
    to: 'off'
  variables:
    automations: >-
      {% set automations = ['motion_device_tracker_activity_test','motion_device_tracker_activity_notify','motion_device_tracker_activity_dismiss'] %}
      {{ automations }}
  action:
    - alias: 'disable automations for device_tracker'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = automations[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = automations[repeat.index-1] %}
                {{ 'automation.' + s|string }}
          - condition: template
            value_template: >-
              {{ states(automation)|lower == 'on' }}
          - alias: 'disable automation'
            service: automation.turn_off
            data_template:
              entity_id: >-
                {{ automation }}

- id: motion_device_tracker_rescan
  alias: motion_device_tracker_rescan
  mode: queued
  max_exceeded: 'warn'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.motion_person
      attribute: 'device'
    - platform: state
      entity_id: sensor.motion_primary
      attribute: 'device'
    - platform: homeassistant
      event: start
    - platform: time_pattern
      minutes: '/5'
  variables:
    dids: >-
      {% set dids = state_attr('binary_sensor.motion_device_tracker_exist','dids') %}
      {{ dids }}
    total: >-
      {% set total = 0 -%}
      {%- if dids|lower != 'none' and dids is iterable -%}
        {%- set total = dids|count -%}
      {%- endif -%}
      {{- total }}
    device_list: >-
      {%- set device_trackers = states.device_tracker|map(attribute='entity_id')|map('device_id')|list -%}
      {%- set s = state_attr('binary_sensor.motion_device_class','sensor_list')|list + state_attr('binary_sensor.motion_device_class','binary_sensor_list')|list -%}
      [{%- for i in s|sort|unique if i|lower != 'none' and not is_state_attr('binary_sensor.motion_device_' + i|string,'devices','none') -%}
        {%- set l = loop -%}
        {%- set e = 'binary_sensor.motion_device_' + i|string -%}
        {%- set devices = state_attr(e, 'devices') -%}
        {%- for j in devices|map(attribute='did')|list if j|lower != 'none' and j in device_trackers -%}
          {%- set lo = loop -%}
          {%- for id in states.person|selectattr('attributes.source', 'defined')|map(attribute='attributes.source')|reject('none') if j == device_id(id) -%}
            {%- set loo = loop -%}
            {%- set p = states.person|selectattr('attributes.source', 'defined')|selectattr('attributes.source','==',id)|map(attribute='entity_id')|first -%}
            {"class":"{{- i -}}","did":"{{- j -}}","person":"{{- p|default(none)|replace('person.','') -}}"}
            {%- if not (loop.last and loo.last and lo.last and l.last) -%},{%- endif -%}
          {%- endfor %}
        {%- endfor -%}
      {%- endfor -%}]
    devices: >-
      {% set found = device_list|reject('none')|selectattr('did','defined')|list -%}
      {%- if not found is string and found is iterable and found|count > 0 -%}
        [{%- for i in found|map(attribute='did')|sort|unique|list -%}
          {%- if not loop.first -%},{%- endif -%}
          {%- set c = found|selectattr('did','==',i)|map(attribute='class')|list -%}
          {%- set p = found|selectattr('did','==',i)|map(attribute='person')|first -%}
          {%- set n = device_attr(i,'name_by_user') -%}
          {%- if n|lower == 'none' -%}{%- set n = device_attr(i,'name')-%}{%- endif -%}
          {"name":"{{- device_attr(i,'name')  -}}","did":"{{- i -}}","friendly_name":"{{- n -}}","manufacturer":"{{- device_attr(i,'manufacturer') -}}","model":"{{- device_attr(i,'model') -}}","sw_version":"{{- device_attr(i,'sw_version') -}}","class":{{- c|default(none) -}},"person":"{{- p|default(none) -}}"}
        {%- endfor -%}]
      {%- else -%}none{%- endif -%}
  action:
    - alias: 'update binary_sensor.motion_device_tracker ids,total,devices'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_tracker
        dids: >-
          {{ dids }}
        total: >-
          {{ total }}
        devices: >-
          {{ devices }}
        state: >-
          {% if total|int(0) > 0 %}on{% else %}off{% endif %}

## controls

- id: motion_device_tracker_input_select
  alias: motion_device_tracker_input_select
  initial_state: 'on'
  mode: single
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: sensor.motion_domain_device_tracker_count
    - platform: time_pattern
      minutes: /5
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ states('sensor.motion_domain_device_tracker_count')|int(0) > 0 }}
      - condition: template
        value_template: >-
          {{ states('input_select.motion_smartphone_name')|lower == 'all' }}
  action:
    - service: python_script.input_select_set_options
      data_template:
        entity_id: input_select.motion_smartphone_name
        default: all
        options: >-
          {%- set s = states('sensor.motion_device_trackers') -%}
          {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
            {{- s -}},all
          {%- else -%}all{%- endif -%}

## group

- id: motion_device_tracker_group
  alias: motion_device_tracker_group
  initial_state: 'on'
  mode: single
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: sensor.motion_domain_device_tracker_count
    - platform: time_pattern
      minutes: /5
  variables:
    all: >-
      {%- set n = utcnow().timestamp()|int(0) -%}
      {%- for state in states.device_tracker -%}
        {%- if loop.first -%}["zone.home"{%- endif -%}
        {%- set outer = loop -%}
        {%- set d = state.entity_id|replace('device_tracker.','') -%}
        {%- set e = 'sensor.' + d -%}
        {%- for s in states.sensor if d in s.entity_id and e+'_activity' in s.entity_id
            and (n - as_timestamp(s.last_updated)|int(0)) < 86400
            and (n - as_timestamp(state.last_updated)|int(0)) < 86400 -%}
          {{- ',' -}}
          "{{- 'device_tracker.' + s.entity_id|replace('sensor.','')|replace('_activity','')|string -}}"
        {%- endfor -%}
        {%- if loop.last -%}]{%- endif -%}
      {%- endfor -%}
    entities: >-
      {% if all|lower != 'none' and not all is string and all is iterable and all|count > 0 %}
        {{ all|select('defined')|list }}
      {% else %}none{% endif %} 
  condition:
    - condition: template
      value_template: >-
        {{ entities|lower != 'none' and not entities is string and entities is iterable and entities|count > 0 }}
  action:
    - alias: 'set group.motion_map_entity_list'
      service: group.set
      data_template:
        object_id: motion_map_entity_list
        entities: >-
          {{ entities }}
