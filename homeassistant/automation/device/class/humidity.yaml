###
# homeassistant/automation/motion/device/humidity.yaml
###

- id: motion_device_humidity_automation_enable
  alias: motion_device_humidity_automation_enable
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.motion_device_humidity
    attribute: 'entity_id'
  condition:
    - condition: template
      value_template: >-
        {% set s = state_attr('group.motion_device_humidity','entity_id') %}
        {{ s|lower != 'none' and not s is string and s is iterable and s|count > 0 }}
  variables:
    automations: >-
      {% set automations = ['motion_device_humidity_missing_dismiss','motion_device_humidity_found','motion_device_humidity_activity','motion_device_humidity_activity_notify','motion_device_humidity_activity_off','motion_device_humidity_activity_on','motion_device_humidity_alarm_activity','motion_device_humidity_alarm_bad_on','motion_device_humidity_alarm_good_on','motion_device_humidity_alarm_high_off','motion_device_humidity_alarm_high_on','motion_device_humidity_alarm_high_spike_off','motion_device_humidity_alarm_high_spike_on','motion_device_humidity_alarm_low_off','motion_device_humidity_alarm_low_on','motion_device_humidity_alarm_low_spike_off','motion_device_humidity_alarm_low_spike_on','motion_device_humidity_alarm_off','motion_device_humidity_alarm_on','motion_device_humidity_bad','motion_device_humidity_bad_notify','motion_device_humidity_bad_off','motion_device_humidity_bad_on','motion_device_humidity_cleared_dismiss','motion_device_humidity_cleared_notify','motion_device_humidity_good','motion_device_humidity_good_notify','motion_device_humidity_good_off','motion_device_humidity_good_on','motion_device_humidity_high','motion_device_humidity_high_dismiss','motion_device_humidity_high_notify','motion_device_humidity_high_off','motion_device_humidity_high_on','motion_device_humidity_high_spike_on','motion_device_humidity_high_spike_off','motion_device_humidity_high_spike','motion_device_humidity_high_spike_dismiss','motion_device_humidity_high_spike_notify','motion_device_humidity_low','motion_device_humidity_low_dismiss','motion_device_humidity_low_notify','motion_device_humidity_low_off','motion_device_humidity_low_on','motion_device_humidity_low_spike','motion_device_humidity_low_spike_on','motion_device_humidity_low_spike_off','motion_device_humidity_low_spike_dismiss','motion_device_humidity_low_spike_notify','motion_device_humidity_mute','motion_device_humidity_required_off','motion_device_humidity_required_on','motion_device_humidity_restart','motion_device_humidity_self_test','motion_device_humidity_status','motion_device_humidity_toggle','motion_device_humidity_turn_off','motion_device_humidity_turn_on','motion_device_humidity_unavailable','motion_device_humidity_unmute','motion_device_humidity_update'] %}
      {{ automations }}
  action:
    - alias: 'enable automations for device_humidity'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = automations[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = automations[repeat.index-1] %}
                {{ 'automation.' + s|string }}
          - condition: template
            value_template: >-
              {{ states(automation)|lower == 'off' }}
          - service: automation.turn_on
            data_template:
              entity_id: >-
                {{ automation }}
          - condition: template
            value_template: >
              {{ states('input_select.motion_log_level') in ['debug'] }}
          - service: persistent_notification.create
            data_template:
              title: >-
                DEBUG: humidity automation
              notification_id: >
                {{- 'debug-automation-humidity' -}}
              message: >-
                Enable automation: {{ automation }}
    - alias: 'indicate complete'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        automations: >-
          {{ 'on' }}
    - service: persistent_notification.create
      data_template:
        title: >-
          DEBUG: humidity enabled
        notification_id: >
          {{- 'debug-automation-humidity' -}}
        message: >-
          All humidity automations enabled: {{ automations }}

- id: motion_device_humidity_automation_disable
  alias: motion_device_humidity_automation_disable
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.motion_device_humidity
    attribute: 'entity_id'
  condition:
    - condition: template
      value_template: >-
        {% set s = state_attr('group.motion_device_humidity','entity_id') %}
        {{ s|lower == 'none' or s is string or not s is iterable or not s|count > 0 }}
  variables:
    automations: >-
      {% set automations = ['motion_device_humidity_missing_dismiss','motion_device_humidity_found','motion_device_humidity_activity','motion_device_humidity_activity_notify','motion_device_humidity_activity_off','motion_device_humidity_activity_on','motion_device_humidity_alarm_activity','motion_device_humidity_alarm_bad_on','motion_device_humidity_alarm_good_on','motion_device_humidity_alarm_high_off','motion_device_humidity_alarm_high_on','motion_device_humidity_alarm_high_spike_off','motion_device_humidity_alarm_high_spike_on','motion_device_humidity_alarm_low_off','motion_device_humidity_alarm_low_on','motion_device_humidity_alarm_low_spike_off','motion_device_humidity_alarm_low_spike_on','motion_device_humidity_alarm_off','motion_device_humidity_alarm_on','motion_device_humidity_bad','motion_device_humidity_bad_notify','motion_device_humidity_bad_off','motion_device_humidity_bad_on','motion_device_humidity_cleared_dismiss','motion_device_humidity_cleared_notify','motion_device_humidity_good','motion_device_humidity_good_notify','motion_device_humidity_good_off','motion_device_humidity_good_on','motion_device_humidity_high','motion_device_humidity_high_dismiss','motion_device_humidity_high_notify','motion_device_humidity_high_off','motion_device_humidity_high_on','motion_device_humidity_high_spike_on','motion_device_humidity_high_spike_off','motion_device_humidity_high_spike','motion_device_humidity_high_spike_dismiss','motion_device_humidity_high_spike_notify','motion_device_humidity_low','motion_device_humidity_low_dismiss','motion_device_humidity_low_notify','motion_device_humidity_low_off','motion_device_humidity_low_on','motion_device_humidity_low_spike','motion_device_humidity_low_spike_on','motion_device_humidity_low_spike_off','motion_device_humidity_low_spike_dismiss','motion_device_humidity_low_spike_notify','motion_device_humidity_mute','motion_device_humidity_required_off','motion_device_humidity_required_on','motion_device_humidity_restart','motion_device_humidity_self_test','motion_device_humidity_status','motion_device_humidity_toggle','motion_device_humidity_turn_off','motion_device_humidity_turn_on','motion_device_humidity_unavailable','motion_device_humidity_unmute','motion_device_humidity_update'] %}
      {{ automations }}
  action:
    - alias: 'disable automations for device_humidity'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = automations[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = automations[repeat.index-1] %}
                {{ 'automation.' + s|string }}
          - alias: 'test if automation is on'
            condition: template
            value_template: >-
              {{ states(automation)|lower == 'on' }}
          - service: automation.turn_off
            data_template:
              entity_id: >-
                {{ automation }}
          - condition: template
            value_template: >
              {{ states('input_select.motion_log_level') in ['debug'] }}
          - service: persistent_notification.create
            data_template:
              title: >-
                {% set s = automations[repeat.index-1] %}
                DEBUG: humidity automation
              notification_id: >
                {{- 'debug-automation-humidity' -}}
              message: >-
                Disable automation: {{ automation }}
    - alias: 'indicate complete'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        automations: >-
          {{ 'off' }}
    - service: persistent_notification.create
      data_template:
        title: >-
          DEBUG: humidity disabled
        notification_id: >
          {{- 'debug-automation-humidity' -}}
        message: >-
          All humidity automations disabled: {{ automations }}

- id: motion_device_humidity_rescan
  alias: motion_device_humidity_rescan
  mode: single
  max_exceeded: silent
  initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start
    - platform: time_pattern
      minutes: '/5'
  variables:
    class: >-
      {{- 'humidity' -}}
    all: >-
      [{%- for state in (states.sensor|list + states.binary_sensor|list)
       if 'device_class' in state.attributes and device_id(state.entity_id)|lower != 'none'
        and state.attributes.device_class==class and not '.motion_' in state.entity_id -%}
        {%- if not loop.first -%},{% endif -%}
        {%- set s = device_id(state.entity_id) -%}
        {"id":"{{- device_attr(s,'name') -}}","did":"{{- s  -}}"}
      {%- endfor -%}]
    local: >-
      {% set device_trackers = states.device_tracker|map(attribute='entity_id')|map('device_id')|list %}
      [{%- for state in (states.sensor|list + states.binary_sensor|list)
       if 'device_class' in state.attributes and device_id(state.entity_id)|lower != 'none'
        and state.attributes.device_class==class and not '.motion_' in state.entity_id
        and device_id(state.entity_id) not in device_trackers -%}
        {%- if not loop.first -%},{% endif -%}
        "{{- device_attr(device_id(state.entity_id),'name') -}}"
      {%- endfor -%}]
    mobile: >-
      {% set device_trackers = states.device_tracker|map(attribute='entity_id')|map('device_id')|list %}
      [{%- for state in (states.sensor|list + states.binary_sensor|list)
       if 'device_class' in state.attributes and device_id(state.entity_id)|lower != 'none'
        and state.attributes.device_class==class and not '.motion_' in state.entity_id
        and device_id(state.entity_id) in device_trackers -%}
        {%- if not loop.first -%},{% endif -%}
        "{{- device_attr(device_id(state.entity_id),'name') -}}"
      {%- endfor -%}]
    ids: >-
      {%- if all != [] and all is iterable and all|count > 0 -%}
        {{- all|map(attribute='id')|sort|unique|list -}}
      {% else %}none{% endif %}
    mobiles: >-
      {%- if mobile != [] and mobile is iterable and mobile|count > 0 -%}
        {{- mobile|sort|unique|list -}}
      {% else %}none{% endif %}
    total: >-
      {% set s = ids %}
      {% if s|lower != 'unknown' and s|lower != 'none' and not s is string %}
        {{ s|count }}
      {%- else -%}0{%- endif %}
    update: >-
      {%- set s = ids %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {%- set o = loop -%}
          {%- for state in (states.button|list + states.switch|list) if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == 'update' -%}
            {%- set v = state.state -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}"}
            {%- if not loop.last or not o.last -%},{%- endif -%}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    restart: >-
      {%- set s = ids %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {%- set o = loop -%}
          {%- for state in (states.button|list + states.switch|list) if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == 'restart' -%}
            {%- set v = state.state -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}"}
            {%- if not loop.last or not o.last -%},{%- endif -%}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    controls: >-
      {%- set s = ids -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {%- set o = loop -%}
          {%- for state in (states.button|list + states.switch|list) if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == 'null' -%}
            {%- set ctl = state_attr(state.entity_id,'friendly_name') -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}","name":"{{- ctl -}}"}
            {%- if not loop.last or not o.last -%},{%- endif -%}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    test: >-
      {%- set s = ids -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {%- set o = loop -%}
          {%- for state in states.sensor if device_attr(state.entity_id, 'name') == i and state.attributes.self_test|default('none')|string != 'none' -%}
            {%- if not loop.first or not o.first -%},{%- endif -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}","state":"{{- state.state -}}","updated":{{- state.last_updated|as_timestamp(None) -}}}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}null{%- endif %}
    areas: >-
      {%- set s = ids -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {%- set o = loop -%}
          {%- for state in (states.sensor|list + states.binary_sensor|list) if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == class -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {%- set v = state.state -%}
            {"id":"{{- i -}}","area":"{{- area_id(state.entity_id) -}}","state":"{{- state.state -}}"}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    status: >-
      {%- set s = ids -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s is iterable -%}
        [{%- for i in s -%}
          {%- set o = loop -%}
          {%- for state in (states.sensor|list + states.binary_sensor|list)
            if device_attr(state.entity_id, 'name') == i
              and (state.attributes.device_class|default('null')|string == class)  -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {"id":"{{- i -}}","name":"{{- state_attr(state.entity_id,'friendly_name') -}}","entity_id":"{{- state.entity_id -}}","state":"{{- state.state -}}","updated":{{- state.last_updated|as_timestamp(None) -}}}
          {%- else -%}{% if o.first %}None{% endif %}{%- endfor -%}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    devices: >-
      {%- if ids|lower != 'unknown' and ids|lower != 'none' and not s is string and ids is iterable
             and status|lower != 'none' and not status is string and status is iterable
             and areas|lower != 'none' and not areas is string and areas is iterable -%}
        [{% for i in ids -%}
          {%- set j = status|selectattr('id','==',i)|map(attribute='entity_id')|first -%}
          {%- set k = areas|selectattr('id','==',i)|map(attribute='area')|first -%}
          {%- if not loop.first -%},{%- endif -%}
          {%- set n = device_attr(device_id(j),'name_by_user') -%}
          {%- if n|lower == 'none' -%}{%- set n = device_attr(device_id(j),'name') -%}{%- endif -%}
          {"id":"{{- i -}}", "did":"{{- device_id(j) -}}", "friendly_name":"{{- n -}}", "manufacturer":"{{- device_attr(device_id(j),'manufacturer') -}}", "model":"{{- device_attr(device_id(j),'model') -}}", "sw_version":"{{- device_attr(device_id(j),'sw_version') -}}", "area":"{{- k -}}"}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
  action:
    - alias: 'update binary_sensor.motion_device_humidity ids, etc..'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        ids: >-
          {{ ids }}
        mobiles: >-
          {{ mobiles }}
        total: >-
          {{ total }}
        update: >-
          {{ update }}
        restart: >-
          {{ restart }}
        controls: >-
          {%- if controls|lower != 'none' and not controls is string and controls is iterable and controls|count > 0  -%}
            {{ controls|reject('none')|list }}
          {%- else -%}
            {{ controls }}
          {%- endif -%}
        test: >-
          {{ test }}
        areas: >-
          {{ areas }}
        devices: >-
          {{ devices }}
        state: >-
          {{ states('binary_sensor.motion_device_' + class) }}
    - variables:
        entities: >-
          {%- if status|lower != 'null' and not status is string and status is iterable and status|count > 0 -%}
            {{- status|map(attribute='entity_id')|list -}}
          {%- else -%}none{%- endif %}
    - condition: template
      value_template: >
        {{ entities|lower != 'none' }}
    - alias: 'set group.motion_device_humidity sensors'
      service: group.set
      data_template:
        object_id: motion_device_humidity
        entities: >-
          {{ entities }}
    - variables:
        statistics: >-
          {%- set s = ids -%}
          {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
            [{%- for i in s -%}
              {%- set o = loop -%}
              {%- for state in (states.sensor|list + states.binary_sensor|list)
                if device_attr(state.entity_id, 'name') == i
                  and state.attributes.device_class|default('null')|lower == 'null'
                  and state.attributes.state_class|default('null')|string == 'measurement' -%}
                {%- if not o.first or not loop.first -%},{%- endif -%}
                {"entity_id":"{{- state.entity_id -}}"}
              {%- else -%}{% if o.first %}None{% endif %}{%- endfor -%}
            {%- endfor -%}]
          {%- else -%}[]{%- endif %}
    - alias: 'set group.motion_device_humidity statistics'
      service: group.set
      data_template:
        object_id: motion_device_humidity_statistics
        entities: >-
          {{ statistics|reject('none')|map(attribute='entity_id')|list }}
    - alias: 'trigger temperatus status update'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_status

## update status

- id: motion_device_humidity_status
  alias: motion_device_humidity_status
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
    - platform: time_pattern
      minutes: '/1'
  variables:
    class: >-
      {% set class = 'humidity' %}
      {{ class }}
    ids: >-
      {% set ids = state_attr('binary_sensor.motion_device_humidity','ids') %}
      {{ ids }}
    status: >-
      {%- set s = ids -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s is iterable -%}
        [{%- for i in s -%}
          {%- set o = loop -%}
          {%- for state in (states.sensor|list + states.binary_sensor|list)
            if device_attr(state.entity_id, 'name') == i
              and (state.attributes.device_class|default('null')|string == class)  -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {"id":"{{- i -}}","name":"{{- state_attr(state.entity_id,'friendly_name') -}}","entity_id":"{{- state.entity_id -}}","state":"{{- state.state -}}","updated":{{- state.last_updated|as_timestamp(None) -}}}

          {%- else -%}{% if o.first %}None{% endif %}{%- endfor -%}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    statistics: >-
      {%- set s = ids -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {%- set o = loop -%}
          {%- for state in (states.sensor|list + states.binary_sensor|list)
            if device_attr(state.entity_id, 'name') == i
              and state.attributes.device_class|default('null')|lower == 'null'
              and state.attributes.state_class|default('null')|string == 'measurement' -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {"id":"{{- i -}}","name":"{{- state_attr(state.entity_id,'friendly_name') -}}","state":"{{- state.state }} {{ state.attributes.unit_of_measurement-}}","entity_id":"{{- state.entity_id -}}","updated":{{- state.last_updated|as_timestamp(None) -}}}
          {%- else -%}{% if o.first %}None{% endif %}{%- endfor -%}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    high: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','high')|float('none') != 'none' -%}
        {% set s = status -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          {% set n = state_attr('binary_sensor.motion_device_humidity_exist','high')|float(0) -%}
          [{% for i in s if 'entity_id' in i and states(i.entity_id)|float(n) > n -%}
            {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
          {%- endfor -%}]
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    low: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','low')|float('none') != 'none' -%}
        {%- set s = status -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          {% set n = state_attr('binary_sensor.motion_device_humidity_exist','low')|float(0) -%}
          [{% for i in s if 'entity_id' in i and states(i.entity_id)|float(n) < n -%}
            {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
          {%- endfor -%}]
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    good: >-
      {% set good = state_attr('binary_sensor.motion_device_humidity_exist','good') -%}
      {%- if good|lower != 'none' -%}
        {% set s = status -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s if 'entity_id' in i and not i.entity_id is none and is_state(i.entity_id,good) -%}
            {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
          {%- endfor -%}]
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    bad: >-
      {% set bad = state_attr('binary_sensor.motion_device_humidity_exist','bad') -%}
      {%- if bad|lower != 'none' -%}
        {% set s = status -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s if 'entity_id' in i and not i.entity_id is none and is_state(i.entity_id,bad) -%}
            {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
          {%- endfor -%}]
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    activity: >-
      {% set activity = state_attr('binary_sensor.motion_device_humidity_exist','activity') -%}
      {%- if activity|lower != 'none' -%}
        {% set s = status -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s if 'entity_id' in i and not i.entity_id is none and is_state(i.entity_id,activity) -%}
            {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
          {%- endfor -%}]
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    unavailable: >-
      {%- set s = status -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
        [{% for i in s if 'entity_id' in i and not i.entity_id is none and is_state(i.entity_id,'unavailable') or is_state(i.entity_id,'unknown') -%}
          {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    found: >-
      {%- set s = status -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
        [{% for i in s if 'entity_id' in i and not i.entity_id is none and not is_state(i.entity_id,'unavailable') and not is_state(i.entity_id,'unknown') -%}
          {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    missing: >-
      {%- set s = status -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
        [{% for i in s if 'entity_id' in i and not i.entity_id is none and is_state(i.entity_id,'none') -%}
          {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    high_spike: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','high_spike')|float('none') != 'none' -%}
        {% set s = status -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          {% set n = state_attr('binary_sensor.motion_device_humidity_exist','high_spike')|float(0) -%}
          [{% for i in s if 'entity_id' in i and states(i.entity_id)|float(n) > n -%}
            {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
          {%- endfor -%}]
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    low_spike: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','low_spike')|float('none') != 'none' -%}
        {% set s = status -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          {% set n = state_attr('binary_sensor.motion_device_humidity_exist','low_spike')|float(0) -%}
          [{% for i in s if 'entity_id' in i and states(i.entity_id)|float(n) < n -%}
            {%- if not loop.first -%},{%- endif -%}
            {"id":"{{- i.id -}}","entity_id":"{{- i.entity_id -}}","state":"{{- i.state -}}","updated":{{- states[i.entity_id].last_updated|as_timestamp(None) -}}}
          {%- endfor -%}]
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    values: >-
      {% set g = state_attr('binary_sensor.motion_device_humidity_exist','good') -%}
      {% set b = state_attr('binary_sensor.motion_device_humidity_exist','bad') -%}
      {%- if g|lower != 'none' and b|lower != 'none' -%}
        [{% for i in status if 'entity_id' in i and not i.entity_id is none -%}
          {%- if not loop.first -%},{%- endif -%}
          {% if is_state(i.entity_id,g) %}1{% elif is_state(i.entity_id,b) %}0{% else %}none{% endif -%}
        {%- endfor -%}]
      {%- else -%}
        [{% for i in status if 'entity_id' in i and not i.entity_id is none -%}
          {%- if not loop.first -%},{%- endif -%}
          {{- states(i.entity_id)|float(none) -}}
        {%- endfor -%}]
      {%- endif %}
    value: >-
      {% if bad|lower != 'none' and not bad is string and bad is iterable -%}
        {%- if bad|count > 0 -%}
          {%- set result = 'on' -%}
        {%- else -%}
          {%- set result = 'off' -%}
        {%- endif -%}
      {%- endif -%}
      {%- if low|lower != 'none' and not low is string and low is iterable -%}
        {%- if low|count > 0 -%}
          {%- set result = 'on' -%}
        {%- else -%}
          {%- set result = 'off' -%}
        {%- endif -%}
      {%- endif -%}
      {%- if high|lower != 'none' and not high is string and high is iterable -%}
        {%- if high|count > 0 -%}
          {%- set result = 'on' -%}
        {%- else -%}
          {%- set result = 'off' -%}
        {%- endif -%}
      {%- endif -%}
      {%- if activity|lower != 'none' and not activity is string and activity is iterable -%}
        {%- if activity|count > 0 -%}
          {%- set result = 'on' -%}
        {%- else -%}
          {%- set result = 'off' -%}
        {%- endif -%}
      {%- endif -%}
      {%- if result is defined -%}
        {{- result -}}
      {%- else -%}unknown{%- endif %}
  action:
    - alias: 'update binary_sensor.motion_device_humidity state'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        status: >-
          {{ status }}
        statistics: >-
          {{ statistics|reject('none')|list }}
        high: >-
          {{ high }}
        low: >-
          {{ low }}
        good: >-
          {{ good }}
        bad: >-
          {{ bad }}
        high_spike: >-
          {{ high_spike }}
        low_spike: >-
          {{ low_spike }}
        found: >-
          {{ found }}
        missing: >-
          {{ missing }}
        activity: >-
          {{ activity }}
        unavailable: >-
          {{ unavailable }}
        values: >-
          {{ values }}
        state: >-
          {{ value }}

## change humidity class attributes (alarm,required,..)

# required

- id: motion_device_humidity_required_off
  alias: motion_device_humidity_required_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity required not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','sensors') or 'humidity' in state_attr('binary_sensor.motion_device_class','binary_sensors') }}
  variables:
    sensors: >-
      {% set s = state_attr('binary_sensor.motion_device_class','sensors') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set sensors = s -%}
        {%- else -%}
          {% set sensors = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if sensors is defined -%}
        {{ sensors }}
      {%- else -%}none{%- endif %}
    binary_sensors: >-
      {% set s = state_attr('binary_sensor.motion_device_class','binary_sensors') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set binary_sensors = s -%}
        {%- else -%}
          {% set binary_sensors = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if binary_sensors is defined -%}
        {{ binary_sensors }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if required list of device classes is valid'
      condition: template
      value_template: >-
        {{ sensors|lower != 'none' and binary_sensors|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class required attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        sensors: >-
          {{ sensors }}
        binary_sensors: >-
          {{ binary_sensors }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_required_on
  alias: motion_device_humidity_required_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity required not on'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','sensor_list') or 'humidity' in state_attr('binary_sensor.motion_device_class','binary_sensor_list')
            and (not 'humidity' in state_attr('binary_sensor.motion_device_class','sensors') or not 'humidity' in state_attr('binary_sensor.motion_device_class','binary_sensors')) }}
  variables:
    sensors: >-
      {% set s = state_attr('binary_sensor.motion_device_class','sensors') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set sensors = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set sensors = ['humidity'] -%}
      {%- endif %}
      {%- if sensors is defined -%}
        {{ sensors }}
      {%- else -%}none{%- endif %}
    binary_sensors: >-
      {% set s = state_attr('binary_sensor.motion_device_class','binary_sensors') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set binary_sensors = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set binary_sensors = ['humidity'] -%}
      {%- endif %}
      {%- if binary_sensors is defined -%}
        {{ binary_sensors }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if required list of device classes is valid'
      condition: template
      value_template: >-
        {{ sensors|lower != 'none' and binary_sensors|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class required attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        sensors: >-
          {{ sensors }}
        binary_sensors: >-
          {{ binary_sensors }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

## bad

- id: motion_device_humidity_bad
  alias: motion_device_humidity_bad
  mode: restart
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity'
      attribute: 'bad'
  variables:
    details: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','bad')|lower != 'none' %}
        {% set s = state_attr('binary_sensor.motion_device_humidity','bad') %}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- state_attr(i.entity_id,'friendly_name') }} is {{ states(i.entity_id) -}}"
          {%- endfor -%}]
        {%- else -%}none{%- endif %}
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','bad') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|list|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_bad','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_bad
        last: >-
          {{ last }}
        details: >-
          {{ details }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'bad' }}

- id: motion_device_humidity_bad_off
  alias: motion_device_humidity_bad_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity bad not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','bad') }}
  variables:
    bad: >-
      {% set s = state_attr('binary_sensor.motion_device_class','bad') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set bad = s -%}
        {%- else -%}
          {% set bad = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if bad is defined -%}
        {{ bad }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if bad list of device classes is valid'
      condition: template
      value_template: >-
        {{ bad|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class bad attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        bad: >-
          {{ bad }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_bad_on
  alias: motion_device_humidity_bad_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity bad not on'
        condition: template
        value_template: >-
          {{ not 'humidity' in state_attr('binary_sensor.motion_device_class','bad') }}
  variables:
    bad: >-
      {% set s = state_attr('binary_sensor.motion_device_class','bad') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set bad = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set bad = ['humidity'] -%}
      {%- endif %}
      {%- if bad is defined -%}
        {{ bad }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if bad list of device classes is valid'
      condition: template
      value_template: >-
        {{ bad|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class bad attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        bad: >-
          {{ bad }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_alarm_bad_on
  alias: motion_device_humidity_alarm_bad_on
  mode: single
  initial_state: 'off'
  trigger:
    - platform: template
      value_template: >-
        {{ not is_state_attr('binary_sensor.motion_device_humidity_exist','bad','none')
           and is_state_attr('binary_sensor.motion_device_humidity_exist','bad',states('binary_sensor.motion_device_humidity')) }}
  variables:
    devices: >-
      {%- set devices = none -%}
      {% set s = state_attr('binary_sensor.motion_device_humidity','devices') %}
      {% if s|lower != 'none' and s|lower != 'null' and not s is string and s is iterable and s|count > 0 %}
        {% set devices = s %}
      {%- endif %}
      {{ devices }}
    last: >-
      {% set last = none %}
      {% set s = state_attr('binary_sensor.motion_device_humidity','status')|selectattr('state','==',state_attr('binary_sensor.motion_device_humidity_exist','bad'))|sort(attribute='updated',reverse=true)|list %}
      {% if s|lower != 'none' and s|lower != 'null' and not s is string and s is iterable and s|count > 0 %}
        {% set last = s %}
      {%- endif %}
      {{ last  }}
    which: >-
      {% set which = none %}
      {% if last|lower != 'none' %}
        {% set which = last|map(attribute='id')|first %}
      {%- endif %}
      {{ which }}
    did: >-
      {% set did = none %}
      {% if devices|lower != 'none'  and which|lower != 'none' %}
        {% set did = devices|selectattr('id','==',which)|map(attribute='did')|first %}
      {%- endif %}
      {{ did }}
    where: >-
      {% set where = none %}
      {% if devices|lower != 'none'  and which|lower != 'none' %}
        {% set where = devices|selectattr('id','==',which)|map(attribute='area')|first %}
      {%- endif %}
      {{ where }}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ which|lower != 'none' and which|lower != 'null' and which|length > 0 }}
  action:
    - variables:
        markdown: >-
          A <a href="/lovelace-primary/humidity">humidity</a> alarm was triggered ({{- state_attr('binary_sensor.motion_device_humidity_exist','bad')|string -}}); sensor: {{ which -}}; where: {{ where -}}; at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') -}}.
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_bad
        markdown: >-
          {{ markdown }}
    - alias: 'update binary_sensor.motion_device_humidity which, where, did'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        which: >-
          {{ which }}
        where: >-
          {{ where }}
        did: >-
          {{ did }}
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger motion notification'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_bad_notify

- id: motion_device_humidity_bad_notify
  alias: motion_device_humidity_bad_notify
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    ids: >-
      {% set ids = state_attr('binary_sensor.motion_device_humidity','ids') %}
      {{ ids }}
    which: >-
      {% set which = state_attr('binary_sensor.motion_device_humidity','which') %}
      {{ which }}
    where: >-
      {% set where = state_attr('binary_sensor.motion_device_humidity','where') %}
      {{ where }}
    did: >-
      {% set did = state_attr('binary_sensor.motion_device_humidity','did') %}
      {{ did }}
    url: >-
      {% set url = '/lovelace-primary/' + class %}
      {{ url }}
    action: >-
      {% set action = class + '-alarm' %}
      {{ action }}
    title: >-
      {% set title = states('sensor.motion_app') + ': humidity bad' %}
      {{ title }}
    notification_id: >-
      {{ 'device-humidity-status-' + which|string }}
    icon: >-
      {% set icon = 'notification-humidity-bad' %}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      {{ state_attr('binary_sensor.motion_device_humidity_bad','markdown') }}
      <p>We have notified <b>{{- state_attr('sensor.motion_role_primary','friendly_name')|replace("'","") -}}</b> about your humidity alarm.
      To inspect and change the alarm click the <b>{{- action -}}</b> button below.
      {{- '<p>' -}}
      <a href="{{- url -}}"><img src="https://img.shields.io/badge/{{- action -}}-yellow.svg"></a>
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify humidity sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

## low

- id: motion_device_humidity_low
  alias: motion_device_humidity_low
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity'
      attribute: 'low'
  variables:
    details: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','low')|lower != 'none' %}
        {% set s = state_attr('binary_sensor.motion_device_humidity','low') %}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- state_attr(i.entity_id,'friendly_name') }} is {{ states(i.entity_id)|int('unknown') -}}{{ state_attr(i.entity_id,'unit_of_measurement') -}}"
          {%- endfor -%}]
        {%- else -%}none{%- endif %}
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','low') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|list|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_low','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_low
        last: >-
          {{ last }}
        details: >-
          {{ details }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - alias: 'set humidity condition: low'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'low' }}

- id: motion_device_humidity_low_off
  alias: motion_device_humidity_low_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity low not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','low') }}
  variables:
    low: >-
      {% set s = state_attr('binary_sensor.motion_device_class','low') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set low = s -%}
        {%- else -%}
          {% set low = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if low is defined -%}
        {{ low }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if low list of device classes is valid'
      condition: template
      value_template: >-
        {{ low|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class low attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        low: >-
          {{ low }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_low_on
  alias: motion_device_humidity_low_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity low not on'
        condition: template
        value_template: >-
          {{ not 'humidity' in state_attr('binary_sensor.motion_device_class','low') }}
  variables:
    low: >-
      {% set s = state_attr('binary_sensor.motion_device_class','low') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set low = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set low = ['humidity'] -%}
      {%- endif %}
      {%- if low is defined -%}
        {{ low }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if low list of device classes is valid'
      condition: template
      value_template: >-
        {{ low|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class low attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        low: >-
          {{ low }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_alarm_low_on
  alias: motion_device_humidity_alarm_low_on
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_low'
      to: 'on'
  variables:
    low: >-
      {{ state_attr('binary_sensor.motion_device_humidity','low') }}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{- low|lower != 'none' and low|lower != 'unknown' and not low is string and low is iterable and low|count > 0 -}}
  action:
    - variables:
        markdown: >-
          A <a href="/lovelace-primary/humidity">humidity</a> alarm was triggered (below {{ state_attr('binary_sensor.motion_device_humidity_exist','low') -}}) at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}:<br>
          {%- for i in low if 'id' in i and i.id|lower != 'none' -%}
            {%- if loop.first -%}{{- '<ul>' -}}{%- endif -%}
            {%- set d = state_attr('binary_sensor.motion_device_class','devices') -%}
            {%- if d|lower != 'none' and not d is string and d is iterable and d|count > 0 -%}
              {%- set d = d|selectattr('id','==',i.id)|list -%}
              {%- if d|lower != 'none' and not d is string and d is iterable and d|count > 0 -%}
                {%- set d = d|first -%}
                <li><a href="/config/devices/device/{{- d.did -}}">{{- d.friendly_name|replace("'","") -}}</a> is {{ states(low[loop.index-1].entity_id) -}}{{- state_attr(low[loop.index-1].entity_id,'unit_of_measurement') }} in <a href="/config/areas/area/{{- area_id(low[loop.index-1].entity_id) -}}">{{- area_id(low[loop.index-1].entity_id) -}}</a></li>
              {%- else -%}
                <li>{{- i.id }} humidity is {{ states(i.entity_id) -}}{{- state_attr(i.entity_id,'unit_of_measurement') }}</li>
              {%- endif -%}
            {%- else -%}
              {{- '<li>' -}}
              {{- i.id }} humidity is {{ states(i.entity_id) -}}{{- state_attr(i.entity_id,'unit_of_measurement') }}
              {{- '</li>' -}}
            {%- endif -%}
            {%- if loop.last -%}{{- '</ul>' -}}{%- endif -%}
          {%- endfor -%}
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_low
        markdown: >-
          {{ markdown }}
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger motion notification'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_low_notify

- id: motion_device_humidity_alarm_low_off
  alias: motion_device_humidity_alarm_low_off
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_low'
      to: 'off'
  action:
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger humidity low dismiss'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_low_dismiss

- id: motion_device_humidity_low_notify
  alias: motion_device_humidity_low_notify
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    low: >-
      {% set low = state_attr('binary_sensor.motion_device_humidity','low') %}
      {{ low }}
    action: >-
      {% set action = class + '-alarm' %}
      {{ action }}
    url: >-
      {% set url = '/lovelace-primary/' + class %}
      {{ url }}
    title: >-
      {% set title = states('sensor.motion_app') + ': humidity low' %}
      {{ title }}
    notification_id: >-
      {{ 'device-humidity-low' }}
    icon: >-
      {% set icon = 'notification-humidity-low' %}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      {{ state_attr('binary_sensor.motion_device_humidity_low','markdown') }}
      <p>We have notified <b>{{- state_attr('sensor.motion_role_primary','friendly_name')|replace("'","") -}}</b> about your humidity alarm.
      To inspect and change the alarm click the <b>{{- action -}}</b> button below.
      {{- '<p>' -}}
      <a href="{{- url -}}"><img src="https://img.shields.io/badge/{{- action -}}-yellow.svg"></a>
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify humidity sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_humidity_dismiss
  alias: motion_device_humidity_dismiss
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    alarms: >-
      {% set alarms = state_attr('binary_sensor.motion_device_class','alarms') %}
      {{ alarms }}
  condition:
    - condition: template
      value_template: >
        {{ alarms|lower != 'none' and not alarms is string and alarms is iterable and alarms|count > 0 }}
  action:
    - repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = alarms[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - variables:
              alarm: >-
                {% set alarm = alarms[repeat.index - 1]|default('unknown') -%}
                {{ alarm }}
              automation: >-
                {{ 'automation.motion_device_humidity_' + alarm + '_dismiss' }}
          - service: automation.trigger
            data_template:
              entity_id: >-
                {{ automation }}

- id: motion_device_humidity_low_dismiss
  alias: motion_device_humidity_low_dismiss
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    notification_id: >-
      {{ 'device-humidity-low' }}
  action:
    - alias: 'dismiss humidity low notification'
      service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{ notification_id }}

## high

- id: motion_device_humidity_high
  alias: motion_device_humidity_high
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity'
      attribute: 'high'
  variables:
    details: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','high')|lower != 'none' %}
        {% set s = state_attr('binary_sensor.motion_device_humidity','high') %}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- state_attr(i.entity_id,'friendly_name') }} is {{ states(i.entity_id)|int('unknown') -}}{{ state_attr(i.entity_id,'unit_of_measurement') -}}"
          {%- endfor -%}]
        {%- else -%}none{%- endif %}
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','high') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|list|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_high','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_high
        last: >-
          {{ last }}
        details: >-
          {{ details }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - alias: 'set humidity condition: high'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'high' }}

- id: motion_device_humidity_high_off
  alias: motion_device_humidity_high_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity high not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','high') }}
  variables:
    high: >-
      {% set s = state_attr('binary_sensor.motion_device_class','high') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set high = s -%}
        {%- else -%}
          {% set high = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if high is defined -%}
        {{ high }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if high list of device classes is valid'
      condition: template
      value_template: >-
        {{ high|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class high attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        high: >-
          {{ high }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_high_on
  alias: motion_device_humidity_high_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity high not on'
        condition: template
        value_template: >-
          {{ not 'humidity' in state_attr('binary_sensor.motion_device_class','high') }}
  variables:
    high: >-
      {% set s = state_attr('binary_sensor.motion_device_class','high') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set high = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set high = ['humidity'] -%}
      {%- endif %}
      {%- if high is defined -%}
        {{ high }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if high list of device classes is valid'
      condition: template
      value_template: >-
        {{ high|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class high attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        high: >-
          {{ high }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_alarm_high_on
  alias: motion_device_humidity_alarm_high_on
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_high'
      to: 'on'
  variables:
    high: >-
      {{ state_attr('binary_sensor.motion_device_humidity','high') }}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{- high|lower != 'none' and high|lower != 'unknown' and not high is string and high is iterable and high|count > 0 -}}
  action:
    - variables:
        markdown: >-
          A <a href="/lovelace-primary/humidity">humidity</a> alarm was triggered (above {{ state_attr('binary_sensor.motion_device_humidity_exist','high') -}}) at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}:<br>
          {%- for i in high if 'id' in i and i.id|lower != 'none' -%}
            {%- if loop.first -%}{{- '<ul>' -}}{%- endif -%}
            {%- set d = state_attr('binary_sensor.motion_device_class','devices') -%}
            {%- if d|lower != 'none' and not d is string and d is iterable and d|count > 0 -%}
              {%- set d = d|selectattr('id','==',i.id)|list -%}
              {%- if d|lower != 'none' and not d is string and d is iterable and d|count > 0 -%}
                {%- set d = d|first -%}
                <li><a href="/config/devices/device/{{- d.did -}}">{{- d.friendly_name|replace("'","") -}}</a> is {{ states(high[loop.index-1].entity_id) -}}{{- state_attr(high[loop.index-1].entity_id,'unit_of_measurement') }} in <a href="/config/areas/area/{{- area_id(high[loop.index-1].entity_id) -}}">{{- area_id(high[loop.index-1].entity_id) -}}</a></li>
              {%- else -%}
                <li>{{- i.id }} humidity is {{ states(i.entity_id) -}}{{- state_attr(i.entity_id,'unit_of_measurement') }}</li>
              {%- endif -%}
            {%- else -%}
              {{- '<li>' -}}
              {{- i.id }} humidity is {{ states(i.entity_id) -}}{{- state_attr(i.entity_id,'unit_of_measurement') }}
              {{- '</li>' -}}
            {%- endif -%}
            {%- if loop.last -%}{{- '</ul>' -}}{%- endif -%}
          {%- endfor -%}
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_high
        markdown: >-
          {{ markdown }}
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger motion notification'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_high_notify

- id: motion_device_humidity_alarm_high_off
  alias: motion_device_humidity_alarm_high_off
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_high'
      to: 'off'
  action:
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger humidity high dismiss'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_high_dismiss

- id: motion_device_humidity_high_notify
  alias: motion_device_humidity_high_notify
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    high: >-
      {% set high = state_attr('binary_sensor.motion_device_humidity','high') %}
      {{ high }}
    action: >-
      {% set action = class + '-alarm' %}
      {{ action }}
    url: >-
      {% set url = '/lovelace-primary/' + class %}
      {{ url }}
    title: >-
      {% set title = states('sensor.motion_app') + ': ' + class + ' high' %}
      {{ title }}
    notification_id: >-
      {{ 'device-' + class + '-high' }}
    icon: >-
      {% set icon = 'notification-' + class + '-high' %}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      {{ state_attr('binary_sensor.motion_device_humidity_high','markdown') }}
      <p>We have notified <b>{{- state_attr('sensor.motion_role_primary','friendly_name')|replace("'","") -}}</b> about your humidity alarm.
      To inspect and change the alarm click the <b>{{- action -}}</b> button below.
      {{- '<p>' -}}
      <a href="{{- url -}}"><img src="https://img.shields.io/badge/{{- action -}}-yellow.svg"></a>
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify humidity sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_humidity_high_dismiss
  alias: motion_device_humidity_high_dismiss
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    notification_id: >-
      {{ 'device-' + class + '-high' }}
  action:
    - alias: 'dismiss humidity high notification'
      service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{ notification_id }}

## good

- id: motion_device_humidity_good
  alias: motion_device_humidity_good
  mode: restart
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity'
      attribute: 'good'
  variables:
    details: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','good')|lower != 'none' %}
        {% set s = state_attr('binary_sensor.motion_device_humidity','good') %}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- state_attr(i.entity_id,'friendly_name') }} is {{ states(i.entity_id) -}}"
          {%- endfor -%}]
        {%- else -%}none{%- endif %}
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','good') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|list|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_good','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_good
        last: >-
          {{ last }}
        details: >-
          {{ details }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'good' }}

- id: motion_device_humidity_good_off
  alias: motion_device_humidity_good_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity good not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','good') }}
  variables:
    good: >-
      {% set s = state_attr('binary_sensor.motion_device_class','good') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set good = s -%}
        {%- else -%}
          {% set good = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if good is defined -%}
        {{ good }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if good list of device classes is valid'
      condition: template
      value_template: >-
        {{ good|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class good attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        good: >-
          {{ good }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_good_on
  alias: motion_device_humidity_good_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity good not on'
        condition: template
        value_template: >-
          {{ not 'humidity' in state_attr('binary_sensor.motion_device_class','good') }}
  variables:
    good: >-
      {% set s = state_attr('binary_sensor.motion_device_class','good') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set good = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set good = ['humidity'] -%}
      {%- endif %}
      {%- if good is defined -%}
        {{ good }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if good list of device classes is valid'
      condition: template
      value_template: >-
        {{ good|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class good attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        good: >-
          {{ good }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_alarm_good_on
  alias: motion_device_humidity_alarm_good_on
  mode: single
  initial_state: 'off'
  trigger:
    - platform: template
      value_template: >-
        {{ not is_state_attr('binary_sensor.motion_device_humidity_exist','good','none')
           and is_state_attr('binary_sensor.motion_device_humidity_exist','good',states('binary_sensor.motion_device_humidity')) }}
  variables:
    devices: >-
      {% set devices = none %}
      {% set s = state_attr('binary_sensor.motion_device_humidity','devices') %}
      {% if s|lower != 'none' and s|lower != 'null' and not s is string and s is iterable and s|count > 0 %}
        {% set devices = s %}
      {%- endif %}
      {{ devices }}
    last: >-
      {% set last = none %}
      {% set s = state_attr('binary_sensor.motion_device_humidity','status')|selectattr('state','==',state_attr('binary_sensor.motion_device_humidity_exist','good'))|sort(attribute='updated',reverse=true)|list %}
      {% if s|lower != 'none' and s|lower != 'null' and not s is string and s is iterable and s|count > 0 %}
        {% set last = s %}
      {%- endif %}
      {{ last  }}
    which: >-
      {% set which = none %}
      {% if last|lower != 'none' %}
        {% set which = last|map(attribute='id')|first %}
      {%- endif %}
      {{ which }}
    did: >-
      {% set did = none %}
      {% if devices|lower != 'none'  and which|lower != 'none' %}
        {% set did = devices|selectattr('id','==',which)|map(attribute='did')|first %}
      {%- endif %}
      {{ did }}
    where: >-
      {% set where = none %}
      {% if devices|lower != 'none'  and which|lower != 'none' %}
        {% set where = devices|selectattr('id','==',which)|map(attribute='area')|first %}
      {%- endif %}
      {{ where }}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ which|lower != 'none' and which|lower != 'null' and which|length > 0 }}
  action:
    - variables:
        markdown: >-
          A <a href="/lovelace-primary/humidity">humidity</a> alarm was triggered ({{- state_attr('binary_sensor.motion_device_humidity_exist','good')|string -}}); sensor: {{ which -}}; where: {{ where -}}; at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') -}}.
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_good
        markdown: >-
          {{ markdown }}
    - alias: 'update binary_sensor.motion_device_humidity which, where, did'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        which: >-
          {{ which }}
        where: >-
          {{ where }}
        did: >-
          {{ did }}
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger motion notification'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_good_notify

- id: motion_device_humidity_good_notify
  alias: motion_device_humidity_good_notify
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    ids: >-
      {% set ids = state_attr('binary_sensor.motion_device_humidity','ids') %}
      {{ ids }}
    which: >-
      {% set which = state_attr('binary_sensor.motion_device_humidity','which') %}
      {{ which }}
    where: >-
      {% set where = state_attr('binary_sensor.motion_device_humidity','where') %}
      {{ where }}
    did: >-
      {% set did = state_attr('binary_sensor.motion_device_humidity','did') %}
      {{ did }}
    action: >-
      {% set action = class + '-alarm' %}
      {{ action }}
    url: >-
      {% set url = '/lovelace-primary/' + class %}
      {{ url }}
    title: >-
      {% set title = states('sensor.motion_app') + ': humidity good' %}
      {{ title }}
    notification_id: >-
      {{ 'device-humidity-status-' + which|string }}
    icon: >-
      {% set icon = 'notification-humidity-good' %}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      {{ state_attr('binary_sensor.motion_device_humidity_good','markdown') }}
      <p>We have notified <b>{{- state_attr('sensor.motion_role_primary','friendly_name')|replace("'","") -}}</b> about your humidity alarm.
      To inspect and change the alarm click the <b>{{- action -}}</b> button below.
      {{- '<p>' -}}
      <a href="{{- url -}}"><img src="https://img.shields.io/badge/{{- action -}}-yellow.svg"></a>
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify humidity sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

## activity

- id: motion_device_humidity_activity
  alias: motion_device_humidity_activity
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity'
      attribute: 'activity'
  variables:
    ids: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','activity') %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
        {{ s|map(attribute='id')|sort|unique|list }}
      {%- else -%}none{%- endif %}
    details: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','activity') %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' -%}
        {{ s }}
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','activity') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_activity','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
    actions: >-
      {%- set actions = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_humidity_actions','activity') -%}
      {%- if s|lower != 'none' and 'actions' in s -%}
        {%- set actions = s.actions -%}
      {%- endif -%}
      {{- actions -}}
    responses: >-
      {%- set responses = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_humidity_actions','activity') -%}
      {%- if s|lower != 'none' and 'responses' in s -%}
        {%- set responses = s.responses -%}
      {%- endif -%}
      {{- responses -}}
    approve: >-
      {%- if actions|lower != 'none' and 'approve' in actions -%}
      {{ actions.approve }}
      {%- else -%}none{%- endif -%}
    deny: >-
      {%- if actions|lower != 'none' and 'deny' in actions -%}
      {{ actions.deny }}
      {%- else -%}none{%- endif -%}
    wait: >-
      {%- if actions|lower != 'none' and 'wait' in actions -%}
      {{ actions.wait }}
      {%- else -%}none{%- endif -%}
    help: >-
      {%- if actions|lower != 'none' and 'help' in actions -%}
      {{ actions.help }}
      {%- else -%}none{%- endif -%}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_activity
        approve: >-
          {{ approve }}
        deny: >-
          {{ deny }}
        wait: >-
          {{ wait }}
        help: >-
          {{ help }}
        responses: >-
          {{ responses }}
        last: >-
          {{ last }}
        ids: >-
          {{ ids }}
        details: >-
          {{ details }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - alias: 'set humidity condition: activity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'activity' }}

- id: motion_device_humidity_activity_off
  alias: motion_device_humidity_activity_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity activity not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','activity') }}
  variables:
    activity: >-
      {% set s = state_attr('binary_sensor.motion_device_class','activity') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set activity = s -%}
        {%- else -%}
          {% set activity = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if activity is defined -%}
        {{ activity }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if activity list of device classes is valid'
      condition: template
      value_template: >-
        {{ activity|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class activity attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        activity: >-
          {{ activity }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_activity_on
  alias: motion_device_humidity_activity_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity activity not on'
        condition: template
        value_template: >-
          {{ not 'humidity' in state_attr('binary_sensor.motion_device_class','activity') }}
  variables:
    activity: >-
      {% set s = state_attr('binary_sensor.motion_device_class','activity') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set activity = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set activity = ['humidity'] -%}
      {%- endif %}
      {%- if activity is defined -%}
        {{ activity }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if activity list of device classes is valid'
      condition: template
      value_template: >-
        {{ activity|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class activity attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        activity: >-
          {{ activity }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_alarm_activity
  alias: motion_device_humidity_alarm_activity
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_activity'
      to: 'on'
  variables:
    activity: >-
      {{ state_attr('binary_sensor.motion_device_humidity','activity') }}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ activity|lower != 'none' and activity|lower != 'null' and activity|length > 0 }}
  action:
    - variables:
        markdown: >-
          {%- if activity|lower != 'none' and not activity is string and activity is iterable and activity|count > 0 -%}
            A <a href="/lovelace-primary/humidity">humidity</a> <a href="/notify-activity">activity</a> alarm was triggered at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}:
            {%- for i in activity -%}
              {%- if loop.first -%}{{- '<ul>' -}}{%- endif -%}
              {%- set d = state_attr('binary_sensor.motion_device_class','devices') -%}
              {%- if d|lower != 'none' and d|lower != 'unknown' and not d is string and d is iterable and d|count > 0 -%}
                {%- set d = d|selectattr('id','==',i.id)|list -%}
                {%- if d|lower != 'none' and d|lower != 'unknown' and not d is string and d is iterable and d|count > 0 -%}
                  {%- set d = d|first -%}
                  <li><a href="/config/devices/device/{{- d.did -}}">{{- d.friendly_name|replace("'","") -}}</a> in <a href="/config/areas/area/{{- area_id(activity[loop.index-1].entity_id) -}})">{{- area_id(activity[loop.index-1].entity_id) -}}</a></li>
                {%- else -%}
                  <li>{{- i.id -}} is {{ states(i.entity_id) -}}</li>
                {%- endif -%}
              {%- else -%}
                <li>{{- i.id -}} is {{ states(i.entity_id) -}}</li>
              {%- endif -%}
              {%- if loop.last -%}{{- '</ul>' -}}{%- endif -%}
            {%- endfor -%}
          {%- else -%}
            {{- '<b>No humidity activity</b>' -}}
          {%- endif -%}
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_activity
        markdown: >-
          {{ markdown }}
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger motion notification'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_activity_notify

- id: motion_device_humidity_activity_notify
  alias: motion_device_humidity_activity_notify
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    activity: >-
      {% set activity = state_attr('binary_sensor.motion_device_humidity','activity') %}
      {{ activity }}
    action: >-
      {% set action = class + '-alarm' %}
      {{ action }}
    url: >-
      {% set url = '/notify-activity/' %}
      {{ url }}
    title: >-
      {% set title = states('sensor.motion_app') + ': humidity activity alarm' %}
      {{ title }}
    notification_id: >-
      {{ 'device-humidity-activity' }}
    icon: >-
      {% set icon = 'notification-humidity-activity' %}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      {{ state_attr('binary_sensor.motion_device_class_humidity_activity','markdown') }}
      <p>We have notified <b>{{- state_attr('sensor.motion_role_primary','friendly_name')|replace("'","") -}}</b> about your humidity alarm.
      To inspect and change the alarm click the <b>{{- action -}}</b> button below.
      {{- '<p>' -}}
      <a href="{{- url -}}"><img src="https://img.shields.io/badge/{{- action -}}-yellow.svg"></a>
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify humidity sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

## alarm

- id: motion_device_humidity_alarm_off
  alias: motion_device_humidity_alarm_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity alarm not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','alarm') }}
  variables:
    alarm: >-
      {% set s = state_attr('binary_sensor.motion_device_class','alarm') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set alarm = s -%}
        {%- else -%}
          {% set alarm = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if alarm is defined -%}
        {{ alarm }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if alarm list of device classes is valid'
      condition: template
      value_template: >-
        {{ alarm|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class alarm attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        alarm: >-
          {{ alarm }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_alarm_on
  alias: motion_device_humidity_alarm_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity alarm not on'
        condition: template
        value_template: >-
          {{ not 'humidity' in state_attr('binary_sensor.motion_device_class','alarm') }}
  variables:
    alarm: >-
      {% set s = state_attr('binary_sensor.motion_device_class','alarm') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set alarm = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set alarm = ['humidity'] -%}
      {%- endif %}
      {%- if alarm is defined -%}
        {{ alarm }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if alarm list of device classes is valid'
      condition: template
      value_template: >-
        {{ alarm|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class alarm attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        alarm: >-
          {{ alarm }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

## toggle

- id: motion_device_humidity_turn_on
  alias: motion_device_humidity_turn_on
  mode: single
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_humidity_turn_on','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_humidity_turn_on','entity_ids') }}
  action:
    - alias: 'turn_on humidity sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: switch.turn_on
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_humidity_turn_off
  alias: motion_device_humidity_turn_off
  mode: single
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_humidity_turn_off','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_humidity_turn_off','entity_ids') }}
  action:
    - alias: 'turn_off humidity sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: switch.turn_off
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_humidity_toggle
  alias: motion_device_humidity_toggle
  mode: single
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_humidity_toggle','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_humidity_toggle','entity_ids') }}
  action:
    - alias: 'toggle humidity sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: switch.toggle
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

## update, restart, and other contols

- id: motion_device_humidity_self_test
  alias: motion_device_humidity_self_test
  mode: single
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test if self_test is on'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_humidity_self_test','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_humidity_self_test','entity_ids') }}
  action:
    - alias: 'test humidity sensors'
      repeat:
        while:
          - alias: 'test if not done'
            condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: 'pressing button'
            service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_humidity_mute
  alias: motion_device_humidity_mute
  mode: single
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_humidity_mute','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_humidity_mute','entity_ids') }}
  action:
    - alias: 'mute humidity sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_humidity_unmute
  alias: motion_device_humidity_unmute
  mode: single
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_humidity_unmute','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_humidity_unmute','entity_ids') }}
  action:
    - alias: 'unmute humidity sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_humidity_restart
  alias: motion_device_humidity_restart
  mode: single
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_humidity_restart','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_humidity_restart','entity_ids') }}
  action:
    - alias: 'restart humidity sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_humidity_update
  alias: motion_device_humidity_update
  mode: single
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_humidity_update','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_humidity_update','entity_ids') }}
  action:
    - alias: 'update humidity sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') -%}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

# found

- id: motion_device_humidity_found
  alias: motion_device_humidity_found
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_exist'
      to: 'on'
  variables:
    ids: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','found') %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
        {{ s|map(attribute='id')|sort|unique|list }}
      {%- else -%}none{%- endif %}
    details: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','found') %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
        "{{ s }}"
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','found') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_found','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
    actions: >-
      {%- set actions = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_humidity_actions','found') -%}
      {%- if s|lower != 'none' and 'actions' in s -%}
        {%- set actions = s.actions -%}
      {%- endif -%}
      {{- actions -}}
    responses: >-
      {%- set responses = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_humidity_actions','found') -%}
      {%- if s|lower != 'none' and 'responses' in s -%}
        {%- set responses = s.responses -%}
      {%- endif -%}
      {{- responses -}}
    approve: >-
      {%- if actions|lower != 'none' and 'approve' in actions -%}
      {{ actions.approve }}
      {%- else -%}none{%- endif -%}
    deny: >-
      {%- if actions|lower != 'none' and 'deny' in actions -%}
      {{ actions.deny }}
      {%- else -%}none{%- endif -%}
    wait: >-
      {%- if actions|lower != 'none' and 'wait' in actions -%}
      {{ actions.wait }}
      {%- else -%}none{%- endif -%}
    help: >-
      {%- if actions|lower != 'none' and 'help' in actions -%}
      {{ actions.help }}
      {%- else -%}none{%- endif -%}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_found
        approve: >-
          {{ approve }}
        deny: >-
          {{ deny }}
        wait: >-
          {{ wait }}
        help: >-
          {{ help }}
        responses: >-
          {{ responses }}
        last: >-
          {{ last }}
        ids: >-
          {{ ids }}
        details: >-
          {{ details }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - alias: 'set humidity condition: found'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'found' }}

## notifications

- id: motion_device_humidity_found_notify
  alias: motion_device_humidity_found_notify
  mode: single
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_humidity_found
      to: 'on'
  variables:
    class: >-
      {{- 'humidity' -}}
    ids: >-
      {% set ids = state_attr('binary_sensor.motion_device_humidity','ids') -%}
      {{ ids }}
    devices: >-
      {% set devices = state_attr('binary_sensor.motion_device_humidity','devices') -%}
      {{ devices }}
    title: >-
      {% set title = states('sensor.motion_app') + ': humidity sensor found' -%}
      {{ title }}
    notification_id: >-
      {{ 'device-' + class|string + '-notify' }}
    icon: >-
      {% set icon = 'notification-' + class|string + '-found' -%}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      {%- if devices|lower != 'none' -%}
        Sensor(s) for humidity found at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') -}}
        {%- for i in devices -%}
         {%- if loop.first -%}<ul>{%- endif -%}
          <li><a href="/config/devices/device/{{- i.did -}}">{{- i.friendly_name|replace("'","") -}}</a> in <a href="/config/areas/area/{{- i.area -}}">{{- i.area -}}</a></li>
         {%- if loop.last -%}</ul>{%- endif -%}
        {%- endfor -%}
      {%- else -%}
        <b>INVALID</b>: no devices with humidity sensors at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
      {%- endif -%}
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify found humidity sensor'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_humidity_found_dismiss
  alias: motion_device_humidity_found_dismiss
  mode: single
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_humidity_exist
      to: 'on'
      for:
        minutes: >-
          {{ states('input_number.motion_device_class_dismiss')|int(5) }}
  variables:
    notification_id: >-
      {{ 'device-humidity-notify' }}
  action:
    - alias: 'dismiss humidity found notification'
      service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{ notification_id }}

# cleared notify

- id: motion_device_humidity_cleared_notify
  alias: motion_device_humidity_cleared_notify
  mode: single
  initial_state: 'off'
  trigger:
    - platform: template
      value_template: >-
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','good',states('binary_sensor.motion_device_humidity')) }}
  variables:
    class: >-
      {{- 'humidity' -}}
    which: >-
      {% set which = none %}
      {% set s = state_attr('binary_sensor.motion_device_humidity','status')|selectattr('state','==','off')|sort(attribute='updated',reverse=true)|list %}
      {% if s|lower != 'none' and s|lower != 'null' and not s is string and s is iterable and s|count > 0 %}
        {% set which = s|map(attribute='id')|first  %}
      {%- endif %}
      {{ which }}
    notification_id: >-
      {{ 'device-humidity-status-' + which|string }}
    icon: >-
      {% set icon = 'notification-humidity-good' %}
      {{ icon }}
    title: >-
      {% set title = states('sensor.motion_app') + ': humidity good (' + state_attr('binary_sensor.motion_device_humidity_exist','good')|string + ')' %}
      {{ title }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      The <a href="/notify-devices/humidity">humidity</a> alarm has cleared; sensor: {{ which -}}.
    message: >-
      {{- header -}}{<hr>{- body -}}{{- footer -}}
  action:
    - condition: template
      value_template: >
        {{ which|lower != 'none' and is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'notify humidity sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

# cleared dismissed

- id: motion_device_humidity_cleared_dismiss
  alias: motion_device_humidity_cleared_dismiss
  mode: single
  initial_state: 'off'
  trigger:
    - platform: template
      value_template: >-
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','good',states('binary_sensor.motion_device_humidity')) }}
      for:
        minutes: >-
          {{ states('input_number.motion_device_class_dismiss')|int(5) }}
  variables:
    ids: >-
      {%- set ids = state_attr('binary_sensor.motion_device_humidity','ids') -%}
      {%- if ids|lower != 'none' and not ids is string and ids is iterable and ids|count > 0 -%}
        [{%- for i in ids -%}
          {%- if not loop.first -%},{%- endif -%}
          "{{- 'device-humidity-status-' + i|string -}}"
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ ids|lower != 'none' and ids is iterable and ids|count > 0 }}
  action:
    - alias: 'dismiss humidity status'
      repeat:
        while:
          - alias: 'test if not done'
            condition: template
            value_template: >-
              {%- set s = ids[repeat.index - 1]|default('unknown') %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: 'dismissing persistent notification'
            service: persistent_notification.dismiss
            data_template:
              notification_id: >-
                {{ ids[repeat.index - 1] }}

# activity,unavailable

- id: motion_device_humidity_unavailable
  alias: motion_device_humidity_unavailable
  mode: restart
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_exist'
      to: 'on'
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity'
      attribute: 'unavailable'
    - platform: time_pattern
      minutes: '/5'
  variables:
    ids: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','unavailable') %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
        {{ s|map(attribute='id')|sort|unique|list }}
      {%- else -%}none{%- endif %}
    details: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','unavailable') -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          { {%- for i in s|map(attribute='id')|sort|unique -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{ i }}":
            [{%- for j in s|selectattr('id','==',i)|map(attribute='entity_id') -%}
              {%- if not loop.first -%},{%- endif -%}
              "{{- state_attr(j,'friendly_name') -}}"
            {%- endfor -%}]
          {% endfor %} }
        {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','unavailable') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_unavailable','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
    markdown: >-
      {%- if details|lower != 'none' -%}
        {%- for i in details -%}
          {%- if loop.first -%}<ul>{%- endif -%}
          {{- '<li>' -}}
          {%- set e = state_attr('binary_sensor.motion_device_humidity','status') -%}
          {%- if e|lower != 'none' and not e is string and e is iterable and e|count > 0 -%}
            {%- set e = e|selectattr('id','==',i)|list -%}
            {%- if e|lower != 'none' and not e is string and e is iterable and e|count > 0 -%}
              {%- set e = e|first -%}
              {%- set did = device_id(e.entity_id) -%}
              <a href="/config/devices/device/{{- did -}}"><b>{{- device_attr(device_id(e.entity_id),'name') -}}</b></a><br><i>Last updated</i>: {{- e.updated|as_datetime|relative_time }} ago
              {%- for j in details[i] -%}
                {%- if loop.first -%}<ul>{%- endif -%}
                <li>{{- j -}}</li>
                {%- if loop.last %}</ul>{% endif -%}
              {%- endfor -%}
              {{- '</li>' -}}
              {%- if loop.last %}</ul>{% endif -%}
            {%- else -%}
              <li>{{ i }} is {{ states(i.entity_id) }}</li>
            {%- endif -%}
          {%- else -%}
            <li>{{ i }} is {{ states(i.entity_id) }}</li>
          {%- endif -%}
        {%- endfor -%}
      {%- else -%}
        <b>No unavailable humidity sensors</b> at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') -}}
      {%- endif %}
    actions: >-
      {%- set actions = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_humidity_actions','unavailable') -%}
      {%- if s|lower != 'none' and 'actions' in s -%}
        {%- set actions = s.actions -%}
      {%- endif -%}
      {{- actions -}}
    responses: >-
      {%- set responses = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_humidity_actions','unavailable') -%}
      {%- if s|lower != 'none' and 'responses' in s -%}
        {%- set responses = s.responses -%}
      {%- endif -%}
      {{- responses -}}
    approve: >-
      {%- if actions|lower != 'none' and 'approve' in actions -%}
      {{ actions.approve }}
      {%- else -%}none{%- endif -%}
    deny: >-
      {%- if actions|lower != 'none' and 'deny' in actions -%}
      {{ actions.deny }}
      {%- else -%}none{%- endif -%}
    wait: >-
      {%- if actions|lower != 'none' and 'wait' in actions -%}
      {{ actions.wait }}
      {%- else -%}none{%- endif -%}
    help: >-
      {%- if actions|lower != 'none' and 'help' in actions -%}
      {{ actions.help }}
      {%- else -%}none{%- endif -%}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_unavailable
        last: >-
          {{ last }}
        ids: >-
          {{ ids }}
        approve: >-
          {{ approve }}
        deny: >-
          {{ deny }}
        wait: >-
          {{ wait }}
        help: >-
          {{ help }}
        responses: >-
          {{ responses }}
        details: >-
          {{ details }}
        markdown: >-
          {{ markdown }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - alias: 'set humidity condition: unavailable'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'unavailable' }}

# missing

- id: motion_device_humidity_missing
  alias: motion_device_humidity_missing
  mode: restart
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_humidity_exist
      to: 'off'
    - platform: template
      value_template: >-
        {{ is_state_attr('automation.motion_device_humidity_rescan','current',0)
           and is_state_attr('binary_sensor.motion_device_humidity_exist','required','on') }}
  variables:
    state: >-
      {% set state = 'off' %}
      {% if is_state('binary_sensor.motion_device_humidity_exist','off')
       and is_state_attr('automation.motion_device_humidity_rescan','current',0)
       and is_state_attr('binary_sensor.motion_device_humidity_exist','required','on') %}
        {% set state = 'on' %}
      {% endif %}
      {{ state }}
    last: >-
      {% set last = state_attr('binary_sensor.motion_device_humidity_missing','last') %}
      {% if state|lower == 'off' or last|lower == 'none' %}
        {% set last = utcnow().timestamp() %}
      {% endif %}
      {{ last }}
    actions: >-
      {%- set actions = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_humidity_actions','missing') -%}
      {%- if s|lower != 'none' and 'actions' in s -%}
        {%- set actions = s.actions -%}
      {%- endif -%}
      {{- actions -}}
    responses: >-
      {%- set responses = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_humidity_actions','missing') -%}
      {%- if s|lower != 'none' and 'responses' in s -%}
        {%- set responses = s.responses -%}
      {%- endif -%}
      {{- responses -}}
    approve: >-
      {%- if actions|lower != 'none' and 'approve' in actions -%}
      {{ actions.approve }}
      {%- else -%}none{%- endif -%}
    deny: >-
      {%- if actions|lower != 'none' and 'deny' in actions -%}
      {{ actions.deny }}
      {%- else -%}none{%- endif -%}
    wait: >-
      {%- if actions|lower != 'none' and 'wait' in actions -%}
      {{ actions.wait }}
      {%- else -%}none{%- endif -%}
    help: >-
      {%- if actions|lower != 'none' and 'help' in actions -%}
      {{ actions.help }}
      {%- else -%}none{%- endif -%}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
    - condition: template
      value_template: >
        {{ is_state('binary_sensor.motion_device_humidity_exist','off') }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_missing
        approve: >-
          {{ approve }}
        deny: >-
          {{ deny }}
        wait: >-
          {{ wait }}
        help: >-
          {{ help }}
        responses: >-
          {{ responses }}
        last: >-
          {{ last }}
        markdown: >-
          No humidity sensors have been found.
          At {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') -}};
          for {{ last|as_datetime|relative_time -}};
          please setup the integration by clicking [here](/config/integrations).
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - alias: 'set humidity condition: missing'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'missing' }}

- id: motion_device_humidity_missing_notify
  alias: motion_device_humidity_missing_notify
  mode: single
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_humidity_missing
      to: 'on'
  variables:
    class: >-
      {{ 'humidity' }}
    ip: >-
      {{ none }}
    latitude: >-
      {{ none }}
    longitude: >-
      {{ none }}
    notification_id: >-
      {{ 'device-humidity-missing' }}
    icon: >-
      {% set icon = 'notification-humidity-missing' %}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- else -%}
         <br><a href="/notify-missing"><img src="https://img.shields.io/badge/{{- class -}}-missing-yellow.svg"></a>
      {%- endif -%}
    title: >-
      {% set title = states('sensor.motion_app') + ': humidity sensor missing' %}
      {{ title }}
    body: >-
      {{ state_attr('binary_sensor.motion_device_humidity_missing','markdown') }}
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify missing humidity sensor'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_humidity_missing_dismiss
  alias: motion_device_humidity_missing_dismiss
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    notification_id: >-
      {{ 'device-' + class + '-missing' }}
  action:
    - alias: 'dismiss humidity missing notification'
      service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{ notification_id }}

## high_spike

- id: motion_device_humidity_high_spike
  alias: motion_device_humidity_high_spike
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity'
      attribute: 'high_spike'
  variables:
    details: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','high_spike')|lower != 'none' %}
        {% set s = state_attr('binary_sensor.motion_device_humidity','high_spike') %}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- state_attr(i.entity_id,'friendly_name') }} is {{ states(i.entity_id)|int('unknown') -}}{{ state_attr(i.entity_id,'unit_of_measurement') -}}"
          {%- endfor -%}]
        {%- else -%}none{%- endif %}
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','high_spike') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|list|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_high_spike','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_high_spike
        last: >-
          {{ last }}
        details: >-
          {{ details }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - alias: 'set humidity condition: high_spike'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'high_spike' }}

- id: motion_device_humidity_high_spike_off
  alias: motion_device_humidity_high_spike_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity high_spike not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','high_spike') }}
  variables:
    high_spike: >-
      {% set s = state_attr('binary_sensor.motion_device_class','high_spike') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set high_spike = s -%}
        {%- else -%}
          {% set high_spike = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if high_spike is defined -%}
        {{ high_spike }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if high_spike list of device classes is valid'
      condition: template
      value_template: >-
        {{ high_spike|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class high_spike attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        high_spike: >-
          {{ high_spike }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_high_spike_on
  alias: motion_device_humidity_high_spike_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity high_spike not on'
        condition: template
        value_template: >-
          {{ not 'humidity' in state_attr('binary_sensor.motion_device_class','high_spike') }}
  variables:
    high_spike: >-
      {% set s = state_attr('binary_sensor.motion_device_class','high_spike') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set high_spike = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set high_spike = ['humidity'] -%}
      {%- endif %}
      {%- if high_spike is defined -%}
        {{ high_spike }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if high_spike list of device classes is valid'
      condition: template
      value_template: >-
        {{ high_spike|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class high_spike attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        high_spike: >-
          {{ high_spike }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_alarm_high_spike_on
  alias: motion_device_humidity_alarm_high_spike_on
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_high_spike'
      to: 'on'
  variables:
    limit: >-
      {{ state_attr('sensor.motion_device_humidity_high_spike','limit') }})
    high_spike: >-
      {{ state_attr('binary_sensor.motion_device_humidity','high_spike') }}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{- high_spike|lower != 'none' and high_spike|lower != 'unknown' and not high_spike is string and high_spike is iterable and high_spike|count > 0 -}}
      - condition: template
        value_template: >
          {{- limit|lower != 'none' and limit|lower != 'unknown' and limit is number -}}
  action:
    - variables:
        markdown: >-
          The <a href="/lovelace-primary/humidity">humidity</a> spike alarm was triggered (above {{ limit -}}) at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}:<br>
          {%- for i in high_spike if 'id' in i and i.id|lower != 'none' -%}
            {%- if loop.first -%}{{- '<ul>' -}}{%- endif -%}
            {%- set d = state_attr('binary_sensor.motion_device_class','devices') -%}
            {%- if d|lower != 'none' and not d is string and d is iterable and d|count > 0 -%}
              {%- set d = d|selectattr('id','==',i.id)|list -%}
              {%- if d|lower != 'none' and not d is string and d is iterable and d|count > 0 -%}
                {%- set d = d|first -%}
                <li><a href="/config/devices/device/{{- d.did -}}">{{- d.friendly_name|replace("'","") -}}</a> is {{ states(high_spike[loop.index-1].entity_id) -}}{{- state_attr(high_spike[loop.index-1].entity_id,'unit_of_measurement') }} in <a href="/config/areas/area/{{- area_id(high_spike[loop.index-1].entity_id) -}}">{{- area_id(high_spike[loop.index-1].entity_id) -}}</a></li>
              {%- else -%}
                <li>{{- i.id }} humidity is {{ states(i.entity_id) -}}{{- state_attr(i.entity_id,'unit_of_measurement') }}</li>
              {%- endif -%}
            {%- else -%}
              {{- '<li>' -}}
              {{- i.id }} humidity is {{ states(i.entity_id) -}}{{- state_attr(i.entity_id,'unit_of_measurement') }}
              {{- '</li>' -}}
            {%- endif -%}
            {%- if loop.last -%}{{- '</ul>' -}}{%- endif -%}
          {%- endfor -%}
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_high_spike
        markdown: >-
          {{ markdown }}
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger motion notification'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_high_spike_notify

- id: motion_device_humidity_alarm_high_spike_off
  alias: motion_device_humidity_alarm_high_spike_off
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_high_spike'
      to: 'off'
  action:
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger humidity high_spike dismiss'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_high_spike_dismiss

- id: motion_device_humidity_high_spike_notify
  alias: motion_device_humidity_high_spike_notify
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    high_spike: >-
      {% set high_spike = state_attr('binary_sensor.motion_device_humidity','high_spike') %}
      {{ high_spike }}
    action: >-
      {% set action = class + '-alarm' %}
      {{ action }}
    url: >-
      {% set url = '/lovelace-primary/' + class %}
      {{ url }}
    title: >-
      {% set title = states('sensor.motion_app') + ': ' + class + ' high_spike' %}
      {{ title }}
    notification_id: >-
      {{ 'device-' + class + '-high_spike' }}
    icon: >-
      {% set icon = 'notification-' + class + '-high_spike' %}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      {{ state_attr('binary_sensor.motion_device_humidity_high_spike','markdown') }}
      <p>We have notified <b>{{- state_attr('sensor.motion_role_primary','friendly_name')|replace("'","") -}}</b> about your humidity alarm.
      To inspect and change the alarm click the <b>{{- action -}}</b> button below.
      {{- '<p>' -}}
      <a href="{{- url -}}"><img src="https://img.shields.io/badge/{{- action -}}-yellow.svg"></a>
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify humidity sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_humidity_high_spike_dismiss
  alias: motion_device_humidity_high_spike_dismiss
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    notification_id: >-
      {{ 'device-' + class + '-high_spike' }}
  action:
    - alias: 'dismiss humidity high_spike notification'
      service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{ notification_id }}

## low_spike

- id: motion_device_humidity_low_spike
  alias: motion_device_humidity_low_spike
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity'
      attribute: 'low_spike'
  variables:
    details: >-
      {% if state_attr('binary_sensor.motion_device_humidity_exist','low_spike')|lower != 'none' %}
        {% set s = state_attr('binary_sensor.motion_device_humidity','low_spike') %}
        {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s is iterable -%}
          [{% for i in s -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- state_attr(i.entity_id,'friendly_name') }} is {{ states(i.entity_id)|int('unknown') -}}{{ state_attr(i.entity_id,'unit_of_measurement') -}}"
          {%- endfor -%}]
        {%- else -%}none{%- endif %}
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = state_attr('binary_sensor.motion_device_humidity','low_spike') %}
      {% if s|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and not s is string and s is iterable %}
        {% if s|list|count > 0 %}on{% else %}off{% endif %}
      {% else %}unknown{% endif %}
    last: >-
      {% if state|lower == 'off' %}
        {{ state_attr('binary_sensor.motion_device_humidity_low_spike','last') }}
      {%- else -%}{{ utcnow().timestamp() }}{%- endif %}
  condition:
    - condition: template
      value_template: >
        {{ state|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_low_spike
        last: >-
          {{ last }}
        details: >-
          {{ details }}
        state: >-
          {{ state }}
    - condition: template
      value_template: >
        {{ state|lower == 'on' }}
    - alias: 'set humidity condition: low_spike'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity
        condition: >-
          {{ 'low_spike' }}

- id: motion_device_humidity_low_spike_off
  alias: motion_device_humidity_low_spike_off
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity low_spike not off'
        condition: template
        value_template: >-
          {{ 'humidity' in state_attr('binary_sensor.motion_device_class','low_spike') }}
  variables:
    low_spike: >-
      {% set s = state_attr('binary_sensor.motion_device_class','low_spike') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set s = s|reject('==','humidity')|list -%}
        {%- if not s is string and s is iterable and s|count > 0 -%}
          {% set low_spike = s -%}
        {%- else -%}
          {% set low_spike = [] -%}
        {%- endif %}
      {%- endif %}
      {%- if low_spike is defined -%}
        {{ low_spike }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if low_spike list of device classes is valid'
      condition: template
      value_template: >-
        {{ low_spike|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class low_spike attribute; remove: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        low_spike: >-
          {{ low_spike }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_low_spike_on
  alias: motion_device_humidity_low_spike_on
  mode: single
  max_exceeded: silent
  initial_state: 'off'
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test setup complete'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_class','on') }}
      - alias: 'humidity low_spike not on'
        condition: template
        value_template: >-
          {{ not 'humidity' in state_attr('binary_sensor.motion_device_class','low_spike') }}
  variables:
    low_spike: >-
      {% set s = state_attr('binary_sensor.motion_device_class','low_spike') -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
        {%- set low_spike = (s|list + ['humidity'])|sort|unique|list -%}
      {%- else -%}
        {%- set low_spike = ['humidity'] -%}
      {%- endif %}
      {%- if low_spike is defined -%}
        {{ low_spike }}
      {%- else -%}none{%- endif %}
  action:
    - alias: 'test if low_spike list of device classes is valid'
      condition: template
      value_template: >-
        {{ low_spike|lower != 'none' }}
    - alias: 'update binary_sensor.motion_device_class low_spike attribute; add: humidity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        low_spike: >-
          {{ low_spike }}
    - alias: 'update binary_sensor.motion_device_humidity_exist'
      service: homeassistant.update_entity
      entity_id: binary_sensor.motion_device_humidity_exist

- id: motion_device_humidity_alarm_low_spike_on
  alias: motion_device_humidity_alarm_low_spike_on
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_low_spike'
      to: 'on'
  variables:
    low_spike: >-
      {{ state_attr('binary_sensor.motion_device_humidity','low_spike') }}
    limit: >-
      {{ state_attr('sensor.motion_device_humidity_low_spike','limit') }})
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{- limit|lower != 'none' and limit|lower != 'unknown' and limit is number -}}
      - condition: template
        value_template: >
          {{- low_spike|lower != 'none' and low_spike|lower != 'unknown' and not low_spike is string and low_spike is iterable and low_spike|count > 0 -}}
  action:
    - variables:
        markdown: >-
          The <a href="/lovelace-primary/humidity">humidity</a> spike alarm was triggered (below {{ limit -}}) at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}:<br>
          {%- for i in low_spike if 'id' in i and i.id|lower != 'none' -%}
            {%- if loop.first -%}{{- '<ul>' -}}{%- endif -%}
            {%- set d = state_attr('binary_sensor.motion_device_class','devices') -%}
            {%- if d|lower != 'none' and not d is string and d is iterable and d|count > 0 -%}
              {%- set d = d|selectattr('id','==',i.id)|list -%}
              {%- if d|lower != 'none' and not d is string and d is iterable and d|count > 0 -%}
                {%- set d = d|first -%}
                <li><a href="/config/devices/device/{{- d.did -}}">{{- d.friendly_name|replace("'","") -}}</a> is {{ states(low_spike[loop.index-1].entity_id) -}}{{- state_attr(low_spike[loop.index-1].entity_id,'unit_of_measurement') }} in <a href="/config/areas/area/{{- area_id(low_spike[loop.index-1].entity_id) -}}">{{- area_id(low_spike[loop.index-1].entity_id) -}}</a></li>
              {%- else -%}
                <li>{{- i.id }} humidity is {{ states(i.entity_id) -}}{{- state_attr(i.entity_id,'unit_of_measurement') }}</li>
              {%- endif -%}
            {%- else -%}
              {{- '<li>' -}}
              {{- i.id }} humidity is {{ states(i.entity_id) -}}{{- state_attr(i.entity_id,'unit_of_measurement') }}
              {{- '</li>' -}}
            {%- endif -%}
            {%- if loop.last -%}{{- '</ul>' -}}{%- endif -%}
          {%- endfor -%}
    - service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_humidity_low_spike
        markdown: >-
          {{ markdown }}
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger motion notification'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_low_spike_notify

- id: motion_device_humidity_alarm_low_spike_off
  alias: motion_device_humidity_alarm_low_spike_off
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_humidity_low_spike'
      to: 'off'
  action:
    - condition: template
      value_template: >
        {{ is_state_attr('binary_sensor.motion_device_humidity_exist','alarm','on') }}
    - alias: 'trigger humidity low_spike dismiss'
      service: automation.trigger
      data_template:
        entity_id: automation.motion_device_humidity_low_spike_dismiss

- id: motion_device_humidity_low_spike_notify
  alias: motion_device_humidity_low_spike_notify
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    low_spike: >-
      {% set low_spike = state_attr('binary_sensor.motion_device_humidity','low_spike') %}
      {{ low_spike }}
    action: >-
      {% set action = class + '-alarm' %}
      {{ action }}
    url: >-
      {% set url = '/lovelace-primary/' + class %}
      {{ url }}
    title: >-
      {% set title = states('sensor.motion_app') + ': ' + class + ' low_spike' %}
      {{ title }}
    notification_id: >-
      {{ 'device-' + class + '-low_spike' }}
    icon: >-
      {% set icon = 'notification-' + class + '-low_spike' %}
      {{ icon }}
    header: >-
      {{- '<img src="/local/images/icons/' + icon + '.png?v1">' -}}
    footer: >-
      <a href="/notify-devices/{{- class -}}"><img src="https://img.shields.io/badge/{{- class -}}-device-cyan.svg"></a>
      {%- if did is defined and did|lower != 'none' and did|lower != 'null' -%}
         <br><a href="/config/devices/device/{{- did -}}"><img src="https://img.shields.io/badge/{{- class -}}-config-blue.svg"></a>
      {%- endif -%}
    body: >-
      {{ state_attr('binary_sensor.motion_device_humidity_low_spike','markdown') }}
      <p>We have notified <b>{{- state_attr('sensor.motion_role_primary','friendly_name')|replace("'","") -}}</b> about your humidity alarm.
      To inspect and change the alarm click the <b>{{- action -}}</b> button below.
      {{- '<p>' -}}
      <a href="{{- url -}}"><img src="https://img.shields.io/badge/{{- action -}}-yellow.svg"></a>
    message: >-
      {{- header -}}<hr>{{- body -}}<br>{{- footer -}}
  action:
    - alias: 'notify humidity sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_humidity_low_spike_dismiss
  alias: motion_device_humidity_low_spike_dismiss
  mode: single
  initial_state: 'off'
  trigger:
  variables:
    class: >-
      {{ 'humidity' }}
    notification_id: >-
      {{ 'device-' + class + '-low_spike' }}
  action:
    - alias: 'dismiss humidity low_spike notification'
      service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{ notification_id }}

###
# homeassistant/automation/device/class/humidity.yaml
###

- id: motion_device_humidity_response
  alias: motion_device_humidity_response
  mode: single
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: 
          - "device-humidity-bad-wait"
          - "device-humidity-bad-help"
          - "device-humidity-bad-deny"
          - "device-humidity-bad-approve"
          - "device-humidity-good-wait"
          - "device-humidity-good-help"
          - "device-humidity-good-deny"
          - "device-humidity-good-approve"
          - "device-humidity-high-wait"
          - "device-humidity-high-help"
          - "device-humidity-high-deny"
          - "device-humidity-high-approve"
          - "device-humidity-low-wait"
          - "device-humidity-low-help"
          - "device-humidity-low-deny"
          - "device-humidity-low-approve"
  variables:
    event: >-
      {% set event = none -%}
      {%- if trigger|lower != 'none' -%}
        {%- set event = trigger.event|default('none') -%}
      {%- endif -%}
      {{- event }}
    action: >-
      {% set action = none -%}
      {% if event|lower != 'none' and 'data' in event %}
        {% set action = event.data.action|default('none') %}
      {%- endif -%}
      {{- action }}
    condition: >-
      {% set condition = none -%}
      {% if action|lower != 'none' %}
        {% set condition = action|replace('device-humidity-','')|regex_replace('-.*','') %}
      {%- endif -%}
      {{- condition }}
    response: >-
      {% set response = none -%}
      {% if condition|lower != 'none' %}
        {% set response = action|replace('device-humidity-' + condition|string + '-','') %}
      {%- endif -%}
      {{- response }}
    origin: >-
      {% if trigger|lower != 'none' %}
        {{ trigger.event.origin|default(none) }}
      {% else %}none{% endif %}
    time_fired: >-
      {% if trigger|lower != 'none' %}
        {{ trigger.event.time_fired|default(none) }}
      {% else %}none{% endif %}
    context: >-
      {% if trigger|lower != 'none' %}
        {{ trigger.event.context }}
      {% else %}none{% endif %}
    responses: >-
      {%- set responses = none -%}
      {%- if condition|lower != 'none' and condition|string|length > 0 -%}
        {%- set s = state_attr('binary_sensor.motion_device_humidity_' + condition|string,'responses') -%}
        {%- if s|lower != 'none' -%}
          {%- set responses = s -%}
        {%- endif -%}
      {%- endif -%}
      {{- responses -}}
    actions: >-
      {%- set actions = none -%}
      {%- if condition|lower != 'none' and condition|string|length > 0 -%}
        {%- set s = state_attr('binary_sensor.motion_device_humidity_' + condition|string,'actions') -%}
        {%- if s|lower != 'none' and 'id' in s -%}
          {%- set actions = s -%}
        {%- endif -%}
      {%- endif -%}
      {{- actions -}}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  DEBUG: Device humidity response
                notification_id: >-
                  {{ 'device-humidity-response' }}
                message: >-
                  Response <b>received</b>: "{{ response -}}"; condition: {{ condition|string -}}; context: {{ context|string -}}; at: {{ time_fired }}
    - choose:
        - alias: 'test if response in responses'
          conditions:
            - alias: 'test if response is valid'
              condition: template
              value_template: >
                {{ response|lower != 'none' and response|string|length > 0 }}
            - alias: 'test if responses are valid'
              condition: template
              value_template: >
                {{ responses|lower != 'none' and not responses is string and responses is iterable and responses|count > 0 }}
            - alias: 'test if response in responses'
              condition: template
              value_template: >
                {{ response|lower in responses }}
          sequence:
            - alias: 'set device_humidity: timestamp, when'
              variables:
                timestamp: >-
                  {{ utcnow().timestamp() }}
                when: >-
                  {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
                response: >-
                  {{ response }}
            - choose:
                - conditions:
                    - condition: template
                      value_template: >
                        {{ states('input_select.motion_log_level') in ['debug','info','notice','alert','critical'] }}
                  sequence:
                    - service: persistent_notification.create
                      data_template:
                        title: >-
                          ALERT: Device humidity updated
                        notification_id: >-
                          {{ 'device-humidity-response' }}
                        message: >-
                          Device humidity <b>updated</b> to <code>{{- response -}}</code> at <i>{{- when -}}</i>
            - alias: 'set binary_sensor.motion_device_humidity to new state w/ condition, response, actions, timestamp, when'
              service: python_script.set_state
              data_template:
                entity_id: binary_sensor.motion_device_humidity
                timestamp: >-
                  {{ timestamp }}
                when: >-
                  {{ when }}
                actions: >-
                  {{ actions }}
                condition: >-
                  {{ condition }}
                response: >-
                  {{ response }}
            - alias: 'trigger automation for humidity approve'
              service: automation.trigger
              data_template:
                entity_id: >-
                  {{ 'automation.motion_device_humidity_' + response|string }}

##

- id: motion_device_humidity_approve
  alias: motion_device_humidity_approve
  mode: single
  initial_state: 'on'
  trigger:
  variables:
    condition: >-
      {% set condition = state_attr('binary_sensor.motion_device_humidity','condition') %}
      {{ condition }}
    response: >-
      {% set response = 'approve' %}
      {{ response }}
    actions: >-
      {% set actions = state_attr('binary_sensor.motion_device_humidity_exist','actions') %}
      {{ actions }}
    function: >-
      {% set function = state_attr('sensor.motion_device_humidity_approve','function') %}
      {{- function -}}
    timestamp: >-
      {{ utcnow().timestamp() }}
    when: >-
      {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  DEBUG: Device humidity: {{ response }}
                notification_id: >-
                  {{ 'device-humidity-response' }}
                message: >-
                  Device humidity response: "{{- response -}}" at <i>{{- when -}}</i>; Condition: {{ condition }}; Actions: {{ actions }}; Trigger: {{ function }}
    - alias: 'function not none'
      condition: template
      value_template: >-
        {{ function|lower != 'none' }}
    - alias: 'trigger automation for humidity approve'
      service: automation.trigger
      data_template:
        entity_id: >-
          {{ function }}

- id: motion_device_humidity_deny
  alias: motion_device_humidity_deny
  mode: single
  initial_state: 'on'
  trigger:
  variables:
    condition: >-
      {% set condition = state_attr('binary_sensor.motion_device_humidity','condition') %}
      {{ condition }}
    response: >-
      {% set response = 'deny' %}
      {{ response }}
    actions: >-
      {% set actions = state_attr('binary_sensor.motion_device_humidity_exist','actions') %}
      {{ actions }}
    function: >-
      {% set function = state_attr('sensor.motion_device_humidity_deny','function') %}
      {{- function -}}
    timestamp: >-
      {{ utcnow().timestamp() }}
    when: >-
      {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  DEBUG: Device humidity: {{ response }}
                notification_id: >-
                  {{ 'device-humidity-response' }}
                message: >-
                  Device humidity response: "{{- response -}}" at <i>{{- when -}}</i>; Trigger: {{ function }}
    - alias: 'function not none'
      condition: template
      value_template: >-
        {{ function|lower != 'none' }}
    - alias: 'trigger automation for humidity deny'
      service: automation.trigger
      data_template:
        entity_id: >-
          {{ function }}

- id: motion_device_humidity_wait
  alias: motion_device_humidity_wait
  mode: single
  initial_state: 'on'
  trigger:
  variables:
    condition: >-
      {% set condition = state_attr('binary_sensor.motion_device_humidity','condition') %}
      {{ condition }}
    response: >-
      {% set response = 'wait' %}
      {{ response }}
    actions: >-
      {% set actions = state_attr('binary_sensor.motion_device_humidity_exist','actions') %}
      {{ actions }}
    function: >-
      {% set function = state_attr('sensor.motion_device_humidity_wait','function') %}
      {{- function -}}
    timestamp: >-
      {{ utcnow().timestamp() }}
    when: >-
      {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  DEBUG: Device humidity: {{ response }}
                notification_id: >-
                  {{ 'device-humidity-response' }}
                message: >-
                  Device humidity response: "{{- response -}}" at <i>{{- when -}}</i>; Trigger: {{ function }}
    - alias: 'function not none'
      condition: template
      value_template: >-
        {{ function|lower != 'none' }}
    - alias: 'trigger automation for humidity wait'
      service: automation.trigger
      data_template:
        entity_id: >-
          {{ function }}

- id: motion_device_humidity_help
  alias: motion_device_humidity_help
  mode: single
  initial_state: 'on'
  trigger:
  variables:
    condition: >-
      {% set condition = state_attr('binary_sensor.motion_device_humidity','condition') %}
      {{ condition }}
    response: >-
      {% set response = 'help' %}
      {{ response }}
    actions: >-
      {% set actions = state_attr('binary_sensor.motion_device_humidity_exist','actions') %}
      {{ actions }}
    function: >-
      {% set function = state_attr('sensor.motion_device_humidity_help','function') %}
      {{- function -}}
    timestamp: >-
      {{ utcnow().timestamp() }}
    when: >-
      {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  DEBUG: Device humidity: {{ response }}
                notification_id: >-
                  {{ 'device-humidity-response' }}
                message: >-
                  Device humidity response: "{{- response -}}" at <i>{{- when -}}</i>; Trigger: {{ function }}
    - alias: 'function not none'
      condition: template
      value_template: >-
        {{ function|lower != 'none' }}
    - alias: 'function automation for humidity help'
      service: automation.trigger
      data_template:
        entity_id: >-
          {{ function }}
