###
# homeassistant/automation/device/class/class_missing.yaml
###

- id: motion_device_class_missing_required_off
  alias: motion_device_class_missing_required_off
  mode: single
  initial_state: 'on'
  trigger:
  variables:
    missing: >-
      {% set missing = state_attr('binary_sensor.motion_device_class_missing','ids') %}
      {{ missing }}
  action:
    - condition: template
      value_template: >
        {{ missing|lower != 'none' and not missing is string and missing is iterable and missing|count > 0 }}
    - alias: 'required_off missing device class(s)'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = missing[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = missing[repeat.index-1] %}
                {% set automation = 'automation.motion_device_' + s|string + '_required_off' %}
                {{ automation }}
          - service: automation.trigger
            data_template:
              entity_id: >-
                {{ automation }}
          - service: automation.trigger
            data_template:
              entity_id: >-
                {{ 'automation.motion_device_temperature_missing_dismiss' }}
          - condition: template
            value_template: >
              {{ states('input_select.motion_log_level') in ['debug'] }}
          - service: persistent_notification.create
            data_template:
              title: >-
                {% set s = missing[repeat.index-1] %}
                DEBUG: Require OFF: {{ s }}
              notification_id: >
                {{- 'debug-device-class-missing-actions' -}}
              message: >-
                {% set s = missing[repeat.index-1] %}
                Class {{ s }} is no longer required; automation: {{ automation }}
    - service: automation.trigger
      data_template:
        entity_id: >-
          {{ 'automation.motion_device_class_missing_dismiss' }}

- id: motion_device_class_missing_dismiss_all
  alias: motion_device_class_missing_dismiss_all
  mode: single
  initial_state: 'on'
  trigger:
  variables:
    missing: >-
      {% set missing = state_attr('binary_sensor.motion_device_class_missing','ids') %}
      {{ missing }}
  action:
    - condition: template
      value_template: >
        {{ missing|lower != 'none' and not missing is string and missing is iterable and missing|count > 0 }}
    - alias: 'dismiss all missing device class(s)'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = missing[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = missing[repeat.index-1] %}
                {% set automation = 'automation.motion_device_' + s|string + '_dismiss' %}
                {{ automation }}
          - service: automation.trigger
            data_template:
              entity_id: >-
                {{ automation }}
          - service: automation.trigger
            data_template:
              entity_id: >-
                {{ 'automation.motion_device_temperature_missing_dismiss' }}
          - condition: template
            value_template: >
              {{ states('input_select.motion_log_level') in ['debug'] }}
          - service: persistent_notification.create
            data_template:
              title: >-
                {% set s = missing[repeat.index-1] %}
                DEBUG: Dismiss missing alarm: {{ s }}
              notification_id: >
                {{- 'debug-device-class-missing-actions' -}}
              message: >-
                Class {{ s }} is no longer required; automation: {{ automation }}
    - service: automation.trigger
      data_template:
        entity_id: >-
          {{ 'automation.motion_device_class_missing_dismiss' }}

- id: motion_device_class_missing_on
  alias: motion_device_class_missing_on
  mode: single
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_device_class_missing
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - alias: 'trigger automation.motion_device_class_missing_notify'
      service: automation.trigger
      entity_id: automation.motion_device_class_missing_notify

- id: motion_device_class_missing_responses
  alias: motion_device_class_missing_responses
  mode: single
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_device_class_exist
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  variables:
    responses: >-
      {% set responses = state_attr('binary_sensor.motion_device_class_missing_exist','responses') %}
      {{ responses }}
  action:
    - alias: 'test if responses are valid'
      condition: template
      value_template: >
        {{ responses|lower != 'none' and not responses is string and responses is iterable and responses|count > 0 }}
    - alias: 'enable response automations'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = responses[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              which: >-
                {% set which = responses[repeat.index-1] %}
                {{ which|string }}
              automation: >-
                {% set automation = 'automation.motion_device_class_missing_' + which %}
                {{ automation }}
              trigger: >-
                {% set s = state_attr('binary_sensor.motion_device_class_missing_exist',which) %}
                {% set trigger = s.trigger|default(none) %}
                {{ trigger }}
          - choose:
              - conditions:
                  - condition: template
                    value_template: >
                      {{ trigger|lower != 'none' }}
                sequence:
                  - service: automation.turn_on
                    data_template:
                      entity_id: >-
                        {{ automation }}
          - choose:
              - conditions:
                  - condition: template
                    value_template: >
                      {{ trigger|lower == 'none' }}
                sequence:
                  - service: automation.turn_off
                    data_template:
                      entity_id: >-
                        {{ automation }}
          - choose:
              - conditions:
                  - condition: template
                    value_template: >
                      {{ states('input_select.motion_log_level') in ['debug','info'] }}
                sequence:
                  - service: persistent_notification.create
                    data_template:
                      title: >-
                        INFO: Missing: {{ which }}
                      notification_id: >-
                        {{ 'device-class-missing-' + which }}
                      message: >-
                        Response: {{ which }} of {{ responses -}}; trigger: {{ trigger -}}; automation: {{ automation -}}

- id: motion_device_class_missing_response
  alias: motion_device_class_missing_response
  mode: single
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "device-class-missing-wait"
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "device-class-missing-help"
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "device-class-missing-deny"
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "device-class-missing-approve"
  variables:
    origin: >-
      {% if trigger|lower != 'none' %}
        {{ trigger.event.origin|default(none) }}
      {% else %}none{% endif %}
    time_fired: >-
      {% if trigger|lower != 'none' %}
        {{ trigger.event.time_fired|default(none) }}
      {% else %}none{% endif %}
    context: >-
      {% if trigger|lower != 'none' %}
        {{ trigger.event.context }}
      {% else %}none{% endif %}
    responses: >-
      {%- set responses = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_class_missing_exist','responses') -%}
      {%- if s|lower != 'none' -%}
        {%- set responses = s -%}
      {%- endif -%}
      {{- responses -}}
    actions: >-
      {%- set actions = none -%}
      {%- set s = state_attr('binary_sensor.motion_device_class_missing_exist','actions') -%}
      {%- if s|lower != 'none' and 'id' in s -%}
        {%- set actions = s -%}
      {%- endif -%}
      {{- actions -}}
    response: >-
      {% if trigger|lower != 'none' and actions|lower != 'none' %}
        {{ trigger.event.data.action|default(none)|string|replace(actions.id|string + '-','') }}
      {% else %}
        {{- state_attr('binary_sensor.motion_device_class_missing','response') -}}
      {% endif %}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug','info'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  INFO: Device missing response
                notification_id: >-
                  {{ 'device-class-missing-response' }}
                message: >-
                  Response <b>received</b>: "{{ response -}}"; context: {{ context|string -}}; at: {{ time_fired }}
    - choose:
        - alias: 'test if response in responses'
          conditions:
            - condition: template
              value_template: >
                {{ response|lower in responses }}
          sequence:
            - alias: 'set device_class_missing: timestamp, when'
              variables:
                timestamp: >-
                  {{ utcnow().timestamp() }}
                when: >-
                  {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
                response: >-
                  {{ response }}
            - choose:
                - conditions:
                    - condition: template
                      value_template: >
                        {{ states('input_select.motion_log_level') in ['debug','info','notice','alert','critical'] }}
                  sequence:
                    - service: persistent_notification.create
                      data_template:
                        title: >-
                          ALERT: Device missing updated
                        notification_id: >-
                          {{ 'device-class-missing-response' }}
                        message: >-
                          Device missing <b>updated</b> to <code>{{- response -}}</code> at <i>{{- when -}}</i>
            - alias: 'set sensor.motion_restart_notify to new state w/ timestamp, when'
              service: python_script.set_state
              data_template:
                entity_id: binary_sensor.motion_device_class_missing
                timestamp: >-
                  {{ timestamp }}
                when: >-
                  {{ when }}
                response: >-
                  {{ response }}

##

- id: motion_device_class_missing_approve
  alias: motion_device_class_missing_approve
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_class_missing'
      attribute: 'response'
      to: 'approve'
  variables:
    response: >-
      {% set response = 'approve' %}
      {{ response }}
    actions: >-
      {% set actions = state_attr('binary_sensor.motion_device_class_missing_exist','actions') %}
      {{ actions }}
    function: >-
      {%- set function = 'none' -%}
      {%- if actions|lower != 'none' and 'actions' in actions -%}
        {%- set s = actions.actions|selectattr('id','==',response)|list -%}
        {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
          {%- set s = s|first -%}
          {%- set function = s.trigger|default('none') -%}
        {%- endif -%}
      {%- endif -%}
      {{- function -}}
    timestamp: >-
      {{ utcnow().timestamp() }}
    when: >-
      {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug','info'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  INFO: Device missing: {{ response }}
                notification_id: >-
                  {{ 'device-class-missing-response' }}
                message: >-
                  Device missing response: "{{- response -}}" at <i>{{- when -}}</i>;  Trigger: {{ function }}
    - alias: 'function not none'
      condition: template
      value_template: >-
        {{ function|lower != 'none' }}
    - alias: 'trigger automation for missing approve'
      service: automation.trigger
      data_template:
        entity_id: >-
          {{ function }}

- id: motion_device_class_missing_deny
  alias: motion_device_class_missing_deny
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_class_missing'
      attribute: 'response'
      to: 'deny'
  variables:
    response: >-
      {% set response = 'deny' %}
      {{ response }}
    actions: >-
      {% set actions = state_attr('binary_sensor.motion_device_class_missing_exist','actions') %}
      {{ actions }}
    function: >-
      {%- set function = 'none' -%}
      {%- if actions|lower != 'none' and 'actions' in actions -%}
        {%- set s = actions.actions|selectattr('id','==',response)|list -%}
        {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
          {%- set s = s|first -%}
          {%- set function = s.trigger|default('none') -%}
        {%- endif -%}
      {%- endif -%}
      {{- function -}}
    timestamp: >-
      {{ utcnow().timestamp() }}
    when: >-
      {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug','info'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  INFO: Device missing: {{ response }}
                notification_id: >-
                  {{ 'device-class-missing-response' }}
                message: >-
                  Device missing response: "{{- response -}}" at <i>{{- when -}}</i>; Trigger: {{ function }}
    - alias: 'function not none'
      condition: template
      value_template: >-
        {{ function|lower != 'none' }}
    - alias: 'trigger automation for missing deny'
      service: automation.trigger
      data_template:
        entity_id: >-
          {{ function }}

- id: motion_device_class_missing_wait
  alias: motion_device_class_missing_wait
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_class_missing'
      attribute: 'response'
      to: 'wait'
  variables:
    response: >-
      {% set response = 'wait' %}
      {{ response }}
    actions: >-
      {% set actions = state_attr('binary_sensor.motion_device_class_missing_exist','actions') %}
      {{ actions }}
    function: >-
      {%- set function = 'none' -%}
      {%- if actions|lower != 'none' and 'actions' in actions -%}
        {%- set s = actions.actions|selectattr('id','==',response)|list -%}
        {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
          {%- set s = s|first -%}
          {%- set function = s.trigger|default('none') -%}
        {%- endif -%}
      {%- endif -%}
      {{- function -}}
    timestamp: >-
      {{ utcnow().timestamp() }}
    when: >-
      {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug','info'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  INFO: Device missing: {{ response }}
                notification_id: >-
                  {{ 'device-class-missing-response' }}
                message: >-
                  Device missing response: "{{- response -}}" at <i>{{- when -}}</i>; Trigger: {{ function }}
    - alias: 'function not none'
      condition: template
      value_template: >-
        {{ function|lower != 'none' }}
    - alias: 'trigger automation for missing wait'
      service: automation.trigger
      data_template:
        entity_id: >-
          {{ function }}

- id: motion_device_class_missing_help
  alias: motion_device_class_missing_help
  mode: single
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_class_missing'
      attribute: 'response'
      to: 'help'
  variables:
    response: >-
      {% set response = 'help' %}
      {{ response }}
    actions: >-
      {% set actions = state_attr('binary_sensor.motion_device_class_missing_exist','actions') %}
      {{ actions }}
    function: >-
      {%- set function = 'none' -%}
      {%- if actions|lower != 'none' and 'actions' in actions -%}
        {%- set s = actions.actions|selectattr('id','==',response)|list -%}
        {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
          {%- set s = s|first -%}
          {%- set function = s.trigger|default('none') -%}
        {%- endif -%}
      {%- endif -%}
      {{- function -}}
    timestamp: >-
      {{ utcnow().timestamp() }}
    when: >-
      {{ timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states('input_select.motion_log_level') in ['debug','info'] }}
          sequence:
            - service: persistent_notification.create
              data_template:
                title: >-
                  INFO: Device missing: {{ response }}
                notification_id: >-
                  {{ 'device-class-missing-response' }}
                message: >-
                  Device missing response: "{{- response -}}" at <i>{{- when -}}</i>; Trigger: {{ function }}
    - alias: 'function not none'
      condition: template
      value_template: >-
        {{ function|lower != 'none' }}
    - alias: 'function automation for missing help'
      service: automation.trigger
      data_template:
        entity_id: >-
          {{ function }}
