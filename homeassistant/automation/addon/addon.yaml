###
# homeassistant/automation/motion/addon.yaml
###

- id: motion_addon_config_update
  alias: motion_addon_config_update
  mode: single
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: '/5'
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sensor.motion_addon_config_api
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ states('sensor.motion_addon_config_api')|lower != 'none' }}
      - condition: template
        value_template: >-
          {% if trigger.platform == 'time_pattern' %}
            {% set s = state_attr('sensor.motion_addon_config','timestamp') -%}
            {{ s|lower == 'none' or utcnow().timestamp() - s|as_timestamp > states('input_number.motion_addon_status_ago')|int(0) }}
          {% else %}true{% endif %}
  action:
    - alias: 'update sensor.motion_addon_config'
      service: homeassistant.update_entity
      entity_id: sensor.motion_addon_config
    - alias: 'update sensor.motion_addon_storage'
      service: homeassistant.update_entity
      entity_id: sensor.motion_addon_storage

- id: motion_addon_status_update
  alias: motion_addon_status_update
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_addon_status
      to: 'off'
    - platform: time_pattern
      minutes: '/5'
    - platform: state
      entity_id: sensor.motion_addon_status_api
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ states('sensor.motion_addon_status_api')|lower != 'none' }}
      - condition: template
        value_template: >-
          {% if trigger.platform == 'time_pattern' %}
            {% set s = state_attr('sensor.motion_addon_status','timestamp') -%}
            {{ s|lower == 'none' or utcnow().timestamp() - s|as_timestamp > states('input_number.motion_addon_status_ago')|int(0) }}
          {% else %}true{% endif %}
  action:
    - alias: 'update sensor.motion_addon_status'
      service: homeassistant.update_entity
      entity_id: sensor.motion_addon_status

- id: motion_addon_restart
  alias: motion_addon_restart
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ state_attr('binary_sensor.motion_addon_update','id')|lower != 'none' }}
  action:
    - alias: 'restart motion_addon'
      service: hassio.addon_restart
      data:
        addon: >-
          {{ state_attr('binary_sensor.motion_addon_update','id') }}

- id: motion_addon_update
  alias: motion_addon_update
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ state_attr('binary_sensor.motion_addon_update','id')|lower != 'none' }}
  action:
    - alias: 'update motion_addon'
      service: hassio.addon_update
      data:
        addon: >-
          {{ state_attr('binary_sensor.motion_addon_update','id') }}

- id: motion_addon_update_template
  alias: motion_addon_update_template
  mode: single
  max_exceeded: silent
  initial_state: on
  trigger:
    - platform: state
      entity_id: 'states.update'
    - platform: state
      entity_id: 'binary_sensor.motion_addon_status'
    - platform: time_pattern
      minutes: '/5'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ state_attr('binary_sensor.motion_addon_status','sensor')|lower != 'none' }}
  variables:
    addons: >-
      {% set addons = state_attr('binary_sensor.motion_addon_update','addons') -%}
      {{- addons }}
    addon: >-
      {% set s = addons -%}
      {%- if s|lower != 'none' and not addons is string and addons is iterable and addons|count > 0 -%}
        {%- set addons = s -%}
        {%- for i in addons if i|string|length > 0 and state_attr('update.' + i + '_update','installed_version')|lower != 'none' -%}
          {%- set t = state_attr('update.' + i + '_update','installed_version') -%}
          {%- if loop.first -%}{{ i }}{%- endif -%}
        {%- endfor -%}
      {%- else -%}none{%- endif %}
    icon: >-
      {%- if addon|lower == 'age_home' -%}
        {{- 'mdi:home-heart' -}}
      {%- elif addon|lower == 'motion_classic' -%}
         {{- 'mdi:eye-plus' -}}
      {%- else -%}
         {{- 'mdi:storefront' -}}
      {%- endif %}
    id: >-
      {% set s = addon -%}
      {%- if s|lower != 'none' and s|string|length > 0 -%}
        {%- set s = state_attr('update.' + s + '_update','entity_picture') -%}
        {%- if s|lower == 'none' -%}
          {%- set s = state_attr('update.motion_classic_update','entity_picture') -%}
        {%- endif -%}
        {%- if s|lower != 'none' -%}
          {%- set s = s|replace('/icon','')|regex_replace('.*/','') -%}
          {{ s }}
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    update: >-
      {% set s = addon -%}
      {%- if s|lower != 'none' -%}
        {{ states.update[s + '_update'].attributes }}
      {%- else -%}none{%- endif %}
    title: >-
      {% set s = update -%}
      {%- if s|lower != 'none' -%}
        {{ s.title }}
      {%- else -%}none{%- endif %}
    version: >-
      {% set s = update -%}
      {%- if s|lower != 'none' -%}
        {{ s.installed_version }}
      {%- else -%}none{%- endif %}
    latest: >-
      {% set s = update -%}
      {%- if s|lower != 'none' -%}
        {{ s.latest_version }}
      {%- else -%}none{%- endif %}
    entity_picture: >-
      {%- set s = state_attr('sensor.motion_name','addon') -%}
      {%- if s|lower != 'none' and 'update' in s -%}
        {%- set s = s['update'].entity_picture|default(none) -%}
      {%- endif -%}
      {%- if s|lower == 'none' -%}
        {%- set s = '/local/images/icon.png' -%}
      {%- endif -%}
      {{ s }}
    state: >-
      {% set s = addon -%}
      {%- if s|lower != 'none' and s|string|length > 0 -%}
        {% set s = states('update.' + s + '_update') -%}
        {%- if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' -%}
          {{- s -}}
        {%- else -%}unknown{%- endif %}
      {%- else -%}unknown{%- endif %}
  action:
    - alias: 'addon defined?'
      condition: template
      value_template: >-
        {{ addon|lower != 'none' }}
    - alias: 'update binary_sensor.motion_addon_update'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_addon_update
        addon: >-
          {{ addon }}
        icon: >-
          {{ icon }}
        id: >-
          {{ id }}
        update: >-
          {{ update }}
        title: >-
          {{ title }}
        version: >-
          {{ version }}
        latest: >-
          {{ latest }}
        entity_picture: >-
          {{ entity_picture }}
        state: >-
          {{ state }}
    - alias: 'update sensor.motion_reload_updates'
      service: homeassistant.update_entity
      entity_id: sensor.motion_reload_updates

#{
#  "arch": "aarch64",
#  "config_path": "/data/options.json",
#  "date": 1657053435,
#  "hostname": "edf7ba55-ageathome",
#  "version": "0.3.1",
#  "ipaddr": "192.168.1.30",
#  "timezone": "America/Los_Angeles",
#  "elevation": "0",
#  "w3w": {
#    "words": "///format.below.slot",
#    "apikey": "I92ZZ9ZZ"
#  },
#  "latitude": "37.174981",
#  "longitude": "-121.816257",
#  "mqtt": {
#    "host": "core-mosquitto",
#    "port": "1883",
#    "username": "username",
#    "password": "password"
#  },
#  "device": "edf7ba55-ageathome",
#  "unit_system": "imperial",
#  "group": "motion",
#  "client": "+",
#  "share_dir": "/share/motion"
#}

- id: motion_addons_start
  alias: motion_addons_start
  initial_state: on
  mode: queued
  max_exceeded: warn
  max: 1000
  trigger:
    - platform: mqtt
      topic: '+/+/start'
  variables:
    topic: >-
      {{ trigger.topic }}
    group: >-
      {% set s = topic|regex_replace('/.*','') %}
      {% if s == states('sensor.motion_group') %}
        {{ s }}
      {% else %}null{% endif %}
    device: >-
      {% if group|lower != 'null' and group|lower != 'none' and group|lower|length > 0 %}
        {{ topic|regex_replace(group + '/','')|regex_replace('/start','') }}
      {% else %}null{% endif %}
    id: >-
      {% if device|lower != 'null' and device|lower != 'none' and device|lower|length > 0 %}
        {{ device|replace('-','_')|replace(' ','_')|replace('.','_') }}
      {% else %}null{% endif %}
    timestamp: >-
      {% if 'date' in trigger.payload_json %}
        {{ trigger.payload_json.date|default('null') }}
      {% else %}null{% endif %}
    client: >-
      {% if 'client' in trigger.payload_json %}
        {{ trigger.payload_json.client|default('null') }}
      {% else %}null{% endif %}
    ipaddr: >-
      {% if 'ipaddr' in trigger.payload_json %}
        {{ trigger.payload_json.ipaddr|default('null') }}
      {% else %}null{% endif %}
    sensor: >-
      {% if id|lower != 'null' and id|lower != 'none' and id|lower|length > 0 %}
        {%- set id = id|replace('.','_')|replace('-','_')|replace(' ','_')|replace('$','_') -%}
        {{ 'binary_sensor.motion_addon_' + id|lower + '_start' }}
      {% else %}null{% endif %}
  action:
    - alias: 'sensor is not null'
      condition: template
      value_template: >-
        {{ sensor|lower != 'null' }}
    - choose:
      - conditions:
          - alias: 'sensor state is not unknown'
            condition: template
            value_template: >
              {{ states(sensor)|lower != 'unknown' }}
          - alias: 'new timestamp == old timestamp'
            condition: template
            value_template: >
              {% set s = state_attr(sensor,'timestamp') %}
              {{ s|lower != 'none' and s|int(0) > 0 and timestamp|lower != 'null' and timestamp|int(0) > 0 and timestamp|int(0) == s|int(0) }}
        sequence:
          - alias: 'sensor timestamp unchanged; dismiss prior started notification'
            service: persistent_notification.dismiss
            data_template:
              notification_id: >-
                {{ 'addon-started-' + id|lower }}
          - choose:
            - conditions:
                - condition: template
                  value_template: >
                    {{ states('input_select.motion_log_level') in ['debug'] }}
              sequence:
                - variables:
                    when: >-
                      {{ state_attr(sensor,'timestamp')|int(none)|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
                - service: persistent_notification.create
                  data_template:
                    title: >-
                      DEBUG: Add-on running
                    notification_id: >-
                      {{ 'addon-running-' + id|lower }}
                    message: >-
                      Add-on {{ id }} is running; started {{ when -}}.
    - alias: 'sensor state unknown or timestamp gt existing'
      condition: template
      value_template: >
        {% set s = state_attr(sensor,'timestamp') %}
        {{ states(sensor)|lower == 'unknown' 
           or (s|lower != 'none' and s|int(0) > 0 and timestamp|lower != 'null' and timestamp|int(0) > 0 and timestamp|int(0) > s|int(0)) }}
    - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ states('input_select.motion_log_level') in ['debug','info','notice'] }}
        sequence:
          - variables:
              when: >-
                {{ timestamp|int|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
          - service: persistent_notification.create
            data_template:
              title: >-
                NOTICE: Add-on started
              notification_id: >-
                {{ 'addon-started-' + id|lower }}
              message: >-
                Add-on {{ id }} has started at {{ when -}}; ; IP: {{ ipaddr -}}; [{{- group -}},{{- device -}},{{- client -}}]
    - alias: 'set start state'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        group: >-
          {{ group }}
        device: >-
          {{ device }}
        client: >-
          {{ client }}
        ipaddr: >-
          {{ ipaddr }}
        timestamp: >-
          {{ timestamp }}
        config: >-
          {{ trigger.payload_json }}
        state: >-
          {{ group|lower != 'null' and device|lower != 'null' }}
    - alias: add to group
      service: group.set
      data_template:
        object_id: motion_addons
        name: 'All add-ons'
        add_entities: >-
          {{ sensor }}
