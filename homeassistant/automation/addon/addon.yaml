###
# homeassistant/automation/motion/addon.yaml
###

- id: motion_addon_config_update
  alias: motion_addon_config_update
  mode: single
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: '/5'
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sensor.motion_addon_config_api
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ states('sensor.motion_addon_config_api')|lower != 'none' }}
      - condition: template
        value_template: >-
          {% if trigger.platform == 'time_pattern' %}
            {% set s = state_attr('sensor.motion_addon_config','timestamp') -%}
            {{ s|lower == 'none' or utcnow().timestamp() - s|as_timestamp > states('input_number.motion_addon_status_ago')|int(0) }}
          {% else %}true{% endif %}
  action:
    - alias: 'update sensor.motion_addon_config'
      service: homeassistant.update_entity
      entity_id: sensor.motion_addon_config
    - alias: 'update sensor.motion_addon_storage'
      service: homeassistant.update_entity
      entity_id: sensor.motion_addon_storage

- id: motion_addon_status_update
  alias: motion_addon_status_update
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_addon_status
      to: 'off'
    - platform: time_pattern
      minutes: '/5'
    - platform: state
      entity_id: sensor.motion_addon_status_api
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ states('sensor.motion_addon_status_api')|lower != 'none' }}
      - condition: template
        value_template: >-
          {% if trigger.platform == 'time_pattern' %}
            {% set s = state_attr('sensor.motion_addon_status','timestamp') -%}
            {{ s|lower == 'none' or utcnow().timestamp() - s|as_timestamp > states('input_number.motion_addon_status_ago')|int(0) }}
          {% else %}true{% endif %}
  action:
    - alias: 'update sensor.motion_addon_status'
      service: homeassistant.update_entity
      entity_id: sensor.motion_addon_status

- id: motion_addon_restart
  alias: motion_addon_restart
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ state_attr('binary_sensor.motion_addon_update','id')|lower != 'none' }}
  action:
    - alias: 'restart motion_addon'
      service: hassio.addon_restart
      data:
        addon: >-
          {{ state_attr('binary_sensor.motion_addon_update','id') }}

- id: motion_addon_update
  alias: motion_addon_update
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ state_attr('binary_sensor.motion_addon_update','id')|lower != 'none' }}
  action:
    - alias: 'update motion_addon'
      service: hassio.addon_update
      data:
        addon: >-
          {{ state_attr('binary_sensor.motion_addon_update','id') }}

- id: motion_addon_update_template
  alias: motion_addon_update_template
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: 'states.update'
  variables:
    addons: >-
      {% set addons = state_attr('binary_sensor.motion_addon_update','addons') -%}
      {{- addons }}
    addon: >-
      {% set s = addons -%}
      {%- if s|lower != 'none' -%}
        {%- set addons = s -%}
        {%- for i in addons if state_attr('update.' + i + '_update','installed_version')|lower != 'none' -%}
          {%- set t = state_attr('update.' + i + '_update','installed_version') -%}
          {%- if loop.first -%}{{ i }}{%- endif -%}
        {%- endfor -%}
      {%- else -%}none{%- endif %}
    id: >-
      {% set s = addon -%}
      {%- if s|lower != 'none' -%}
        {%- set s = state_attr('update.' + s + '_update','entity_picture') -%}
        {%- if s|lower == 'none' -%}
          {%- set s = state_attr('update.motion_classic_update','entity_picture') -%}
        {%- endif -%}
        {%- if s|lower != 'none' -%}
          {%- set s = s|replace('/icon','')|regex_replace('.*/','') -%}
          {{ s }}
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif %}
    update: >-
      {% set s = addon -%}
      {%- if s|lower != 'none' -%}
        {{ states.update[s + '_update'].attributes }}
      {%- else -%}none{%- endif %}
    title: >-
      {% set s = update -%}
      {%- if s|lower != 'none' -%}
        {{ s.title }}
      {%- else -%}none{%- endif %}
    version: >-
      {% set s = update -%}
      {%- if s|lower != 'none' -%}
        {{ s.installed_version }}
      {%- else -%}none{%- endif %}
    latest: >-
      {% set s = update -%}
      {%- if s|lower != 'none' -%}
        {{ s.latest_version }}
      {%- else -%}none{%- endif %}
    state: >-
      {% set s = addon -%}
      {%- if s|lower != 'none' -%}
        {% set s = states('update.' + s + '_update') -%}
        {%- if s|lower != 'none' and s|lower != 'null' and s|lower != 'unavailable' -%}
          {{- s -}}
        {%- else -%}unknown{%- endif %}
      {%- else -%}unknown{%- endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ addon|lower != 'none' }}
  action:
    - alias: 'update binary_sensor.motion_addon_update'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_addon_update
        addon: >-
          {{ addon }}
        id: >-
          {{ id }}
        update: >-
          {{ update }}
        title: >-
          {{ title }}
        version: >-
          {{ version }}
        latest: >-
          {{ latest }}
        state: >-
          {{ state }}
