###
## homeassistant/automation/motion/camera.yaml
###

- id: motion_cameras_automation_enable
  alias: motion_cameras_automation_enable
  initial_state: on
  trigger:
    platform: state
    entity_id: group.motion_cameras
    attribute: 'entity_id'
  variables:
    automations: >-
      {% set automations = ['motion_cameras_update_all','motion_cameras_update_each','motion_person_detected_cameras','motion_person_detected_confidence_quartiles','motion_person_detected_confidence_state','motion_person_detected_level','motion_person_detected_off','motion_person_detected_on','motion_person_detected_previous','motion_person_detected_probability_quartiles','motion_person_detected_probability_state','motion_person_detected_probability_threshold','motion_person_detected_rank','motion_person_detected_status','motion_person_detected_unknown_notify'] %}
      {{ automations }}
  condition:
    - condition: template
      value_template: >-
        {% set s = state_attr('group.motion_cameras','entity_id') %}
        {{ s|lower != 'none' and not s is string and s is iterable and s|count > 0 }}
  action:
    - alias: 'enable automations for cameras'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = automations[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = automations[repeat.index-1] %}
                {{ 'automation.' + s|string }}
          - condition: template
            value_template: >-
              {{ states(automation)|lower == 'off' }}
          - alias: 'enable automation'
            service: automation.turn_on
            data_template:
              entity_id: >-
                {{ automation }}

- id: motion_cameras_automation_disable
  alias: motion_cameras_automation_disable
  initial_state: on
  trigger:
    platform: state
    entity_id: group.motion_cameras
    attribute: 'entity_id'
  variables:
    automations: >-
      {% set automations = ['motion_cameras_update_all','motion_cameras_update_each','motion_person_detected_cameras','motion_person_detected_confidence_quartiles','motion_person_detected_confidence_state','motion_person_detected_level','motion_person_detected_off','motion_person_detected_on','motion_person_detected_previous','motion_person_detected_probability_quartiles','motion_person_detected_probability_state','motion_person_detected_probability_threshold','motion_person_detected_rank','motion_person_detected_status','motion_person_detected_unknown_notify'] %}
      {{ automations }}
  condition:
    - condition: template
      value_template: >-
        {% set s = state_attr('group.motion_cameras','entity_id') %}
        {{ s|lower == 'none' or s is string or not s is iterable or not s|count > 0 }}
  action:
    - alias: 'disable automations for cameras'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = automations[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = automations[repeat.index-1] %}
                {{ 'automation.' + s|string }}
          - condition: template
            value_template: >-
              {{ states(automation)|lower == 'on' }}
          - alias: 'disable automation'
            service: automation.turn_off
            data_template:
              entity_id: >-
                {{ automation }}

###
## autoselect current camera when detected_entity
###

- id: motion_camera_autoselect
  alias: motion_camera_autoselect
  initial_state: on
  trigger:
    platform: state
    entity_id: counter.motion_annotated_counter
  condition:
    - condition: template
      value_template: >-
        {% set e = state_attr('sensor.motion_event_annotated','event') %}
        {% if e is mapping %}
          {% set c = e.camera %}
          {% if c is defined and c|lower != 'none' and c|lower != 'unavailable' and c|lower != 'unknown' and c|length > 0 %}
            {% set c = c|lower %}
            {{- is_state('input_boolean.motion_camera_autoselect','on')
              and ( is_state('input_select.motion_camera_name','latest') or is_state('input_select.motion_camera_name',c) )
              and is_state('input_select.motion_camera_name_options','annotated') -}}
          {% else %}false{% endif %}
        {% else %}false{% endif %}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: sensor.motion_camera_name_selected
        state: >-
          {% set e = state_attr('sensor.motion_event_annotated','event') %}
          {% set c = e.camera %}
          {{ c }}

###
## update input_select.motion_camera_name options
###

## update options for sensor.motion_status_camera_found

- id: motion_status_camera_found_set_options
  alias: motion_status_camera_found_set_options
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_found
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_status_camera_found')|lower == 'true' }}
      - condition: template
        value_template: >-
          {{ state_attr('sensor.motion_status_camera_found','camera') not in state_attr('input_select.motion_camera_name','options') }}
  action:
    - service: python_script.input_select_set_options
      data_template:
        entity_id: input_select.motion_camera_name
        options: >-
          {%- set prior = state_attr('input_select.motion_camera_name','options') -%}
          {%- if prior|lower != 'none' and prior|lower != 'unknown' and prior|lower != 'unavailable' and prior|lower != 'null' and prior|length > 0 -%}
            {%- for p in prior -%}
              {%- if loop.first -%}{%- else -%},{% endif -%}
              {{- p -}}
            {%- endfor -%}
          {%- else -%}
            {%- set prior = 'null' -%}
          {%- endif -%}
          {%- set c = state_attr('sensor.motion_status_camera_found','camera') -%}
          {%- if c|lower != 'none' and c|lower != 'unavailable' and c|lower != 'null' and c|length > 0 -%}
            {%- if prior != 'null' -%},{%- endif -%}
            {{- c -}}
          {%- endif -%}

## start

# {
#   "camera": "mangate",
#   "device": "agx1",
#   "event": "238",
#   "group": "motion",
#   "start": 1642357527,
#   "timestamp": {
#     "start": "2022-01-16T18:25:27Z"
#   }
# }

- id: motion_cameras_start
  alias: motion_cameras_start
  initial_state: on
  mode: queued
  max_exceeded: warn
  max: 1000
  trigger:
    - platform: mqtt
      topic: '+/+/+/event/start'
  variables:
    topic: >-
      {{ trigger.topic }}
    client: >-
      {{ topic|regex_replace('/event/start/[^/]*','')|regex_replace('[^/]*/','') }}
    event: >-
      {% if 'event' in trigger.payload_json %}
        {{ trigger.payload_json.event|default('null') }}
      {% else %}null{% endif %}
    group: >-
      {% if 'group' in trigger.payload_json %}
        {{ trigger.payload_json.group|default('null') }}
      {% else %}null{% endif %}
    device: >-
      {% if 'device' in trigger.payload_json %}
        {{ trigger.payload_json.device|default('null') }}
      {% else %}null{% endif %}
    id: >-
      {% if 'camera' in trigger.payload_json %}
        {{ trigger.payload_json.camera|default('null') }}
      {% else %}null{% endif %}
    timestamp: >-
      {% if 'timestamp' in trigger.payload_json %}
        {{ trigger.payload_json.timestamp|default('null') }}
      {% else %}null{% endif %}
    sensor: >-
      {% if id|lower != 'null' and id|lower != 'none' and id|lower|length > 0 %}
        {{ 'binary_sensor.motion_camera_' + id|lower + '_detected' }}
      {% else %}null{% endif %}
    config: >-
      {% set s = state_attr('binary_sensor.motion_cameras','cameras') %}
      {% if s|lower != 'none' and s is iterable and s|count > 0 %}
        {% set s = s|selectattr("name","==",id)|list %}
        {% if s|lower != 'none' and s is iterable and s|count > 0 %}
          {{ s|first }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
  action:
    - alias: 'sensor defined?'
      condition: template
      value_template: >-
        {{ sensor|lower != 'null' }}
    - alias: 'sensor on or off?'
      condition: template
      value_template: >-
        {% set s = states(sensor) %}
        {{ s|lower == 'on' or s|lower == 'off' }}
    - alias: 'config good or any?'
      condition: template
      value_template: >-
        {{ is_state('input_boolean.motion_status_camera_any','on') or config|lower != 'null' }}
    - alias: 'set start state'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        timestamp: >-
          {{ timestamp }}
        duration: >-
          {{ 'null'}}
        state: >-
          {{ states(sensor) }}

## end

# {
#   "camera": "ssinterior",
#   "date": 1642526040,
#   "device": "agx1",
#   "elapsed": 15,
#   "end": 1642526005,
#   "event": "782",
#   "group": "motion",
#   "id": "20220118091325-782",
#   "image": "<BASE64-JPEG:redacted>",
#   "images": [
#     {
#       "camera": "ssinterior",
#       "center": {
#         "x": 159,
#         "y": 369
#       },
#       "date": 1642526005,
#       "device": "agx1",
#       "event": "782",
#       "height": 90,
#       "id": "20220118091310-782-00",
#       "noise": 11,
#       "seqno": "20220118091310-782-00",
#       "size": 3326,
#       "timestamp": "2022-01-18T17:13:25Z",
#       "type": "jpeg",
#       "width": 98
#     }
#   ],
#   "mask": {
#     "event": "782",
#     "file": "/var/www/localhost/htdocs/cameras/ssinterior/20220118091309-782m.mp4",
#     "fps": 2,
#     "timestamp": "2022-01-18T17:13:25Z",
#     "type": 16
#   },
#   "movie": {
#     "event": "782",
#     "file": "/var/www/localhost/htdocs/cameras/ssinterior/20220118091309-782.mp4",
#     "fps": 2,
#     "timestamp": "2022-01-18T17:13:25Z",
#     "type": 8
#   },
#   "start": 1642525990,
#   "timestamp": {
#     "end": "2022-01-18T17:13:25Z",
#     "publish": "2022-01-18T17:13:36Z",
#     "start": "2022-01-18T17:13:10Z"
#   }
# }

- id: motion_cameras_end
  alias: motion_cameras_end
  initial_state: on
  mode: queued
  max_exceeded: warn
  max: 1000
  trigger:
    - platform: mqtt
      topic: '+/+/+/event/end'
  variables:
    topic: >-
      {{ trigger.topic }}
    client: >-
      {{ topic|regex_replace('/event/end/[^/]*','')|regex_replace('[^/]*/','') }}
    event: >-
      {% if 'event' in trigger.payload_json %}
        {{ trigger.payload_json.event|default('null') }}
      {% else %}null{% endif %}
    group: >-
      {% if 'group' in trigger.payload_json %}
        {{ trigger.payload_json.group|default('null') }}
      {% else %}null{% endif %}
    device: >-
      {% if 'device' in trigger.payload_json %}
        {{ trigger.payload_json.device|default('null') }}
      {% else %}null{% endif %}
    id: >-
      {% if 'camera' in trigger.payload_json %}
        {{ trigger.payload_json.camera|default('null') }}
      {% else %}null{% endif %}
    timestamp: >-
      {% if 'timestamp' in trigger.payload_json %}
        {{ trigger.payload_json.timestamp|default('null') }}
      {% else %}null{% endif %}
    duration: >-
      {% if timestamp|lower != 'null' and 'end' in timestamp and 'start' in timestamp %}
        {{ (timestamp.end|as_timestamp - timestamp.start|as_timestamp)|int(0) }}
      {% else %}null{% endif %}
    sensor: >-
      {% if id|lower != 'null' and id|lower != 'none' and id|lower|length > 0 %}
        {{ 'binary_sensor.motion_camera_' + id|lower + '_detected' }}
      {% else %}null{% endif %}
    config: >-
      {% set s = state_attr('binary_sensor.motion_cameras','cameras') %}
      {% if s|lower != 'none' and s is iterable and s|count > 0 %}
        {% set s = s|selectattr("name","==",id)|list %}
        {% if s|lower != 'none' and s is iterable and s|count > 0 %}
          {{ s|first }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
  action:
    - alias: 'sensor defined?'
      condition: template
      value_template: >-
        {{ sensor|lower != 'null' }}
    - alias: 'sensor on or off?'
      condition: template
      value_template: >-
        {% set s = states(sensor) %}
        {{ s|lower == 'on' or s|lower == 'off' }}
    - alias: 'config good or any?'
      condition: template
      value_template: >-
        {{ is_state('input_boolean.motion_status_camera_any','on') or config|lower != 'null' }}
    - alias: 'set end state'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        timestamp: >-
          {{ timestamp }}
        duration: >-
          {{ duration }}
        delay: >-
          {{ 'null' }}
        state: >-
          {{ states(sensor) }}

## annotated

# {
#   "camera": "+",
#   "client": "agx1",
#   "config": {
#     "scale": "640x480",
#     "threshold": "0.25"
#   },
#   "count": 2,
#   "date": 1642526338,
#   "debug": true,
#   "detected": [
#     {
#       "count": 1,
#       "entity": "bench"
#     },
#     {
#       "count": 1,
#       "entity": "car"
#     }
#   ],
#   "event": {
#     "camera": "dogshed",
#     "date": 1642526337,
#     "device": "agx1",
#     "elapsed": 14,
#     "end": 1642526326,
#     "event": "61",
#     "group": "motion",
#     "id": "20220118091846-61",
#     "image": "",
#     "images": [
#       {
#         "camera": "dogshed",
#         "center": {
#           "x": 190,
#           "y": 203
#         },
#         "date": 1642526326,
#         "device": "agx1",
#         "event": "61",
#         "height": 98,
#         "id": "20220118091831-61-01",
#         "noise": 14,
#         "seqno": "01",
#         "size": 5428,
#         "timestamp": "2022-01-18T17:18:47Z",
#         "type": "jpeg",
#         "width": 100
#       }
#     ],
#     "mask": {
#       "event": "61",
#       "file": "/var/www/localhost/htdocs/cameras/dogshed/20220118091830-61m.mp4",
#       "fps": 2,
#       "timestamp": "2022-01-18T17:18:46Z",
#       "type": 16
#     },
#     "movie": {
#       "event": "61",
#       "file": "/var/www/localhost/htdocs/cameras/dogshed/20220118091830-61.mp4",
#       "fps": 2,
#       "timestamp": "2022-01-18T17:18:46Z",
#       "type": 8
#     },
#     "start": 1642526312,
#     "timestamp": {
#       "end": "2022-01-18T17:18:47Z",
#       "publish": "2022-01-18T17:18:57Z",
#       "start": "2022-01-18T17:18:32Z"
#     }
#   },
#   "group": "motion",
#   "image": "",
#   "info": {
#     "bps": "8-bit",
#     "color": "sRGB",
#     "mock": "false",
#     "size": "640x480",
#     "type": "JPEG"
#   },
#   "log_level": "debug",
#   "mqtt": {
#     "host": "192.168.1.40",
#     "password": "password",
#     "port": 1883,
#     "username": "username"
#   },
#   "old": 500,
#   "payload": "image/end",
#   "results": [
#     {
#       "center": {
#         "x": 145,
#         "y": 232
#       },
#       "confidence": 31.146281957626343,
#       "entity": "car",
#       "height": 104,
#       "id": "0",
#       "width": 210
#     },
#     {
#       "center": {
#         "x": 553,
#         "y": 147
#       },
#       "confidence": 26.009950041770935,
#       "entity": "bench",
#       "height": 167,
#       "id": "1",
#       "width": 136
#     }
#   ],
#   "services": [
#     {
#       "name": "mqtt",
#       "url": "http://mqtt"
#     }
#   ],
#   "time": null,
#   "timestamp": "2022-01-18T17:18:58Z",
#   "topic": "motion/agx1/+",
#   "yolo": {
#     "config": "v2",
#     "darknet": {
#       "cfg": "/openyolo/darknet/cfg/yolov2.cfg",
#       "data": "/openyolo/darknet/cfg/coco.data",
#       "names": "/openyolo/darknet/data/coco.names",
#       "threshold": 0.25,
#       "weights": "/openyolo/darknet/yolov2.weights",
#       "weights_md5": "70d89ba2e180739a1c700a9ff238e354",
#       "weights_url": "https://www.dropbox.com/s/uz15x6xbudqyweg/yolov2.weights"
#     },
#     "date": 1642456650,
#     "debug": true,
#     "entity": "all",
#     "log_level": "debug",
#     "names": [ "person", "bicycle", "car", "motorbike", "aeroplane", "bus", "train", "truck", "boat", "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella", "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "sofa", "pottedplant", "bed", "diningtable", "toilet", "tvmonitor", "laptop", "mouse", "remote", "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors", "teddy bear", "hair drier", "toothbrush" ],
#     "period": 60,
#     "scale": "640x480",
#     "services": [
#       {
#         "name": "mqtt",
#         "url": "http://mqtt"
#       }
#     ],
#     "timestamp": "2022-01-17T21:57:30Z"
#   }
# }

- id: motion_cameras_detected
  alias: motion_cameras_detected
  initial_state: on
  mode: queued
  max_exceeded: warn
  max: 1000
  trigger:
    - platform: mqtt
      topic: '+/+/+/event/end/+'
  variables:
    topic: >-
      {{ trigger.topic }}
    device: >-
      {{ topic|regex_replace('/event/end/[^/]*','')|regex_replace('[^/]*/','') }}
    event: >-
      {% if 'event' in trigger.payload_json %}
        {{ trigger.payload_json.event|default('null') }}
      {% else %}null{% endif %}
    detected: >-
      {% if 'detected' in trigger.payload_json and trigger.payload_json is iterable and trigger.payload_json.detected|count > 0 %}
        {{ trigger.payload_json.detected|default('null') }}
      {% else %}null{% endif %}
    count: >-
      {% if 'count' in trigger.payload_json %}
        {{ trigger.payload_json.count|int(0) }}
      {% else %}null{% endif %}
    results: >-
      {% if 'results' in trigger.payload_json %}
        {{ trigger.payload_json.results|default('null') }}
      {% else %}null{% endif %}
    date: >-
      {% if 'date' in trigger.payload_json %}
        {{ trigger.payload_json.date|default(utcnow().timestamp()) }}
      {% else %}utcnow().timestamp(){% endif %}
    group: >-
      {% if event|lower != 'null' %}
        {{ event.group|default('null') }}
      {% else %}null{% endif %}
    client: >-
      {% if event|lower != 'null' %}
        {{ event.device|default('null') }}
      {% else %}null{% endif %}
    id: >-
      {% if event|lower != 'null' %}
        {{ event.camera|default('null') }}
      {% else %}null{% endif %}
    timestamp: >-
      {% if 'timestamp' in event %}
        {{ event.timestamp|default('null') }}
      {% else %}null{% endif %}
    delay: >-
      {% if timestamp|lower != 'null' and 'publish' in timestamp %}
        {{ (utcnow().timestamp() - timestamp.publish|as_timestamp)|int(0) }}
      {% else %}null{% endif %}
    sensor: >-
      {% if id|lower != 'null' and id|lower != 'none' and id|lower|length > 0 %}
        {{ 'binary_sensor.motion_camera_' + id|lower + '_detected' }}
      {% else %}null{% endif %}
    config: >-
      {% set s = state_attr('binary_sensor.motion_cameras','cameras') %}
      {% if s|lower != 'none' and s is iterable and s|count > 0 %}
        {% set s = s|selectattr("name","==",id)|list %}
        {% if s|lower != 'none' and s is iterable and s|count > 0 %}
          {{ s|first }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    animal: >-
      {% if event|lower != 'null' and results|lower != 'null' %}
        {% set option = states('input_select.motion_detect_animal') %}
        {% if option|lower == 'all' or option|lower == 'animal' %}
          {% set options = state_attr('input_select.motion_detect_animal','options') %}
          {% if options|lower != 'none' and options is iterable and options|count > 0 %}
            {% set l = results|selectattr('entity','in',options)|map(attribute='confidence')|list %}
            {% set c = results|selectattr('entity','in',options)|list|count %}
          {% endif %}
        {% else %}
          {% set l = results|selectattr('entity','==',option)|map(attribute='confidence')|list %}
          {% set c = results|selectattr('entity','==',option)|list|count %}
        {% endif %}
        {% if l is defined and l is iterable and l|length > 0 %}
          {% set p = l|list|max|int(0) %}
          {% if (is_state('binary_sensor.motion_detect_animal_confirmed','on') and p >= states('sensor.motion_detected_animal_threshold_confirmed')|int(0)) or
            (is_state('binary_sensor.motion_detect_animal_confirmed','off') and p >= states('sensor.motion_detected_animal_threshold')|int(0)) %}
            {% set t = date %}
          {% endif %}
        {% endif %}
        {% if t is defined %}
          [{{- t|float(0.0) -}},{{- c|int(0) -}}]
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    person: >-
      {% if event|lower != 'null' and results|lower != 'null' %}
        {% set option = states('input_select.motion_detect_person') %}
        {% if option|lower == 'all' or option|lower == 'person' %}
          {% set options = state_attr('input_select.motion_detect_person','options') %}
          {% if options|lower != 'none' and options is iterable and options|count > 0 %}
            {% set l = results|selectattr('entity','in',options)|map(attribute='confidence')|list %}
            {% set c = results|selectattr('entity','in',options)|list|count %}
          {% endif %}
        {% else %}
          {% set l = results|selectattr('entity','==',option)|map(attribute='confidence')|list %}
          {% set c = results|selectattr('entity','==',option)|list|count %}
        {% endif %}
        {% if l is defined and l is iterable and l|count > 0 %}
          {% set p = l|list|max|int(0) %}
          {% if (is_state('binary_sensor.motion_detect_person_confirmed','on') and p >= states('sensor.motion_detected_person_threshold_confirmed')|int(0)) or
            (is_state('binary_sensor.motion_detect_person_confirmed','off') and p >= states('sensor.motion_detected_person_threshold')|int(0)) %}
            {% set t = date %}
          {% endif %}
        {% endif %}
        {% if t is defined %}
          [{{- t|float(0.0) -}},{{- c|int(0) -}}]
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    vehicle: >-
      {% if event|lower != 'null' and results|lower != 'null' %}
        {% set option = states('input_select.motion_detect_vehicle') %}
        {% if option|lower == 'all' or option|lower == 'vehicle' %}
          {% set options = state_attr('input_select.motion_detect_vehicle','options') %}
          {% if options|lower != 'none' and options is iterable and options|count > 0 %}
            {% set l = results|selectattr('entity','in',options)|map(attribute='confidence')|list %}
            {% set c = results|selectattr('entity','in',options)|list|count %}
          {% endif %}
        {% else %}
          {% set l = results|selectattr('entity','==',option)|map(attribute='confidence')|list %}
          {% set c = results|selectattr('entity','==',option)|list|count %}
        {% endif %}
        {% if l is defined and l is iterable and l|length > 0 %}
          {% set p = l|list|max|int(0) %}
          {% if (is_state('binary_sensor.motion_detect_vehicle_confirmed','on') and p >= states('sensor.motion_detected_vehicle_threshold_confirmed')|int(0)) or
            (is_state('binary_sensor.motion_detect_vehicle_confirmed','off') and p >= states('sensor.motion_detected_vehicle_threshold')|int(0)) %}
            {% set t = date %}
          {% endif %}
        {% endif %}
        {% if t is defined %}
          [{{- t|float(0.0) -}},{{- c|int(0) -}}]
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    entity: >-
      {% if event|lower != 'null' and results|lower != 'null' %}
        {% set option = states('input_select.motion_detect_entity') %}
        {% if option|lower == 'all' or option|lower == 'entity' %}
          {% set options = state_attr('input_select.motion_detect_entity','options') %}
          {% if options|lower != 'none' and options is iterable and options|count > 0 %}
            {% set l = results|selectattr('entity','in',options)|map(attribute='confidence')|list %}
            {% set c = results|selectattr('entity','in',options)|list|count %}
          {% endif %}
        {% else %}
          {% set l = results|selectattr('entity','==',option)|map(attribute='confidence')|list %}
          {% set c = results|selectattr('entity','==',option)|list|count %}
        {% endif %}
        {% if l is defined and l is iterable and l|length > 0 %}
          {% set p = l|list|max|int(0) %}
          {% if (is_state('binary_sensor.motion_detect_entity_confirmed','on') and p >= states('sensor.motion_detected_entity_threshold_confirmed')|int(0)) or
            (is_state('binary_sensor.motion_detect_entity_confirmed','off') and p >= states('sensor.motion_detected_entity_threshold')|int(0)) %}
            {% set t = date %}
          {% endif %}
        {% endif %}
        {% if t is defined %}
          [{{- t|float(0.0) -}},{{- c|int(0) -}}]
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    w3w: >-
      {%- set s = config.w3w|default('none') -%}
      {%- if s|lower != 'none' and s is iterable and s|count == 3 -%}
        {{ s }}
      {%- else -%}null{%- endif %}
    url: >-
      {%- set s = config.mjpeg_url|default('none') -%}
      {%- if s|lower != 'none' and s is string and s|length > 0 -%}
        {{ s }}
      {%- else -%}null{%- endif %}
    username: >-
      {%- set s = config.username|default('none') -%}
      {%- if s|lower != 'none' and s is string -%}
        {{ s }}
      {%- else -%}null{%- endif %}
    password: >-
      {%- set s = config.password|default('none') -%}
      {%- if s|lower != 'none' and s is string -%}
        {{ s }}
      {%- else -%}null{%- endif %}
  action:
    - alias: 'sensor good?'
      condition: and
      conditions:
        condition: template
        value_template: >-
          {{ sensor|lower != 'null' }}
    - alias: 'group good?'
      condition: and
      conditions:
        condition: template
        value_template: >-
         {{ group == states('input_text.motion_group') or states('input_text.motion_group') == '+' }}
    - alias: 'client good?'
      condition: and
      conditions:
        condition: template
        value_template: >-
          {{ client == states('input_text.motion_client') or states('input_text.motion_client') == '+' }}
    - alias: 'config good?'
      condition: and
      conditions:
        condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_status_camera_any','on') or config|lower != 'null' }}
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {% set a = state_attr(sensor,'latitude') %}
                {% set b = state_attr(sensor,'longitude') %}
                {{ a|lower == 'none' or a|lower == 'null' or b|lower == 'none' or b|lower == 'null' }}
          sequence:
            - service: python_script.set_state
              data_template:
                allow_create: true
                entity_id: >-
                  {{ 'sensor.motion_cameras_webcam' }}
                state: >-
                  {{ id }}
            - alias: 'UPDATE: sensor.motion_webcams_camera'
              service: homeassistant.update_entity
              entity_id: sensor.motion_webcams_camera
    - alias: 'set latitude and longitude variables'
      variables:
        response: >-
          {% set s = state_attr(sensor,'response') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
            {{ s }}
          {% else %}
            {% set s = states('sensor.motion_webcams_camera') %}
            {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
              {% set s = s|from_json %}
              {% if s.name|string == id %}
                {% set s = s.response %}
                {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
                  {{ s }}
                {% else %}null{% endif %}
              {% else %}null{% endif %}
            {% else %}null{% endif %}
          {% endif %}
        latitude: >-
          {% set s = state_attr(sensor,'latitude') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
            {{ s|float(0.0) }}
          {% else %}
            {% set s = states('sensor.motion_webcams_camera') %}
            {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
              {% set s = s|from_json %}
              {% if s.name|string == id %}
                {% set s = s.latitude %}
                {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
                  {{ s|float(0.0) }}
                {% else %}null{% endif %}
              {% else %}null{% endif %}
            {% else %}null{% endif %}
          {% endif %}
        longitude: >-
          {% set s = state_attr(sensor,'longitude') %}
          {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
            {{ s|float(0.0) }}
          {% else %}
            {% set s = states('sensor.motion_webcams_camera') %}
            {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
              {% set s = s|from_json %}
              {% if s.name|string == id %}
                {% set s = s.longitude %}
                {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
                  {{ s|float(0.0) }}
                {% else %}null{% endif %}
              {% else %}null{% endif %}
            {% else %}null{% endif %}
          {% endif %}
    - choose:
        - alias: 'condition: anything detected?'
          conditions:
            - condition: template
              value_template: >
                {{ detected|lower != 'null' }}
          sequence:
            - variables:
                prior: >-
                  {% set s = state_attr('binary_sensor.motion_cameras_detected','sensor') %}
                  {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
                    {{ s }}
                  {% else %}null{% endif %}
                movement: >-
                  {% if prior.latitude|default('null')|lower != 'null' and prior.longitude|default('null')|lower != 'null'
                    and latitude|lower != 'null' and longitude|lower != 'null' %}
                    {% set s = distance(latitude,longitude,prior) %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 and s|float(0.0) < 45000 %}
                      {% set s = s|float(0.0) * 1000.0 %}
                    {% endif %}
                  {% endif %}
                  {% if s is defined and s is number and s > 0 %}
                    {{ s }}
                  {% else %}
                    {% set s = state_attr(sensor,'gps_accuracy') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {% set s = s|int(0) %}
                    {% else %}
                      {% set s = states('input_number.motion_gps_accuracy_default')|int(0) %}
                    {% endif %}
                    {{ range(0,s)|random|float(0.0) }}
                  {% endif %}
                interval: >-
                  {% if prior|lower != 'null' %}
                    {% set s = state_attr(prior, 'date') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {{ date|float(0.0) - s|float(0.0) }}
                    {% else %}null{% endif %}
                  {% else %}null{% endif %}
                velocity: >-
                  {% if interval|lower != 'null' and interval|float(0.0) > 0.0 %}
                    {{ movement / interval }}
                  {% else %}null{% endif %}
            - alias: 'set binary_sensor.motion_cameras_detected'
              service: python_script.set_state
              data_template:
                allow_create: true
                entity_id: >-
                  {{ 'binary_sensor.motion_cameras_detected' }}
                sensor: >-
                  {{ sensor }}
                count: >-
                  {{ count }}
                prior: >-
                  {{ prior }}
                movement: >-
                  {{ movement }}
                interval: >-
                  {{ interval }}
                velocity: >-
                  {{ velocity }}
                date: >-
                  {{ date }}
                id: >-
                  {{ id }}
                detected: >-
                  {{ detected }}
                latitude: >-
                  {{ latitude }}
                longitude: >-
                  {{ longitude }}
                gps_accuracy: >-
                  {{ state_attr(sensor,'gps_accuracy')|int(0) }}
                state: >-
                  {{ 'on' }}
    - choose:
        - alias: 'condition: entity detected?'
          conditions:
            - condition: template
              value_template: >
                {{ entity|lower != 'null' }}
          sequence:
            - variables:
                count: >-
                  {% if results|lower != 'null' %}
                    {% set option = states('input_select.motion_detect_animal') %}
                    {% if option|lower == 'all' or option|lower == 'animal' %}
                      {% set options = state_attr('input_select.motion_detect_animal','options') %}
                      {% if options|lower != 'none' and options is iterable and options|count > 0 %}
                        {{ results|selectattr('entity','in',options)|list|count }}
                      {% endif %}
                    {% else %}
                      {{ results|selectattr('entity','==',option)|list|count }}
                    {% endif %}
                  {% else %}null{% endif %}
                prior: >-
                  {% set s = state_attr('binary_sensor.motion_cameras_detected_entity','sensor') %}
                  {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
                    {{ s }}
                  {% else %}null{% endif %}
                movement: >-
                  {% if prior.latitude|default('null')|lower != 'null' and prior.longitude|default('null')|lower != 'null'
                    and latitude|lower != 'null' and longitude|lower != 'null' %}
                    {% set s = distance(latitude,longitude,prior) %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 and s|float(0.0) < 45000 %}
                      {% set s = s|float(0.0) * 1000.0 %}
                    {% endif %}
                  {% endif %}
                  {% if s is defined and s is number and s > 0 %}
                    {{ s }}
                  {% else %}
                    {% set s = state_attr(sensor,'gps_accuracy') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {% set s = s|int(0) %}
                    {% else %}
                      {% set s = states('input_number.motion_gps_accuracy_default')|int(0) %}
                    {% endif %}
                    {{ range(0,s)|random|float(0.0) }}
                  {% endif %}
                interval: >-
                  {% if prior|lower != 'null' %}
                    {% set s = state_attr(prior, 'date') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {{ date|float(0.0) - s|float(0.0) }}
                    {% else %}null{% endif %}
                  {% else %}null{% endif %}
                velocity: >-
                  {% if interval|lower != 'null' and interval|float(0.0) > 0.0 %}
                    {{ movement / interval }}
                  {% else %}null{% endif %}
            - alias: 'set binary_sensor.motion_cameras_detected_entity'
              service: python_script.set_state
              data_template:
                allow_create: true
                entity_id: >-
                  {{ 'binary_sensor.motion_cameras_detected_entity' }}
                sensor: >-
                  {{ sensor }}
                count: >-
                  {{ count }}
                prior: >-
                  {{ prior }}
                confidence: >-
                  {{ entity|last }}
                movement: >-
                  {{ movement }}
                interval: >-
                  {{ interval }}
                velocity: >-
                  {{ velocity }}
                date: >-
                  {{ date }}
                id: >-
                  {{ id }}
                latitude: >-
                  {{ latitude }}
                longitude: >-
                  {{ longitude }}
                gps_accuracy: >-
                  {{ state_attr(sensor,'gps_accuracy')|int(0) }}
                state: >-
                  {{ 'on' }}
    - choose:
        - alias: 'condition: animal detected?'
          conditions:
            - condition: template
              value_template: >
                {{ animal|lower != 'null' }}
          sequence:
            - variables:
                count: >-
                  {% if results|lower != 'null' %}
                    {% set option = states('input_select.motion_detect_animal') %}
                    {% if option|lower == 'all' or option|lower == 'animal' %}
                      {% set options = state_attr('input_select.motion_detect_animal','options') %}
                      {% if options|lower != 'none' and options is iterable and options|count > 0 %}
                        {{ results|selectattr('entity','in',options)|list|count }}
                      {% endif %}
                    {% else %}
                      {{ results|selectattr('entity','==',option)|list|count }}
                    {% endif %}
                  {% else %}null{% endif %}
                prior: >-
                  {% set s = state_attr('binary_sensor.motion_cameras_detected_animal','sensor') %}
                  {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
                    {{ s }}
                  {% else %}null{% endif %}
                movement: >-
                  {% if prior.latitude|default('null')|lower != 'null' and prior.longitude|default('null')|lower != 'null'
                    and latitude|lower != 'null' and longitude|lower != 'null' %}
                    {% set s = distance(latitude,longitude,prior) %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 and s|float(0.0) < 45000 %}
                      {% set s = s|float(0.0) * 1000.0 %}
                    {% endif %}
                  {% endif %}
                  {% if s is defined and s is number and s > 0 %}
                    {{ s }}
                  {% else %}
                    {% set s = state_attr(sensor,'gps_accuracy') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {% set s = s|int(0) %}
                    {% else %}
                      {% set s = states('input_number.motion_gps_accuracy_default')|int(0) %}
                    {% endif %}
                    {{ range(0,s)|random|float(0.0) }}
                  {% endif %}
                interval: >-
                  {% if prior|lower != 'null' %}
                    {% set s = state_attr(prior, 'date') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {{ date|float(0.0) - s|float(0.0) }}
                    {% else %}null{% endif %}
                  {% else %}null{% endif %}
                velocity: >-
                  {% if interval|lower != 'null' and interval|float(0.0) > 0.0 %}
                    {{ movement / interval }}
                  {% else %}null{% endif %}
            - alias: 'set binary_sensor.motion_cameras_detected_animal'
              service: python_script.set_state
              data_template:
                allow_create: true
                entity_id: >-
                  {{ 'binary_sensor.motion_cameras_detected_animal' }}
                sensor: >-
                  {{ sensor }}
                count: >-
                  {{ count }}
                prior: >-
                  {{ prior }}
                confidence: >-
                  {{ animal|last }}
                movement: >-
                  {{ movement }}
                interval: >-
                  {{ interval }}
                velocity: >-
                  {{ velocity }}
                date: >-
                  {{ date }}
                id: >-
                  {{ id }}
                latitude: >-
                  {{ latitude }}
                longitude: >-
                  {{ longitude }}
                gps_accuracy: >-
                  {{ state_attr(sensor,'gps_accuracy')|int(0) }}
                state: >-
                  {{ 'on' }}
            - choose:
                - conditions:
                    - condition: template
                      value_template: >
                        {{ is_state('input_select.motion_log_level','debug') }}
                  sequence:
                    - service: persistent_notification.create
                      data_template:
                        title: >-
                          DEBUG: animal at {{ id }}
                        notification_id: >-
                          {{ 'detected-animal-at-' + id|string }}
                        message: >-
                          {{-
                            '[![]('
                            + '/local/images/motion/'
                            + id|string
                            + '/detected_animal'
                            + '.jpg?e='
                            + event.event|default(null)|string
                            + ')]('
                            + '/lovelace-experimental/'
                            + id|string
                            + ')'
                            + '<br>'
                          -}}
                          Detected animal; camera: {{ id -}}; count: {{ count -}}; interval: {{ interval -}}; movement: {{ movement -}}; velocity: {{ velocity }}
    - choose:
        - alias: 'condition: vehicle detected?'
          conditions:
            - condition: template
              value_template: >
                {{ vehicle|lower != 'null' }}
          sequence:
            - variables:
                count: >-
                  {% if results|lower != 'null' %}
                    {% set option = states('input_select.motion_detect_vehicle') %}
                    {% if option|lower == 'all' or option|lower == 'vehicle' %}
                      {% set options = state_attr('input_select.motion_detect_vehicle','options') %}
                      {% if options|lower != 'none' and options is iterable and options|count > 0 %}
                        {{ results|selectattr('entity','in',options)|list|count }}
                      {% endif %}
                    {% else %}
                      {{ results|selectattr('entity','==',option)|list|count }}
                    {% endif %}
                  {% else %}null{% endif %}
                prior: >-
                  {% set s = state_attr('binary_sensor.motion_cameras_detected_vehicle','sensor') %}
                  {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
                    {{ s }}
                  {% else %}null{% endif %}
                movement: >-
                  {% if prior.latitude|default('null')|lower != 'null' and prior.longitude|default('null')|lower != 'null'
                    and latitude|lower != 'null' and longitude|lower != 'null' %}
                    {% set s = distance(latitude,longitude,prior) %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 and s|float(0.0) < 45000 %}
                      {% set s = s|float(0.0) * 1000.0 %}
                    {% endif %}
                  {% endif %}
                  {% if s is defined and s is number and s > 0 %}
                    {{ s }}
                  {% else %}
                    {% set s = state_attr(sensor,'gps_accuracy') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {% set s = s|int(0) %}
                    {% else %}
                      {% set s = states('input_number.motion_gps_accuracy_default')|int(0) %}
                    {% endif %}
                    {{ range(0,s)|random|float(0.0) }}
                  {% endif %}
                interval: >-
                  {% if prior|lower != 'null' %}
                    {% set s = state_attr(prior, 'date') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {{ date|float(0.0) - s|float(0.0) }}
                    {% else %}null{% endif %}
                  {% else %}null{% endif %}
                velocity: >-
                  {% if interval|lower != 'null' and interval|float(0.0) > 0.0 %}
                    {{ movement / interval }}
                  {% else %}null{% endif %}
            - alias: 'set binary_sensor.motion_cameras_detected_vehicle'
              service: python_script.set_state
              data_template:
                allow_create: true
                entity_id: >-
                  {{ 'binary_sensor.motion_cameras_detected_vehicle' }}
                sensor: >-
                  {{ sensor }}
                count: >-
                  {{ count }}
                prior: >-
                  {{ prior }}
                confidence: >-
                  {{ vehicle|last }}
                movement: >-
                  {{ movement }}
                interval: >-
                  {{ interval }}
                velocity: >-
                  {{ velocity }}
                date: >-
                  {{ date }}
                id: >-
                  {{ id }}
                latitude: >-
                  {{ latitude }}
                longitude: >-
                  {{ longitude }}
                gps_accuracy: >-
                  {{ state_attr(sensor,'gps_accuracy')|int(0) }}
                state: >-
                  {{ 'on' }}
            - choose:
                - conditions:
                    - condition: template
                      value_template: >
                        {{ is_state('input_select.motion_log_level','debug') }}
                  sequence:
                    - service: persistent_notification.create
                      data_template:
                        title: >-
                          DEBUG: vehicle at {{ id }}
                        notification_id: >-
                          {{ 'detected-vehicle-at-' + id|string }}
                        message: >-
                          {{-
                            '[![]('
                            + '/local/images/motion/'
                            + id|string
                            + '/detected_vehicle'
                            + '.jpg?e='
                            + event.event|default(null)|string
                            + ')]('
                            + '/lovelace-experimental/'
                            + id|string
                            + ')'
                            + '<br>'
                          -}}
                          Detected vehicle; camera: {{ id -}}; count: {{ count -}}; interval: {{ interval -}}; movement: {{ movement -}}; velocity: {{ velocity }}
    - choose:
        - alias: 'condition: person detected?'
          conditions:
            - condition: template
              value_template: >
                {{ person|lower != 'null' }}
          sequence:
            - variables:
                count: >-
                  {% if results|lower != 'null' %}
                    {% set option = states('input_select.motion_detect_person') %}
                    {% if option|lower == 'all' or option|lower == 'person' %}
                      {% set options = state_attr('input_select.motion_detect_person','options') %}
                      {% if options|lower != 'none' and options is iterable and options|count > 0 %}
                        {{ results|selectattr('entity','in',options)|list|count }}
                      {% endif %}
                    {% else %}
                      {{ results|selectattr('entity','==',option)|list|count }}
                    {% endif %}
                  {% else %}null{% endif %}
                prior: >-
                  {% set s = state_attr('binary_sensor.motion_cameras_detected_person','sensor') %}
                  {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' %}
                    {{ s }}
                  {% else %}null{% endif %}
                movement: >-
                  {% if prior.latitude|default('null')|lower != 'null' and prior.longitude|default('null')|lower != 'null'
                    and latitude|lower != 'null' and longitude|lower != 'null' %}
                    {% set s = distance(latitude,longitude,prior) %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 and s|float(0.0) < 45000 %}
                      {% set s = s|float(0.0) * 1000.0 %}
                    {% endif %}
                  {% endif %}
                  {% if s is defined and s is number and s > 0 %}
                    {{ s }}
                  {% else %}
                    {% set s = state_attr(sensor,'gps_accuracy') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {% set s = s|int(0) %}
                    {% else %}
                      {% set s = states('input_number.motion_gps_accuracy_default')|int(0) %}
                    {% endif %}
                    {{ range(0,s)|random|float(0.0) }}
                  {% endif %}
                interval: >-
                  {% if prior|lower != 'null' %}
                    {% set s = state_attr(prior, 'date') %}
                    {% if s|float(0.0) is number and s|float(0.0) > 0.0 %}
                      {{ date|float(0.0) - s|float(0.0) }}
                    {% else %}null{% endif %}
                  {% else %}null{% endif %}
                velocity: >-
                  {% if interval|lower != 'null' and interval|float(0.0) > 0.0 %}
                    {{ movement / interval }}
                  {% else %}null{% endif %}
            - alias: 'set binary_sensor.motion_cameras_detected_person'
              service: python_script.set_state
              data_template:
                allow_create: true
                entity_id: >-
                  {{ 'binary_sensor.motion_cameras_detected_person' }}
                sensor: >-
                  {{ sensor }}
                count: >-
                  {{ count }}
                prior: >-
                  {{ prior }}
                confidence: >-
                  {{ person|last }}
                movement: >-
                  {{ movement }}
                interval: >-
                  {{ interval }}
                velocity: >-
                  {{ velocity }}
                date: >-
                  {{ date }}
                id: >-
                  {{ id }}
                latitude: >-
                  {{ latitude }}
                longitude: >-
                  {{ longitude }}
                gps_accuracy: >-
                  {{ state_attr(sensor,'gps_accuracy')|int(0) }}
                state: >-
                  {{ 'on' }}
            - choose:
                - conditions:
                    - condition: template
                      value_template: >
                        {{ is_state('input_select.motion_log_level','debug') }}
                  sequence:
                    - service: persistent_notification.create
                      data_template:
                        title: >-
                          DEBUG: person at {{ id }}
                        notification_id: >-
                          {{ 'detected-person-at-' + id|string }}
                        message: >-
                          {{-
                            '[![]('
                            + '/local/images/motion/'
                            + id|string
                            + '/detected_person'
                            + '.jpg?e='
                            + event.event|default(null)|string
                            + ')]('
                            + '/lovelace-experimental/'
                            + id|string
                            + ')'
                            + '<br>'
                          -}}
                          Detected person; camera: {{ id -}}; count: {{ count -}}; interval: {{ interval -}}; movement: {{ movement -}}; velocity: {{ velocity }}
    - alias: 'set binary_sensor.motion_camera_<camera>_detected'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        id: >-
          {{ id }}
        group: >-
          {{ group }}
        device: >-
          {{ device }}
        w3w: >-
          {{ w3w }}
        url: >-
          {{ url }}
        username: >-
          {{ username }}
        password: >-
          {{ password }}
        latitude: >-
          {{ latitude }}
        longitude: >-
          {{ longitude }}
        config: >-
          {{ config }}
        event: >-
          {{ event }}
        detected: >-
          {{ detected }}
        entity: >-
          {{ entity }}
        animal: >-
          {{ animal }}
        person: >-
          {{ person }}
        vehicle: >-
          {{ vehicle }}
        count: >-
          {{ count }}
        results: >-
          {{ results }}
        timestamp: >-
          {{ timestamp }}
        delay: >-
          {{ delay }}
        date: >-
          {{ date }}
        gps_accuracy: >-
          {{ states('input_number.motion_gps_accuracy_default')|int(0) }}
        state: >-
          {% if detected|lower != 'null' %}{{ 'on' }}{% else %}{{ 'off' }}{% endif %}
    - alias: 'update_all cameras'
      service: automation.trigger
      entity_id: automation.motion_cameras_update_all

- id: motion_cameras_update_each
  alias: motion_cameras_update_each
  mode: single
  initial_state: off
  trigger:
    - platform: time_pattern
      seconds: '/55'
  variables:
    sensors: >-
      [{% for eid in states.binary_sensor|map(attribute='entity_id')|list if 'motion_camera_' in eid  -%}
      {%- if not loop.first -%},{%- endif -%}
      "{{- eid -}}"
      {%- endfor %}]
  action:
    - alias: 'update each camera'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = sensors[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              sensor: >-
                {{ sensors[repeat.index-1] }}
              now: >-
                {{ utcnow().timestamp()|int(0)  }}
              date: >-
                {{ state_attr(sensor,'date') }}
              ago: >-
                {% if date|lower != 'none' and date|lower != 'null' %}
                  {{ now - date|int(0) }}
                {% else %}null{% endif %}
              animal: >-
                {% if now - state_attr(sensor,'animal')|first|int(0) <= states('input_number.motion_detected_animal_ago')|int(0) %}on{% else %}off{% endif %}
              entity: >-
                {% if now - state_attr(sensor,'entity')|first|int(0) <= states('input_number.motion_detected_entity_ago')|int(0) %}on{% else %}off{% endif %}
              person: >-
                {% if now - state_attr(sensor,'person')|first|int(0) <= states('input_number.motion_detected_person_ago')|int(0) %}on{% else %}off{% endif %}
              vehicle: >-
                {% if now - state_attr(sensor,'vehicle')|first|int(0) <= states('input_number.motion_detected_vehicle_ago')|int(0) %}on{% else %}off{% endif %}
              state: >-
                {% if is_state(sensor,'on') and ago|lower != 'null' and ago <= states('input_number.motion_detected_ago')|int(0) %}on{% else %}off{% endif %}
          - choose:
              - alias: 'condition: state changed?'
                conditions:
                  - condition: template
                    value_template: >
                      {{ state != states(sensor) }}
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: >
                              {{ is_state('input_select.motion_log_level','debug') }}
                        sequence:
                          - service: persistent_notification.create
                            data_template:
                              title: >-
                                DEBUG: Setting camera {{ state_attr(sensor,'id') }} to {{ state }}
                              notification_id: >
                                {{- 'detected-entity-update-' + sensor|string }}
                              message: >-
                                Setting entity sensor **{{- sensor -}}** to {{ state -}}; ago: {{ ago -}}; animal: {{ animal -}}; entity: {{ entity -}}; person: {{ person -}}; vehicle: {{ vehicle -}}
                  - alias: 'set binary_sensor.motion_<camera>_detected_entity'
                    service: python_script.set_state
                    data_template:
                      entity_id: >-
                        {{ sensor }}
                      state: >-
                        {{ state }}
    - alias: 'update_all cameras'
      service: automation.trigger
      entity_id: automation.motion_cameras_update_all

- id: motion_cameras_update_all
  alias: motion_cameras_update_all
  mode: single
  max_exceeded: warn
  initial_state: off
  trigger:
    - platform: time_pattern
      minutes: '/30'
  variables:
    now: >-
      {{ utcnow().timestamp() }}
    entities: >-
      [{% for eid in states.binary_sensor|map(attribute='entity_id')|list if 'motion_camera_' in eid  -%}
        {%- if not loop.first -%},{%- endif -%}
        "{{- eid -}}"
      {%- endfor %}]
    status: >-
      {% if entities|lower != 'none' and entities|lower != 'null' and entities|count > 0 %}
        [{% for eid in entities -%}
          {%- if not loop.first -%},{%- endif -%}
          {% if is_state(eid,'on') %}1{% else %}0{% endif %}
        {%- endfor %}]
      {%- else -%}null{%- endif -%}
    animals: >-
      {% if entities|lower != 'none' and entities|lower != 'null' and entities|count > 0 %}
      [{%- for eid in entities -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- set s = state_attr(eid,'animal') -%}
        {%- if s|lower != 'none' and s|lower != 'null' and s is iterable -%}
          {{ s|first|float(0.0)  }}
        {%- else -%}null{%- endif -%}
      {%- endfor -%}]
      {%- else -%}null{%- endif -%}
    entitys: >-
      {% if entities|lower != 'none' and entities|lower != 'null' and entities|count > 0 %}
      [{%- for eid in entities -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- set s = state_attr(eid,'entity') -%}
        {%- if s|lower != 'none' and s|lower != 'null' and s is iterable -%}
          {{ s|first|float(0.0)  }}
        {%- else -%}null{%- endif -%}
      {%- endfor -%}]
      {%- else -%}null{%- endif -%}
    persons: >-
      {% if entities|lower != 'none' and entities|lower != 'null' and entities|count > 0 %}
      [{%- for eid in entities -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- set s = state_attr(eid,'person') -%}
        {%- if s|lower != 'none' and s|lower != 'null' and s is iterable -%}
          {{ s|first|float(0.0)  }}
        {%- else -%}null{%- endif -%}
      {%- endfor -%}]
      {%- else -%}null{%- endif -%}
    vehicles: >-
      {% if entities|lower != 'none' and entities|lower != 'null' and entities|count > 0 %}
      [{%- for eid in entities -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- set s = state_attr(eid,'vehicle') -%}
        {%- if s|lower != 'none' and s|lower != 'null' and s is iterable -%}
          {{ s|first|float(0.0)  }}
        {%- else -%}null{%- endif -%}
      {%- endfor -%}]
      {%- else -%}null{%- endif -%}
    animal: >-
      {% set s = animals %}
      {%- if s|lower != 'nuil' %}
        {%- if s is string %}{% set s = s|from_json %}{% endif %}
        {%- set v = 'null' -%}{%- set s = s|select('number')|list -%}{%- if s|count > 0 -%}{%- set v = s|max -%}{%- endif -%}{{ v }}
      {%- else -%}null{%- endif -%}
    entity: >-
      {% set s = entitys %}
      {%- if s|lower != 'nuil' %}
        {%- if s is string %}{% set s = s|from_json %}{% endif %}
        {%- set v = 'null' -%}{%- set s = s|select('number')|list -%}{%- if s|count > 0 -%}{%- set v = s|max -%}{%- endif -%}{{ v }}
      {%- else -%}null{%- endif -%}
    person: >-
      {% set s = persons %}
      {%- if s|lower != 'nuil' %}
        {%- if s is string %}{% set s = s|from_json %}{% endif %}
        {%- set v = 'null' -%}{%- set s = s|select('number')|list -%}{%- if s|count > 0 -%}{%- set v = s|max -%}{%- endif -%}{{ v }}
      {%- else -%}null{%- endif -%}
    vehicle: >-
      {% set s = vehicles %}
      {%- if s|lower != 'nuil' %}
        {% if s is string %}{% set s = s|from_json %}{% endif %}
        {%- set v = 'null' -%}{%- set s = s|select('number')|list -%}{%- if s|count > 0 -%}{%- set v = s|max -%}{%- endif -%}{{ v }}
      {%- else -%}null{%- endif -%}
    state: >-
      {% if status|lower != 'null' %}
        {% set s = status %}
        {%- if s is string %}{% set s = s|from_json %}{% endif %}
        {% if s is iterable and s|count > 0 and s|select("number")|sum > 0 -%}on{% else %}off{% endif %}
      {%- else -%}null{%- endif -%}
  action:
    - alias: 'update binary_sensor.motion_cameras_detected'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ 'binary_sensor.motion_cameras_detected' }}
        animal: >-
          {{ animal }}
        entity: >-
          {{ entity }}
        person: >-
          {{ person }}
        vehicle: >-
          {{ vehicle }}
        timestamp: >-
          {{ utcnow().timestamp() }}
        state: >-
          {{ state }}
    - alias: 'update binary_sensor.motion_cameras_detected_entity'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ 'binary_sensor.motion_cameras_detected_entity' }}
        state: >-
          {% if utcnow().timestamp()|int(0) - entity|int(0) <= states('input_number.motion_detected_person_ago')|int(0) %}on{% else %}off{% endif %}
    - alias: 'update binary_sensor.motion_cameras_detected_animal'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ 'binary_sensor.motion_cameras_detected_animal' }}
        state: >-
          {% if utcnow().timestamp()|int(0) - animal|int(0) <= states('input_number.motion_detected_person_ago')|int(0) %}on{% else %}off{% endif %}
    - alias: 'update binary_sensor.motion_cameras_detected_person'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ 'binary_sensor.motion_cameras_detected_person' }}
        state: >-
          {% if utcnow().timestamp()|int(0) - person|int(0) <= states('input_number.motion_detected_person_ago')|int(0) %}on{% else %}off{% endif %}
    - alias: 'update binary_sensor.motion_cameras_detected_vehicle'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ 'binary_sensor.motion_cameras_detected_vehicle' }}
        state: >-
          {% if utcnow().timestamp()|int(0) - vehicle|int(0) <= states('input_number.motion_detected_person_ago')|int(0) %}on{% else %}off{% endif %}
    - alias: 'update group.motion_cameras'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: group.motion_cameras
        friendly_name: 'All cameras'
        entity_ids: >-
          {{ entities }}
        animals: >-
          {{ animals }}
        entitys: >-
          {{ entitys }}
        persons: >-
          {{ persons }}
        vehicles: >-
          {{ vehicles }}
        timestamp: >-
          {{ utcnow().timestamp() }}
        state: >-
          {{ state }}
