###
# homeassistant/automation/motion/shelly.yaml
###

- id: motion_shellies_settings_login_failure
  alias: motion_shellies_settings_login_failure
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_shellies_settings
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ states('sensor.motion_shellies_settings')|lower == 'false' }}
      - condition: template
        value_template: >-
          {% set s = state_attr('group.motion_shellies','sensor') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' }}
  action:
    - alias: 'update_entity: sensor.motion_shellies_settings_login'
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_settings_login
    - alias: 'wait for login settings to update'
      wait_for_trigger:
        - platform: state 
          entity_id: sensor.motion_shellies_settings_login
          to: 'True' 
      continue_on_timeout: true
      timeout:
        seconds: 5
    - alias: 'update_entity: sensor.motion_shellies_settings_timezone'
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_settings_timezone
    - alias: 'wait for timezone settings to update'
      wait_for_trigger:
        - platform: state 
          entity_id: sensor.motion_shellies_settings_timezone
          to: 'True' 
      continue_on_timeout: true
      timeout:
        seconds: 5
    - alias: 'update_entity: sensor.motion_shellies_settings'
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_settings

- id: motion_shellies_mqtt_publish_announce
  alias: motion_shellies_mqtt_publish_announce
  initial_state: on
  trigger:
    - platform: time_pattern
      hours: '/1'
    - platform: event
      event_type: homeassistant_start
    - platform: state
      entity_id: input_boolean.motion_shellies_publish
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_shellies_publish','on') }}
  action:
    - alias: 'mqtt.publish: shellies/command announce'
      service_template: mqtt.publish
      data_template:
        topic: >-
          {{- 'shellies/command' -}}
        payload_template: >-
          {{- 'announce' -}}
        qos: 2
        retain: false

- id: motion_shellies_mqtt_publish_update
  alias: motion_shellies_mqtt_publish_update
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: /45
    - platform: state
      entity_id: input_boolean.motion_shellies_publish_update
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_shellies_publish_update','on') }}
  action:
    - alias: 'mqtt.publish: shallies/command update'
      service_template: mqtt.publish
      data_template:
        topic: >-
          {{- 'shellies/command' -}}
        payload_template: >-
          {{- 'update' -}}
        qos: 2
        retain: false

# update shellies/+/light/0/energy int

- id: motion_shellies_mqtt_energy
  alias: motion_shellies_mqtt_energy
  initial_state: on
  mode: queued
  trigger:
    - platform: mqtt
      topic: 'shellies/+/+/+/energy'
  variables:
    topic: >-
      {{ trigger.topic }}
    energy: >-
      {{ trigger.payload_json|int }}
    id: >-
      {{ topic|regex_replace('shellies/','')|regex_replace('/[^/]*/[^/]*/energy','') }}
    timestamp: >-
      {{ utcnow().timestamp()|int }}
    mac: >-
      {% if id|lower != 'none' and id|lower != 'unavailable' and id|lower != 'unknown' and id|lower != 'null' and id|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'id') == id %}
              {% if loop.first %}{{ state_attr(i,'mac') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    state: >-
      {% if sensor|lower != 'null' %}
        {% set s = states(sensor) %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s }}
        {% else %}
          {% set s = state_attr(sensor,'status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% if 'ison' in s %}{% if s.ison|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'motion' in s %}{% if s.motion|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'flood' in s %}{% if s.flood|lower == 'true' %}on{% else %}off{% endif %}
            {% else %}none{% endif %}
          {% else %}unknown{% endif %}
        {% endif %}
      {% else %}unavailable{% endif %}
  action:
    - alias: 'condition: sensor defined?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ sensor|lower != 'null' }}
    - alias: 'condition: state defined?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ state|lower != 'null' }}
    - alias: 'set_state: binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        energy: >-
          {{ energy }}
        updated: >-
          {{ timestamp }}
        state: >-
          {{ state }}
    - alias: 'set_state: binary_sensor.motion_shellies_<type>'
      service: python_script.set_state
      data_template:
        entity_id: >-
          {{ 'binary_sensor.motion_shellies_' + type|string }}
        energy: >-
          {{ energy }}
        updated: >-
          {{ timestamp }}
        state: >-
          {{ state }}

# update shellies/+/light/0/power float

- id: motion_shellies_mqtt_power
  alias: motion_shellies_mqtt_power
  initial_state: on
  mode: queued
  trigger:
    - platform: mqtt
      topic: 'shellies/+/+/+/power'
  variables:
    topic: >-
      {{ trigger.topic }}
    power: >-
      {{ trigger.payload_json|float }}
    id: >-
      {{ topic|regex_replace('shellies/','')|regex_replace('/[^/]*/[^/]*/power','') }}
    timestamp: >-
      {{ utcnow().timestamp()|int }}
    mac: >-
      {% if id|lower != 'none' and id|lower != 'unavailable' and id|lower != 'unknown' and id|lower != 'null' and id|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'id') == id %}
              {% if loop.first %}{{ state_attr(i,'mac') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    state: >-
      {% if sensor|lower != 'null' %}
        {% set s = states(sensor) %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s }}
        {% else %}
          {% set s = state_attr(sensor,'status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% if 'ison' in s %}{% if s.ison|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'motion' in s %}{% if s.motion|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'flood' in s %}{% if s.flood|lower == 'true' %}on{% else %}off{% endif %}
            {% else %}none{% endif %}
          {% else %}unknown{% endif %}
        {% endif %}
      {% else %}unavailable{% endif %}
  action:
    - alias: 'condition: sensor defined?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ sensor|lower != 'null' }}
    - alias: 'set binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        power: >-
          {{ power }}
        updated: >-
          {{ timestamp }}
        state: >-
          {{ state }}

# update shellies/+/online true/false

- id: motion_shellies_mqtt_online
  alias: motion_shellies_mqtt_online
  initial_state: on
  mode: queued
  trigger:
    - platform: mqtt
      topic: 'shellies/+/online'
  variables:
    topic: >-
      {{ trigger.topic }}
    active: >-
      {{ trigger.payload_json|lower == 'true' }}
    id: >-
      {{ topic|replace('shellies/','')|replace('/online','') }}
    timestamp: >-
      {{ utcnow().timestamp()|int }}
    mac: >-
      {% if id|lower != 'none' and id|lower != 'unavailable' and id|lower != 'unknown' and id|lower != 'null' and id|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'id') == id %}
              {% if loop.first %}{{ state_attr(i,'mac') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    state: >-
      {% if sensor|lower != 'null' %}
        {% set s = states(sensor) %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s }}
        {% else %}
          {% set s = state_attr(sensor,'status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% if 'ison' in s %}{% if s.ison|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'motion' in s %}{% if s.motion|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'flood' in s %}{% if s.flood|lower == 'true' %}on{% else %}off{% endif %}
            {% else %}none{% endif %}
          {% else %}unknown{% endif %}
        {% endif %}
      {% else %}unavailable{% endif %}
  action:
    - alias: 'test sensor is not null'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ sensor|lower != 'null' }}
    - alias: 'set binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        active: >-
          {{ active }}
        updated: >-
          {{ timestamp }}
        state: >-
          {{ state }}

# flood

# shellies/bathroom-flood/sensor/temperature 73.85
# shellies/bathroom-flood/sensor/flood false
# shellies/bathroom-flood/sensor/battery 82
# shellies/bathroom-flood/sensor/error 0
# shellies/bathroom-flood/sensor/act_reasons ["button"]

- id: motion_shellies_mqtt_sensor
  alias: motion_shellies_mqtt_sensor
  initial_state: on
  mode: queued
  trigger:
    - platform: mqtt
      topic: 'shellies/+/sensor/+'
  variables:
    topic: >-
      {{ trigger.topic }}
    attr: >-
      {{ topic|regex_replace('shellies/[^/]*/sensor/','') }}
    val: >-
      {{ trigger.payload_json }}
    id: >-
      {{ topic|replace('shellies/','')|replace('sensor/','')|replace('/' + attr,'') }}
    timestamp: >-
      {{ utcnow().timestamp()|int }}
    mac: >-
      {% if id|lower != 'none' and id|lower != 'unavailable' and id|lower != 'unknown' and id|lower != 'null' and id|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'id') == id %}
              {% if loop.first %}{{ state_attr(i,'mac') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    model: >-
      {% if sensor|lower != 'null' %}
        {{ state_attr(sensor,'model') }}
      {% else %}null{% endif %}
    latitude: >-
      {% if sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'settings') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s.lat }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    longitude: >-
      {% if sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'settings') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s.lng }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    status: >-
      {% if sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'status') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% if s is string %}{% set s = s|from_json %}{% endif %}
          {% if attr in s %}
            {% set s = s|to_json %}
            {% set old = '"' + attr + '":[ ]*[^}^,]*' %}
            {% set new = '"' + attr + '": ' + val|to_json|string %}
            {% set s = s|regex_replace(old,new) %}
          {% else %}
            {% set s = s|to_json %}
            {% set old = '}' %}
            {% set new = ',"' + attr + '": ' + val|to_json|string + '}' %}
            {% set s = s|regex_replace(old,new) %}
          {% endif %}
          {% set old = '"timestamp":[ ]*[^}^,]*' %}
          {% set new = '"timestamp": ' + timestamp|int|string %}
          {% set p = s|regex_replace(old,new) %}
        {% endif %}
      {% endif %}
      {% if p is defined %}
        {{ p|from_json }}
      {% else %}
        {{- '{"' + attr + '":' + val|string + ',"timestamp":' + timestamp|int|string + '}' -}}
      {% endif %}
    state: >-
      {% if sensor|lower != 'null' %}
        {% set s = states(sensor) %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s }}
        {% else %}
          {% set s = state_attr(sensor,'status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% if 'ison' in s %}{% if s.ison|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'motion' in s %}{% if s.motion|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'flood' in s %}{% if s.flood|lower == 'true' %}on{% else %}off{% endif %}
            {% else %}none{% endif %}
          {% else %}unknown{% endif %}
        {% endif %}
      {% else %}unavailable{% endif %}
  action:
    - alias: 'condition: sensor defined?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ sensor|lower != 'null' }}
    - alias: 'condition: state defined?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ state|lower != 'null' }}
    - alias: 'set_state: binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        status: >-
          {% if not status is string %}{% set status = status|to_json|string %}{% endif %}
          {{ status }}
        updated: >-
          {{ timestamp }}
        state: >-
          {{ state }}

# motion and lightbulbs

- id: motion_shellies_mqtt_status
  alias: motion_shellies_mqtt_status
  initial_state: on
  mode: queued
  trigger:
    - platform: mqtt
      topic: 'shellies/+/light/0/status'
    - platform: mqtt
      topic: 'shellies/+/status'
  variables:
    topic: >-
      {{ trigger.topic }}
    status: >-
      {{ trigger.payload_json }}
    id: >-
      {{ topic|replace('shellies/','')|replace('/light/0','')|replace('/status','') }}
    active: >-
      {% if 'active' in status %}
        {{ status.active|lower == 'true' }}
      {% else %}true{% endif %}
    timestamp: >-
      {% if 'timestamp' in trigger.payload_json %}
        {% set s = trigger.payload_json.timestamp %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|int > 0 %}
          {{ s }}
        {% else %}
          {{ utcnow().timestamp()|int }}
        {% endif %}
      {% else %}
        {{ utcnow().timestamp()|int }}
      {% endif %}
    mac: >-
      {% if id|lower != 'none' and id|lower != 'unavailable' and id|lower != 'unknown' and id|lower != 'null' and id|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'id') == id %}
              {% if loop.first %}{{ state_attr(i,'mac') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null'
        and type|lower != 'none' and type|lower != 'unavailable' and type|lower != 'unknown' and type|lower != 'null' %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    model: >-
      {% if sensor|lower != 'none' and sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' %}
        {{ state_attr(sensor,'model') }}
      {% else %}null{% endif %}
    latitude: >-
      {% if sensor|lower != 'none' and sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'settings') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s.lat }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    longitude: >-
      {% if sensor|lower != 'none' and sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'settings') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s.lng }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    distance: >-
      {% set s = states('zone.home') %}
      {% if latitude|lower != 'null' and longitude|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
        {{ distance('zone.home',latitude,longitude) * 1000 }}
      {% else %}null{% endif %}
    gps: >-
      {% set s = states('zone.home') %}
      {% if latitude|lower != 'null' and longitude|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
        {% set s = state_attr('zone.home','radius') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|int > 0 %}
          {{ latitude|lower != 'null' and longitude|lower != 'null' and distance|int < s|int }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    state: >-
      {% if 'motion' in trigger.payload_json %}
        {% if trigger.payload_json.motion|lower == 'true' %}on{% else %}off{% endif %}
      {% elif 'ison' in trigger.payload_json %}
        {% if trigger.payload_json.ison|lower == 'true' %}on{% else %}off{% endif %}
      {% elif sensor|lower != 'null' %}
        {% set s = states(sensor) %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s }}
        {% else %}
          {% set s = state_attr(sensor,'status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% if 'ison' in s %}{% if s.ison|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'motion' in s %}{% if s.motion|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'flood' in s %}{% if s.flood|lower == 'true' %}on{% else %}off{% endif %}
            {% else %}none{% endif %}
          {% else %}unknown{% endif %}
        {% endif %}
      {% else %}unavailable{% endif %}
  action:
    - alias: 'choose: mac defined y/n'
      choose:
        - alias: 'condition: mac defined?'
          conditions:
            - condition: template
              value_template: >
                {{ mac|lower == 'unavailable' or mac|lower == 'unknown' or mac|lower == 'null' or mac|lower == 'none' or mac|length == 0 }}
          sequence:
            - alias: 'sequence: mqtt.publish: shellies/<id>/command announce'
              service: mqtt.publish
              data_template:
                topic: >-
                  {{ 'shellies/' + id|string + '/command' }}
                payload: 'announce'
    - alias: 'condition: mac good?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|lower != 'none' and mac|length > 0 }}
    - alias: 'condition: type good?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ type|lower != 'unavailable' and type|lower != 'unknown' and type|lower != 'null' and type|lower != 'none' and type|length > 0 }}
    - alias: 'condition: state good?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ state|lower != 'unavailable' and state|lower != 'unknown' and state|lower != 'null' and state|lower != 'none' }}
    - alias: 'set_state: binary_sensor.motion_shellies_<type>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ 'binary_sensor.motion_shellies_' + type|string }}
        id: >-
          {{ id }}
        model: >-
          {{ model }}
        type: >-
          {{ type }}
        mac: >-
          {{ mac }}
        timestamp: >-
          {{ timestamp }}
        state: >-
          {{ state }}
    - alias: 'set_state: binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        active: >-
          {{ active }}
        status: >-
          {{ status }}
        timestamp: >-
          {{ timestamp }}
        state: >-
          {{ state }}
    - alias: 'condition: state is on'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {{ state == 'on' }}
    - alias: 'condition: gps good?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ gps|lower == 'true' }}
    - alias: 'set_state: sensor.motion_shellies_<type>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ 'sensor.motion_shellies_' + type|string }}
        timestamp: >-
          {{ timestamp }}
        latitude: >-
          {{ latitude }}
        longitude: >-
          {{ longitude }}
        gps: >-
          {{ gps }}
        distance: >-
          {{ distance }}
        state: >-
          {{ id }}

# handle updates from REST API call to get settings from IP

- id: motion_shellies_settings_rest
  alias: motion_shellies_settings_rest
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - sensor.motion_shellies_settings
#        - sensor.motion_shellies_settings_mqtt
#        - sensor.motion_shellies_settings_occupancy_selected
#        - sensor.motion_shellies_settings_occupancy_selected_sensitivity
#        - binary_sensor.motion_shellies_settings_occupancy_selected_active
#        - binary_sensor.motion_shellies_settings_occupancy_selected_led
  variables:
    settings: >-
      {% set s = states(trigger.entity_id) %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {{ states.sensor.motion_shellies_settings.attributes }}
      {% else %}null{% endif %}
    latitude: >-
      {% set s = states(trigger.entity_id) %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {{ state_attr('sensor.motion_shellies_settings','lat')|float }}
      {% else %}null{% endif %}
    longitude: >-
      {% set s = states(trigger.entity_id) %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {{ state_attr('sensor.motion_shellies_settings','lng')|float }}
      {% else %}null{% endif %}
    distance: >-
      {% set s = states('zone.home') %}
      {% if latitude|lower != 'null' and longitude|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
        {{ distance('zone.home',latitude,longitude) * 1000 }}
      {% else %}null{% endif %}
    gps: >-
      {% set s = states('zone.home') %}
      {% if latitude|lower != 'null' and longitude|lower != 'null' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
        {% set s = state_attr('zone.home','radius') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|int > 0 %}
          {{ latitude|lower != 'null' and longitude|lower != 'null' and distance|int < s|int }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    mac: >-
      {% set s = states(trigger.entity_id) %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {% set s = state_attr('sensor.motion_shellies_settings','device') %}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {{ s.mac|lower }}
        {% else %}{{- 'unknown' -}}{% endif %}
      {% else %}{{- 'unknown' -}}{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null'
        and type|lower != 'none' and type|lower != 'unavailable' and type|lower != 'unknown' and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    id: >-
      {% if sensor|lower != 'none' and sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' %}
        {{ state_attr(sensor,'id') }}
      {% else %}null{% endif %}
    state: >-
      {% if sensor|lower != 'none' and sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' %}
        {% if is_state(sensor,'on') -%}on{% else %}off{% endif %}
      {% else %}null{% endif %}
    updated: >-
      {% set s = states(trigger.entity_id) %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {{ states.sensor.motion_shellies_settings.last_updated|as_timestamp|int }}
      {% else %}
        {{ utcnow().timestamp()|int }}
      {% endif %}
  action:
    - alias: 'sensor good?'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {{ sensor|lower != 'null' }}
    - alias: 'update binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        friendly_name: >-
          {{ type|capitalize + ' in ' + id }}
        entity_id: >-
          {{ sensor }}
        latitude: >-
          {{ latitude }}
        longitude: >-
          {{ longitude }}
        settings: >-
          {{ settings }}
        gps: >-
          {{ gps }}
        distance: >-
          {{ distance }}
        state: >-
          {{ state }}
    - alias: 'test gps is not good'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ gps|lower != 'true' }}
    - service: persistent_notification.create
      data_template:
        title: >
          Location setings; ID: {{ id -}}
        notification_id: >-
          {{ id + '_gps_settings_warning' }}
        message: >
          Location outside of home zone.  Device {{ id }}; type: {{ type }}; GPS: {{ latitude,longitude -}}; distance: {{ distance|int -}}m;

## update on REST sensor '<username>:<password>@<ip>/status'

- id: motion_shellies_update_rest
  alias: motion_shellies_update_rest
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id: sensor.motion_shellies_update
      to: 'True'
  variables:
    info: >-
      {% set s = states('sensor.motion_shellies_update') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {{ states.sensor.motion_shellies_update.attributes }}
      {% else %}null{% endif %}
    mac: >-
      {% set s = states('sensor.motion_shellies_update') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {% set s = state_attr('sensor.motion_shellies_update','mac') %}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {{ s|lower }}
        {% else %}{{- 'unknown' -}}{% endif %}
      {% else %}{{- 'unknown' -}}{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    id: >-
      {% if sensor|lower != 'none' and sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' %}
        {{ state_attr(sensor,'id') }}
      {% else %}null{% endif %}
    state: >-
      {% if sensor|lower != 'none' and sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' %}
        {% if is_state(sensor,'on') -%}on{% else %}off{% endif %}
      {% else %}null{% endif %}
    updated: >-
      {% set s = states('sensor.motion_shellies_update') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {% set s = state_attr('sensor.motion_shellies_update','unixtime') %}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|int > 0 -%}
          {{ s }}
        {% else %}
          {{ utcnow().timestamp()|int }}
        {% endif %}
      {% else %}
        {{ utcnow().timestamp()|int }}
      {% endif %}
  action:
    - alias: 'sensor good?'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {{ sensor|lower != 'null' }}
    - alias: 'update binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        info: >-
          {{ info }}
        updated: >-
          {{ updated }}
        state: >-
          {{ state }}

- id: motion_shellies_ota_rest
  alias: motion_shellies_ota_rest
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id: sensor.motion_shellies_ota
      to: 'True'
  variables:
    ota: >-
      {% set s = states('sensor.motion_shellies_ota') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {{ states.sensor.motion_shellies_ota.attributes }}
      {% else %}null{% endif %}
    ip: >-
      {% set s = states('group.motion_shellies') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {% set s = state_attr('group.motion_shellies','ip') %}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {{ s|lower }}
        {% else %}{{- 'unknown' -}}{% endif %}
      {% else %}{{- 'unknown' -}}{% endif %}
    mac: >-
      {% if ip|lower != 'none' and ip|lower != 'unavailable' and ip|lower != 'unknown' and ip|lower != 'null' and ip|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'ip') == ip %}
              {% if loop.first %}{{ state_attr(i,'mac') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    state: >-
      {% if sensor|lower != 'none' and sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' %}
        {% if is_state(sensor,'on') -%}on{% else %}off{% endif %}
      {% else %}null{% endif %}
    updated: >-
      {{ utcnow().timestamp()|int }}
  action:
    - alias: 'sensor good?'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {{ sensor|lower != 'null' }}
    - alias: 'update binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        ota: >-
          {{ info }}
        updated: >-
          {{ updated }}
        state: >-
          {{ state }}

##
## update on MQTT payload 'shellies/+/info'
##

# motion

# {
#   "bat": {
#     "value": 100,
#     "voltage": 4.171
#   },
#   "cfg_changed_cnt": 0,
#   "charger": true,
#   "cloud": {
#     "connected": false,
#     "enabled": false
#   },
#   "has_update": false,
#   "lux": {
#     "illumination": "bright",
#     "is_valid": true,
#     "value": 1027
#   },
#   "mac": "60A423D3F280",
#   "mqtt": {
#     "connected": true,
#     "enabled": true
#   },
#   "sensor": {
#     "active": true,
#     "is_valid": true,
#     "motion": false,
#     "timestamp": 1622451089,
#     "vibration": false
#   },
#   "serial": 212,
#   "time": "09:09",
#   "timestamp": -1815024272,
#   "unixtime": 1622452158,
#   "update": {
#     "beta_version": "",
#     "has_update": false,
#     "new_version": "20210226-072307/v1.1.0@f31e1d2b",
#     "old_version": "20210226-072307/v1.1.0@f31e1d2b",
#     "status": "idle"
#   },
#   "uptime": 75681,
#   "wifi_sta": {
#     "connected": true,
#     "ip": "192.168.1.210",
#     "rssi": -48,
#     "ssid": "CABIN"
#   }
# }

# bulb

# {
#   "actions_stats": {
#     "skipped": 0
#   },
#   "cfg_changed_cnt": 0,
#   "cloud": {
#     "connected": false,
#     "enabled": false
#   },
#   "fs_free": 163903,
#   "fs_size": 233681,
#   "has_update": false,
#   "lights": [
#     {
#       "brightness": 50,
#       "has_timer": false,
#       "ison": true,
#       "source": "http",
#       "timer_duration": 0,
#       "timer_remaining": 0,
#       "timer_started": 0
#     }
#   ],
#   "mac": "ECFABC6F7138",
#   "meters": [
#     {
#       "counters": [
#         1.5,
#         1.5,
#         1.5
#       ],
#       "is_valid": true,
#       "power": 1.5,
#       "timestamp": 1623443734,
#       "total": 199
#     }
#   ],
#   "mqtt": {
#     "connected": true
#   },
#   "ping_check": true,
#   "ram_free": 39576,
#   "ram_total": 50880,
#   "serial": 1,
#   "time": "20:35",
#   "unixtime": 1623443734,
#   "update": {
#     "has_update": false,
#     "new_version": "20210429-100039/v1.10.4-g3f94cd7",
#     "old_version": "20210429-100039/v1.10.4-g3f94cd7",
#     "status": "idle"
#   },
#   "uptime": 8538,
#   "wifi_sta": {
#     "connected": true,
#     "ip": "192.168.1.217",
#     "rssi": -52,
#     "ssid": "CABIN"
#   }
# }

# flood

# {
#   "act_reasons": [
#     "button"
#   ],
#   "actions_stats": {
#     "skipped": 0
#   },
#   "bat": {
#     "value": 91,
#     "voltage": 2.88
#   },
#   "cfg_changed_cnt": 0,
#   "cloud": {
#     "connected": false,
#     "enabled": false
#   },
#   "flood": false,
#   "fs_free": 148090,
#   "fs_size": 233681,
#   "has_update": false,
#   "is_valid": true,
#   "mac": "84CCA8B0AC23",
#   "mqtt": {
#     "connected": true
#   },
#   "rain_sensor": false,
#   "ram_free": 34072,
#   "ram_total": 51024,
#   "serial": 1,
#   "time": "16:10",
#   "tmp": {
#     "is_valid": true,
#     "tC": 20.38,
#     "tF": 68.68,
#     "units": "F",
#     "value": 68.68
#   },
#   "unixtime": 1624551016,
#   "update": {
#     "has_update": false,
#     "new_version": "20210413-155706/v1.10.2-gb89901a",
#     "old_version": "20210413-155706/v1.10.2-gb89901a",
#     "status": "idle"
#   },
#   "uptime": 135,
#   "wifi_sta": {
#     "connected": true,
#     "ip": "192.168.1.219",
#     "rssi": -42,
#     "ssid": "CABIN"
#   }
# }

# shellies_info

- id: motion_shellies_mqtt_info
  alias: motion_shellies_mqtt_info
  initial_state: on
  mode: queued
  trigger:
    - platform: mqtt
      topic: 'shellies/+/info'
  variables:
    topic: >-
      {{ trigger.topic }}
    id: >-
      {{ topic|replace('shellies/','')|replace('/info','') }}
    ip: >-
      {{ trigger.payload_json.wifi_sta.ip }}
    mac: >-
      {{ trigger.payload_json.mac|lower }}
    updated: >-
      {{ trigger.payload_json.unixtime }}
    info: >-
      {{ trigger.payload_json }}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
    state: >-
      {% if 'sensor' in info %}
        {% if info.sensor.motion|lower == 'true' %}on{% else %}off{% endif %}
      {% elif 'lights' in info %}
        {% if info.lights.ison|lower == 'true' %}on{% else %}off{% endif %}
      {% else %}null{% endif %}
  action:
#    - alias: 'test if sensor not defined'
#      choose:
#        - alias: 'sensor not defined; publish MQTT command to <id> for announce'
#          conditions:
#            - condition: template
#              value_template: >
#                {{ sensor|lower == 'null' }}
#          sequence:
#            - service: mqtt.publish
#              data_template:
#                topic: >-
#                  {{ 'shellies/' + id|string + '/command' }}
#                payload: 'announce'
    - alias: 'sensor good?'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {{ sensor|lower != 'null' }}
    - alias: 'update binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        info: >-
          {{ info }}
        updated: >-
          {{ updated }}
        state: >-
          {{ state }}

##
## update on MQTT payload 'shellies/+/announce'
##

# motion

# {
#   "fw_ver": "20210226-072307/v1.1.0@f31e1d2b",
#   "id": "shellymotionsensor-60A423D3F280",
#   "ip": "192.168.1.210",
#   "mac": "60A423D3F280",
#   "model": "SHMOS-01",
#   "new_fw": false
# }

# lightbulb

# {
#   "fw_ver": "20210429-100039/v1.10.4-g3f94cd7",
#   "id": "bulb-sconce-left",
#   "ip": "192.168.1.217",
#   "mac": "ECFABC6F7138",
#   "model": "SHVIN-1",
#   "new_fw": false
# }
#
# {
#   "fw_ver": "20210429-100125/v1.10.4-g3f94cd7",
#   "id": "light-nightstand-david",
#   "ip": "192.168.1.215",
#   "mac": "BCDDC26641D3",
#   "model": "SHBDUO-1",
#   "new_fw": false
# }

# flood

# {
#   "fw_ver": "20210413-155706/v1.10.2-gb89901a",
#   "id": "bathroom-flood",
#   "ip": "192.168.1.219",
#   "mac": "84CCA8B0AC23",
#   "model": "SHWT-1",
#   "new_fw": false
# }

- id: motion_shellies_mqtt_announce
  alias: motion_shellies_mqtt_announce
  initial_state: on
  mode: queued
  trigger:
    - platform: mqtt
      topic: 'shellies/+/announce'
  variables:
    topic: >-
      {{ trigger.topic }}
    id: >-
      {{ topic|replace('shellies/','')|replace('/announce','') }}
    ip: >-
      {{ trigger.payload_json.ip }}
    mac: >-
      {{ trigger.payload_json.mac|lower }}
    announce: >-
      {{ trigger.payload_json }}
    model: >-
      {{ trigger.payload_json.model|upper }}
    type: >-
      {% if model == 'SHMOS-01' %}
        {{ 'occupancy' }}
      {% elif model == 'SHBDUO-1' or model == 'SHVIN-1' %}
        {{ 'light' }}
      {% elif model == 'SHWT-1' %}
        {{ 'moisture' }}
      {% else %}null{% endif %}
    picture: >-
      {{ '/local/images/' + model|string + '.png' }}
    ids: >-
      {% set s = states('group.motion_shellies') %}
      [{%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {%- set prior = state_attr('group.motion_shellies','ids') -%}
        {%- if prior|lower != 'none' and prior|lower != 'unknown' and prior|lower != 'unavailable' and prior|lower != 'null' %}
          {% set prior = prior|string|from_json %}
          {%- if prior|lower != 'none' and prior|lower != 'unknown' and prior|lower != 'unavailable' and prior|lower != 'null' %}
            {% if prior is iterable %}
              {% if prior|length > 0 -%}
                {%- for p in prior if p|length > 0 -%}
                  {%- if loop.first -%}{%- else -%},{% endif -%}
                  "{{- p -}}"
                {%- endfor -%}
              {%- else -%}{%- set prior = null -%}{%- endif -%}
            {%- else -%}{%- set prior = null -%}{%- endif -%}
          {%- else -%}{%- set prior = null -%}{%- endif -%}
        {%- else -%}{%- set prior = null -%}{%- endif -%}
      {%- else -%}{%- set prior = null -%}{%- endif -%}
      {%- if prior != null -%},{%- endif -%}
      "{{- id -}}"]
    models: >-
      {% set s = states('group.motion_shellies') %}
      [{%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {%- set prior = state_attr('group.motion_shellies','models') -%}
        {%- if prior|lower != 'none' and prior|lower != 'unknown' and prior|lower != 'unavailable' and prior|lower != 'null' %}
          {% set prior = prior|string|from_json %}
          {%- if prior|lower != 'none' and prior|lower != 'unknown' and prior|lower != 'unavailable' and prior|lower != 'null' %}
            {% if prior is iterable %}
              {% if prior|length > 0 -%}
                {%- for p in prior if p|length > 0 -%}
                  {%- if loop.first -%}{%- else -%},{% endif -%}
                  "{{- p -}}"
                {%- endfor -%}
              {%- else -%}{%- set prior = null -%}{%- endif -%}
            {%- else -%}{%- set prior = null -%}{%- endif -%}
          {%- else -%}{%- set prior = null -%}{%- endif -%}
        {%- else -%}{%- set prior = null -%}{%- endif -%}
      {%- else -%}{%- set prior = null -%}{%- endif -%}
      {%- if prior != null -%},{%- endif -%}
      "{{- model -}}"]
    macs: >-
      {% set s = states('group.motion_shellies') %}
      [{%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {%- set prior = state_attr('group.motion_shellies','macs') -%}
        {%- if prior|lower != 'none' and prior|lower != 'unknown' and prior|lower != 'unavailable' and prior|lower != 'null' %}
          {% set prior = prior|string|from_json %}
          {%- if prior|lower != 'none' and prior|lower != 'unknown' and prior|lower != 'unavailable' and prior|lower != 'null' %}
            {% if prior is iterable %}
              {% if prior|length > 0 -%}
                {%- for p in prior if p|length > 0 -%}
                  {%- if loop.first -%}{%- else -%},{% endif -%}
                  "{{- p -}}"
                {%- endfor -%}
              {%- else -%}{%- set prior = null -%}{%- endif -%}
            {%- else -%}{%- set prior = null -%}{%- endif -%}
          {%- else -%}{%- set prior = null -%}{%- endif -%}
        {%- else -%}{%- set prior = null -%}{%- endif -%}
      {%- else -%}{%- set prior = null -%}{%- endif -%}
      {%- if prior != null -%},{%- endif -%}
      "{{- mac -}}"]
    updated: >-
      {{ utcnow().timestamp()|int }}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{- 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string -}}
      {% else %}null{% endif %}
    state: >-
      {% if sensor|lower != 'null' %}
        {% set s = states(sensor) %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {{ s }}
        {% else %}
          {% set s = state_attr(sensor,'status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% if 'ison' in s %}{% if s.ison|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'motion' in s %}{% if s.motion|lower == 'true' %}on{% else %}off{% endif %}
            {% elif 'flood' in s %}{% if s.flood|lower == 'true' %}on{% else %}off{% endif %}
            {% else %}none{% endif %}
          {% else %}unknown{% endif %}
        {% endif %}
      {% else %}unavailable{% endif %}
  action:
    - alias: 'type good?'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {{ type|lower != 'null' and type|length > 0 }}
    - alias: 'update binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        entity_picture: >-
          {{ picture }}
        device_class: >-
          {{ type }}
        friendly_name: >-
          {{- type|capitalize + ' in ' + id|string -}}
        ip: >-
          {{ ip }}
        id: >-
          {{ id }}
        model: >-
          {{ model }}
        mac: >-
          {{ mac }}
        announce: >-
          {{ announce }}
        type: >-
          {{ type }}
        updated: >-
          {{ updated }}
        state: >-
          {{ state }}
    - alias: 'update group.motion_shellies_<type>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{- 'group.motion_shellies_' + type|string -}}
        friendly_name: >-
          {{ type|capitalize + '(s)' }}
        entity_ids: >-
          [{% for eid in states.binary_sensor|map(attribute='entity_id')|list if ('motion_shelly_' + type|string) in eid  -%}
          {%- if not loop.first -%},{%- endif -%}
          "{{- eid -}}"
          {%- endfor %}]
        updated: >-
          {{ updated }}
        state: >-
          {% set s = state_attr('sensor.motion_shellies_' + type|string,'status') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s is iterable %}
            {% if s|select('==','on')|list|length > 0 %}on{% else %}off{% endif %}
          {% else %}off{% endif %}
    - alias: 'update group.motion_shellies'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: group.motion_shellies
        friendly_name: 'All shellies'
        sensor: >-
          {{ sensor }}
        macs: >-
          {{ macs|string|from_json|list|unique|list|to_json|string }}
        ids: >-
          {{ ids|string|from_json|list|unique|list|to_json|string }}
        models: >-
          {{ models|string|from_json|list|unique|list|to_json|string }}
        entity_ids: >-
          [{% for eid in states.binary_sensor|map(attribute='entity_id')|list if 'motion_shelly_' in eid  -%}
          {%- if not loop.first -%},{%- endif -%}
          "{{- eid -}}"
          {%- endfor %}]
        updated: >-
          {{ updated }}
        state: >-
          {% if is_state('binary_sensor.motion_shellies_occupancy','on') and is_state('binary_sensor.motion_shellies_light','on') %}on{% else %}off{% endif %}
    - alias: 'update settings login'
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_settings_login
    - alias: 'wait for login settings to update'
      wait_for_trigger:
        - platform: state 
          entity_id: sensor.motion_shellies_settings_login
          to: 'True' 
      continue_on_timeout: true
      timeout:
        seconds: 5
    - alias: 'update settings timezone'
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_settings_timezone
    - alias: 'update settings mqtt'
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_settings_mqtt
    - alias: 'update sensor.motion_shellies_settings'
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_settings
    - alias: 'update sensor.motion_shellies_ota'
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_ota
    - alias: 'update input_select.motion_shellies'
      service: python_script.input_select_set_options
      data_template:
        entity_id: input_select.motion_shellies
        default: >-
          {% set s = states('input_select.motion_shellies') -%}
          {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|lower != 'latest' and s|length > 0 -%}
            {{- s -}}
          {%- else -%}{{- id -}}{%- endif %}
        options: >-
          {% set s = state_attr('group.motion_shellies','entity_id') -%}
          {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
            {%- for c in s -%}
              {%- if not loop.first -%},{%- endif -%}
              {{- state_attr(c,'id') -}}
            {%- endfor -%}
          {% else %}none{%- endif %}
#    - alias: 'test if settings sensor not defined'
#      choose:
#        - alias: 'sensor not defined; publish MQTT command to <id> for announce'
#          conditions:
#            - condition: template
#              value_template: >
#                {% set s = states('sensor.motion_shellies_settings_' + type|string) %}
#                {{ s|lower != 'unknown' }}
#          sequence:
#            - alias: 'update sensor.motion_shellies_settings_<type>'
#              service: homeassistant.update_entity
#              entity_id: '{{ "sensor.motion_shellies_settings_" + type|string }}'
    - alias: 'update input_select.motion_shellies_<type>'
      service: python_script.input_select_set_options
      data_template:
        entity_id: >-
          {{ 'input_select.motion_shellies_' + type|string }}
        default: >-
          {% set s = states('input_select.motion_shellies_' + type|string) -%}
          {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|lower != 'latest' and s|length > 0 -%}
            {{- s -}}
          {%- else -%}{{- id -}}{%- endif %}
        options: >-
          {% set s = state_attr('group.motion_shellies','entity_id') -%}
          {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
            {%- for c in s if state_attr(c,'type')|string == type|string -%}
              {%- if not loop.first -%},{%- endif -%}
              {{- state_attr(c,'id') -}}
            {%- endfor -%}
          {% else %}none{%- endif %}

- id: motion_shellies_scan
  alias: motion_shellies_scan
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.motion_addon_rtsp
    - platform: state
      entity_id: input_boolean.motion_shellies_scan
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = state_attr('sensor.motion_addon_rtsp','rtsp') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' }}
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_shellies_scan','on') }}
  variables:
    devices: >-
      {%- set s = state_attr('sensor.motion_addon_rtsp','rtsp').devices -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|length > 0 -%}
        {%- for c in s|selectattr('code','!=','200')|list -%}
          {%- if loop.first -%}[{%- else -%},{%- endif -%}
          "{{- c.ip -}}"
          {%- if loop.last -%}]{%- endif -%}
        {%- endfor -%}
      {% else %}null{%- endif -%}
  action:
    - alias: 'test for list of devices'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {{ devices|length > 0 }}
    - alias: "check all non-rtsp devices for shelly"
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = devices[repeat.index - 1] %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: "wait until ready"
            wait_template: >-
              {% set s = state_attr('automation.motion_shellies_scan_process','current') %}
              {{ s is number and s|int == 0 }}
          - alias: "set_state: motion_shellies_scan_ip"
            service: python_script.set_state
            data_template:
              allow_create: true
              entity_id: sensor.motion_shellies_scan_ip
              state: >-
                {{ devices[repeat.index - 1] }}
          - alias: "update motion_shellies_scan"
            service: homeassistant.update_entity
            entity_id: sensor.motion_shellies_scan

#          - alias: 'test if scan successful'
#            condition: and
#            conditions:
#              - condition: template
#                value_template: >
#                  {{ states('sensor.motion_shellies_scan')|lower == 'true' }}
#          - alias: "trigger automation.motion_shellies_scan_process"
#            service: automation.trigger
#            entity_id: automation.motion_shellies_scan_process

# {
#   "auth": true,
#   "fw": "20210429-100039/v1.10.4-g3f94cd7",
#   "mac": "ECFABC6F7138",
#   "num_outputs": 1,
#   "type": "SHVIN-1"
# }

- id: motion_shellies_scan_process
  alias: motion_shellies_scan_process
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.motion_shellies_scan
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_shellies_scan') %}
          {{ s|lower == 'true' }}
  variables:
    mac: >-
      {{ state_attr('sensor.motion_shellies_scan','mac')|lower }}
    model: >-
      {{ state_attr('sensor.motion_shellies_scan','type')|upper }}
    type: >-
      {% if model == 'SHMOS-01' %}
        {{ 'occupancy' }}
      {% elif model == 'SHBDUO-1' or model == 'SHVIN-1' %}
        {{ 'light' }}
      {% elif model == 'SHWT-1' %}
        {{ 'moisture' }}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
  action:
    - alias: 'mac and type good?'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {{ mac|lower != 'null' and type|lower != 'null' }}
    - alias: 'test if binary_sensor_motion_shelly_<type>_<mac> is not defined'
      condition: and
      conditions:
        - condition: template
          value_template: >
            {% set s = states(sensor) %}
            {{ s|lower == 'none' }}
    - alias: 'create binary_sensor_motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        auth: >-
          {{ auth }}
        mac: >-
          {{ mac }}
        model: >-
          {{ model }}
        type: >-
          {{ type }}
        ip: >-
          {{ states(' sensor.motion_shellies_scan_ip') }}
    - alias: 'update "sensor" for group.motion_shellies'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: group.motion_shellies
        sensor: >-
          {{ sensor }}
    - alias: "update sensor motion_shellies_settings"
      service: homeassistant.update_entity
      entity_id: sensor.motion_shellies_settings
