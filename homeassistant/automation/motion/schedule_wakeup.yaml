###
# homeassistant/automation/motion/wakeup.yaml
###

# slide sync
- id: motion_schedule_wakeup_end_slider
  alias: motion_schedule_wakeup_end_slider
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_number.motion_schedule_wakeup_end
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_begin') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_end') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >
          {% set b = states('input_number.motion_schedule_wakeup_begin') %}
          {% set e = states('input_number.motion_schedule_wakeup_end') %}
          {{ b|int(0) >= e|int(0) }}
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.motion_schedule_wakeup_begin
        value: >-
          {{ states('input_number.motion_schedule_wakeup_end')|int(0) - state_attr('input_number.motion_schedule_wakeup_begin','step')|int(0) }}

- id: motion_schedule_wakeup_begin_slider
  alias: motion_schedule_wakeup_begin_slider
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_number.motion_schedule_wakeup_begin
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_begin') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_end') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >
          {% set b = states('input_number.motion_schedule_wakeup_begin') %}
          {% set e = states('input_number.motion_schedule_wakeup_end') %}
          {{ b|int(0) >= e|int(0) }}
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.motion_schedule_wakeup_end
        value: >-
          {{ states('input_number.motion_schedule_wakeup_begin')|int(0) + state_attr('input_number.motion_schedule_wakeup_end','step')|int(0) }}

# synchronize input_datetime to sensor converted (begin and end)

- id: motion_schedule_wakeup_begin_datetime
  alias: motion_schedule_wakeup_begin_datetime
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_schedule_wakeup_begin_datetime
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_end') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_begin') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_schedule_wakeup_begin_datetime') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_begin') %}
          {% set e = states('input_number.motion_schedule_wakeup_end') %}
          {{ e|int(0) > s|int(0) }}
  action:
    - service: input_datetime.set_datetime
      data_template:
        entity_id: input_datetime.motion_schedule_wakeup_begin
        time: >-
          {{ states('sensor.motion_schedule_wakeup_begin_datetime')|string }}

- id: motion_schedule_wakeup_end_datetime
  alias: motion_schedule_wakeup_end_datetime
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_schedule_wakeup_end_datetime
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_end') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_begin') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_schedule_wakeup_end_datetime') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_schedule_wakeup_begin') %}
          {% set e = states('input_number.motion_schedule_wakeup_end') %}
          {{ e|int(0) > s|int(0) }}
  action:
    - service: input_datetime.set_datetime
      data_template:
        entity_id: input_datetime.motion_schedule_wakeup_end
        time: >-
          {{ states('sensor.motion_schedule_wakeup_end_datetime')|string }}

# reset sensor.motion_schedule_wakeup_detected at wake_begin
- id: motion_schedule_wakeup_detected_reset
  alias: motion_schedule_wakeup_detected_reset
  mode: single
  initial_state: on
  trigger:
    - platform: time
      at: input_datetime.motion_schedule_wakeup_begin
    - platform: state
      entity_id:
        - sensor.motion_schedule_wakeup_begin_datetime
        - sensor.motion_schedule_wakeup_end_datetime
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {% set s = states('sensor.motion_schedule_wakeup_detected') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: sensor.motion_schedule_wakeup_detected
        state: >-
          {{ 'null' }}

# set sensor.motion_schedule_wakeup_detected when person detected after wake_begin and before wake_end
- id: motion_schedule_wakeup_detected
  alias: motion_schedule_wakeup_detected
  mode: single
  initial_state: on
  trigger:
    platform: state
    entity_id: 
      - sensor.motion_detected_person_count_today
      - input_number.motion_schedule_wakeup_begin
      - input_number.motion_schedule_wakeup_end
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('sensor.motion_schedule_wakeup_detected_time','Pending') }}
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_detected_person_count_today') %}
          {% set b = states('input_number.motion_schedule_wakeup_begin') %}
          {% set e = states('input_number.motion_schedule_wakeup_end') %}
          {% set d = as_timestamp(states.sensor.motion_detected_person_count_today.last_updated)|int(0) - as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0))|int(0) %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null and
             b|lower != 'none' and b|lower != 'unavailable' and b|lower != 'unknown' and b != null and
             e|lower != 'none' and e|lower != 'unavailable' and e|lower != 'unknown' and e != null and
             s|int(0) > 0 and d >= b|int(0) and d <= e|int(0) }}
  variables:
    timestamp: >-
      {{ as_timestamp(states.sensor.motion_detected_person_count_today.last_updated)|int(0) }}
    today: >-
      {{ as_timestamp(states.sensor.motion_detected_person_count_today.last_updated)|int(0) - as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0))|int(0) }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: sensor.motion_schedule_wakeup_detected
        timestamp: >-
          {{ timestamp }}
        state: >-
          {{ today }}
