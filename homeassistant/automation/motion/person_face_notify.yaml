###
# homeassistant/automation/motion/person_face_notify.yaml
###

## notify

- id: motion_person_face_notify
  alias: motion_person_face_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_face
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_person_face','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_person_face_notify','on') }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected person(s) w/ face(s) from {{ states('sensor.motion_person_face_camera') }}
        notification_id: >
          {%- set c = states('sensor.motion_person_face_camera') -%}
          motion_person_face-{{- c -}}
        message: >-
          {%- set c = states('sensor.motion_person_face_camera') -%}
          {%- set d = states('sensor.motion_person_face_device') -%}
          {%- set e = states('sensor.motion_person_face_event') -%}
          {%- set r = states('sensor.motion_person_face_results') -%}
          {%- if r|lower != 'none' and r|lower != 'unknown' and r|lower != 'unavailable' and r|lower != 'null' -%}
            {%- set u = '&results=' + r|urlencode -%}
            {%- set r = r|replace("'",'"')|from_json -%}
          {%- else -%}
            {%- set u = '' -%}
            {%- set r = null -%}
          {%- endif -%}
          {{- '[![]('
             + '/local/images/motion/'
             + c
             + '/person_face'
             + '.jpg?e='
             + e
             + ')]('
             + '/local/images/motion/'
             + c
             + '/person_face_animated'
             + '.gif?e='
             + e
             + ')' }}
          Detected {{ states('sensor.motion_detected_person_count') }} person-face(s)
          for {{ states('sensor.motion_person_face_elapsed') }} seconds
          at {{ states('sensor.motion_person_face_when') }}
          {% if r is iterable and r|length > 0 -%}
            {%- set i = 'person' -%}
            {{- '[![](https://img.shields.io/badge/' + i + '-yes-green.svg)]('
              + states('sensor.motion_person_face_api')
              + '/cgi-bin/predict.yes?entity=' + i
              + '&camera=' + c
              + '&event=' + e
              + u
              + ')' -}}
            {{- '[![](https://img.shields.io/badge/' + i + '-no-red.svg)]('
              + states('sensor.motion_person_face_api')
              + '/cgi-bin/predict.no?entity=' + i
              + '&camera=' + c
              + '&event=' + e
              + u
              + ')' -}}
          {%- endif %}


- id: motion_person_face_notify_smartphone
  alias: motion_person_face_notify_smartphone
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_face
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_person_face','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_person_face_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_detected_person_count')|int > 0 }}
      - condition: template
        value_template: >
          {% set s = states('input_select.motion_smartphone_name') %}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'all' }}
      - condition: template
        value_template: >
          {% set s = state_attr('input_select.motion_smartphone_name','options') %}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|length > 0 }}
  action:
    - service_template: >-
        {%- set s = states('input_select.motion_smartphone_name') -%}
        {%- if s == 'all' -%}{%- set s = 'MOTION_NOTIFY_SMARTPHONE_ALL' -%}{%- endif -%}
        {{- 'notify.mobile_app_' + s -}}
      data_template:
        title: >-
          Detected {{ states('sensor.motion_detected_person_count') }} person(s)
          from {{ states('sensor.motion_person_face_camera') }}
        message: >-
          Detected {{ states('sensor.motion_detected_person_count') }} person(s)
          for {{ states('sensor.motion_person_face_elapsed') }} seconds
          at {{ states('sensor.motion_person_face_when') }}
        apns_headers:
          apns-collapse-id: >-
            motion_person_face_{{- states('sensor.motion_person_face_camera') -}}_{{- states('sensor.motion_person_face_event') -}}
