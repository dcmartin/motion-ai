###
# homeassistant/automation/motion/person_face_notify.yaml
###

## notify

- id: motion_person_face_notify
  alias: motion_person_face_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_face
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_person_face','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_person_face_notify','on') }}
  variables:
    api: >-
      {% set d = 'http://127.0.0.1:7999' %}
      {% set c = states('sensor.motion_person_face_camera') %}
      {% set s = state_attr('sensor.motion_addon_config','config') %}
      {% if s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' and s is mapping %}
        {% set s = s.cameras|selectattr("name","==",c)|list %}
        {% if s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' and s|length > 0 %}
          {% set s = s|map(attribute="addon_api")|first %}
          {% if s|lower != 'null' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'none' and s|length > 0 %}
            {{ s }}
          {% else %}{{ d }}{% endif %}
        {% else %}{{ d }}{% endif %}
      {% else %}{{ d }}{% endif %}
    message: >-
      {%- set c = states('sensor.motion_person_face_camera') -%}
      {%- set d = states('sensor.motion_person_face_device') -%}
      {%- set e = states('sensor.motion_person_face_event') -%}
      {%- set r = state_attr('sensor.motion_person_face','results') -%}
      {%- if r|lower != 'none' and r|lower != 'unknown' and r|lower != 'unavailable' and r|lower != 'null' -%}
        {% if not r is string %}{% set r = r|to_json|string %}{% endif %}
        {%- set u = '&results=' + r|urlencode -%}
        {%- set r = r|from_json -%}
      {%- else -%}
        {%- set u = '' -%}
        {%- set r = null -%}
      {%- endif -%}
      {%- if is_state('input_boolean.motion_media_mask','on') -%}
      {{- '[![]('
         + '/local/images/motion/'
         + c
         + '/person_face_animated_mask'
         + '.gif?e='
         + e
         + ')]('
         + '/local/images/motion/'
         + c
         + '/person_face'
         + '.jpg?e='
         + e
         + ')' }}
      {%- else -%}
      {{- '[![]('
         + '/local/images/motion/'
         + c
         + '/person_face'
         + '.jpg?e='
         + e
         + ')]('
         + '/local/images/motion/'
         + c
         + '/person_face_animated'
         + '.gif?e='
         + e
         + ')' -}}
      {%- endif -%}
      {{- '<br>' + 'Camera ' + c|string + ' detected ' + states('sensor.motion_detected_person_count')|string + ' person-face(s) at ' + states('sensor.motion_person_face_when')|string -}}
      {%- if is_state('input_boolean.motion_media_mask','off') -%}
        {% if r|lower != 'none' and r|lower != 'unknown' and r|lower != 'unavailable' and r|lower != 'null' and r is iterable and r|length > 0 -%}
          {%- set i = 'person' -%}
          {{- '<br>[![](https://img.shields.io/badge/' + i + '-yes-green.svg)]('
            + api|string
            + '/cgi-bin/predict.yes?entity=' + i
            + '&camera=' + c
            + '&event=' + e
            + u
            + ')' -}}
          {{- '[![](https://img.shields.io/badge/' + i + '-no-red.svg)]('
            + api|string
            + '/cgi-bin/predict.no?entity=' + i
            + '&camera=' + c
            + '&event=' + e
            + u
            + ')' -}}
        {%- endif -%}
      {%- endif %}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          ALERT: Detected person(s) w/ face(s) from {{ states('sensor.motion_person_face_camera') }}
        notification_id: >
          {%- set c = states('sensor.motion_person_face_camera') -%}
          motion_person_face-{{- c -}}
        message: >-
          {{ message }}

- id: motion_person_face_notify_smartphone
  alias: motion_person_face_notify_smartphone
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_face
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_person_face','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_person_face_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_detected_person_count')|int(0) > 0 }}
      - condition: template
        value_template: >
          {% set s = states('input_select.motion_smartphone_name') %}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'all' }}
      - condition: template
        value_template: >
          {% set s = state_attr('input_select.motion_smartphone_name','options') %}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|length > 0 }}
  action:
    - service_template: >-
        {%- set s = states('input_select.motion_smartphone_name') -%}
        {%- if s == 'all' -%}{%- set s = 'MOTION_NOTIFY_SMARTPHONE_ALL' -%}{%- endif -%}
        {{- 'notify.mobile_app_' + s -}}
      data_template:
        title: >-
          Detected {{ states('sensor.motion_detected_person_count') }} person(s)
          from {{ states('sensor.motion_person_face_camera') }}
        message: >-
          Detected {{ states('sensor.motion_detected_person_count') }} person(s)
          for {{ states('sensor.motion_person_face_elapsed') }} seconds
          at {{ states('sensor.motion_person_face_when') }}
        apns_headers:
          apns-collapse-id: >-
            motion_person_face_{{- states('sensor.motion_person_face_camera') -}}_{{- states('sensor.motion_person_face_event') -}}
