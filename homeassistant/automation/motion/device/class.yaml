###
# homeassistant/automation/motion/device/class.yaml
###

- id: motion_device_class_rescan
  alias: motion_device_class_rescan
  mode: restart
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: '/2'
    - platform: homeassistant
      event: start
  variables:
    sensor_ids: >-
      {% set s = state_attr('binary_sensor.motion_device_class','sensor_list') %}
      {%- if s|lower != 'none' -%}
        [{%- for i in s if not state_attr('sensor.motion_device_' + i,'ids') is string and state_attr('sensor.motion_device_' + i,'ids')|lower != 'none' -%}
          {% set r = state_attr('sensor.motion_device_' + i,'ids') %}
          {%- for j in r  -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- j -}}"
          {%- endfor -%}
          {%- if not loop.last -%},{%- endif -%}
        {%- endfor -%}]
      {% else %}[]{% endif %}
    binary_sensor_ids: >-
      {% set s = state_attr('binary_sensor.motion_device_class','binary_sensor_list') %}
      {%- if s|lower != 'none' -%}
        [{%- for i in s if not state_attr('binary_sensor.motion_device_' + i,'ids') is string and state_attr('binary_sensor.motion_device_' + i,'ids')|lower != 'none' -%}
          {% set r = state_attr('binary_sensor.motion_device_' + i,'ids') %}
          {%- for j in r  -%}
            {%- if not loop.first -%},{%- endif -%}
            "{{- j -}}"
          {%- endfor -%}
          {%- if not loop.last -%},{%- endif -%}
        {%- endfor -%}]
      {% else %}[]{% endif %}
    ids: >-
      {% if sensor_ids|lower != 'none' and binary_sensor_ids|lower != 'none' %}
        {{- (sensor_ids + binary_sensor_ids)|sort|unique|list -}}
      {% else %}none{% endif %}
    button_list: >-
      {%- if ids|lower != 'none' and not ids is string and ids is iterable and ids|count > 0 -%}
        [{%- for i in ids %}
          {%- if not loop.first -%},{%- endif -%}
          [{%- for state in states.button if device_id(state.entity_id)|lower != 'none' and i == device_attr(device_id(state.entity_id),'name') and not '.motion_' in state.entity_id -%}
            {%- if not loop.first -%},{%- endif -%}
            {"did":"{{- device_id(state.entity_id) -}}","name":"{{- i -}}","entity_id":"{{- state.entity_id -}}","area":"{{- area_id(state.entity_id) -}}"}
          {%- endfor -%}]
        {%- endfor %}]
      {% else %}none{% endif %}
    buttons: >-
      {%- set s = button_list|reject('==',[]) -%}
      {%- if s|lower != 'none' and not s is string -%}
      [{%- for i in s|list -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- for j in i -%}
          {%- if not loop.first -%},{%- endif -%}
          {{ j }}
        {%- endfor -%}
      {%- endfor -%}]
      {% else %}none{% endif %}
    light_list: >-
      {%- if ids|lower != 'none' and not ids is string and ids is iterable and ids|count > 0 -%}
      [{%- for i in ids %}
        {%- if not loop.first -%},{%- endif -%}
        [{%- for state in states.light if device_id(state.entity_id)|lower != 'none' and i == device_attr(device_id(state.entity_id),'name') and not '.motion_' in state.entity_id -%}
          {%- if not loop.first -%},{%- endif -%}
          {"did":"{{- device_id(state.entity_id) -}}","name":"{{- i -}}","entity_id":"{{- state.entity_id -}}","area":"{{- area_id(state.entity_id) -}}"}
        {%- endfor -%}]
      {%- endfor %}]
      {% else %}none{% endif %}
    lights: >-
      {%- set s = light_list|reject('==',[]) -%}
      {%- if s|lower != 'none' and not s is string -%}
      [{%- for i in s|list -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- for j in i -%}
          {%- if not loop.first -%},{%- endif -%}
          {{ j }}
        {%- endfor -%}
      {%- endfor -%}]
      {% else %}none{% endif %}
    media_player_list: >-
      {%- if ids|lower != 'none' and not ids is string and ids is iterable and ids|count > 0 -%}
        [{%- for i in ids %}
          {%- if not loop.first -%},{%- endif -%}
          [{%- for state in states.media_player if device_id(state.entity_id)|lower != 'none' and i == device_attr(device_id(state.entity_id),'name') and not '.motion_' in state.entity_id -%}
            {%- if not loop.first -%},{%- endif -%}
            {"did":"{{- device_id(state.entity_id) -}}","name":"{{- i -}}","entity_id":"{{- state.entity_id -}}","area":"{{- area_id(state.entity_id) -}}"}
          {%- endfor -%}]
        {%- endfor %}]
      {% else %}none{% endif %}
    media_players: >-
      {%- set s = media_player_list|reject('==',[]) -%}
      {%- if s|lower != 'none' and not s is string -%}
      [{%- for i in s|list -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- for j in i -%}
          {%- if not loop.first -%},{%- endif -%}
          {{ j }}
        {%- endfor -%}
      {%- endfor -%}]
      {% else %}none{% endif %}
    switch_list: >-
      {%- if ids|lower != 'none' and not ids is string and ids is iterable and ids|count > 0 -%}
        [{%- for i in ids %}
        {%- if not loop.first -%},{%- endif -%}
          [{%- for state in states.switch if device_id(state.entity_id)|lower != 'none' and i == device_attr(device_id(state.entity_id),'name') and not '.motion_' in state.entity_id -%}
          {%- if not loop.first -%},{%- endif -%}
          {"did":"{{- device_id(state.entity_id) -}}","name":"{{- i -}}","entity_id":"{{- state.entity_id -}}","area":"{{- area_id(state.entity_id) -}}"}
          {%- endfor -%}]
        {%- endfor %}]
      {% else %}none{% endif %}
    switchs: >-
      {%- set s = switch_list|reject('==',[]) -%}
      {%- if s|lower != 'none' and not s is string -%}
      [{%- for i in s|list -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- for j in i -%}
          {%- if not loop.first -%},{%- endif -%}
          {{ j }}
        {%- endfor -%}
      {%- endfor -%}]
      {% else %}none{% endif %}
    total: >-
      {% set s = ids %}
      {% if s|lower != 'unknown' and s|lower != 'none' and not s is string %}
        {{ s|count }}
      {%- else -%}0{%- endif %}
    measurement: >-
      {% set s = state_attr('binary_sensor.motion_device_class','sensor_list')%}
      {%- if s|lower != 'null' and not s is string and s is iterable and s|count > 0 -%}
        { {%- for i in s  if
          states('sensor.motion_device_' + i|string)|lower != 'null'
          and states('sensor.motion_device_' + i|string)|lower != 'unknown'
          and states('sensor.motion_device_' + i|string)|lower != 'none' %}
          {%- if not loop.first -%},{%- endif -%}
          {%- set e = 'sensor.motion_device_' + i|string %}
          {%- set n = state_attr(e,'ids')|count|default(none) %}
          "{{- i -}}":{{- n -}}
        {%- endfor -%} }
      {%- else -%}none{%- endif %}
    status: >-
      {% set s = state_attr('binary_sensor.motion_device_class','binary_sensor_list')%}
      {%- if s|lower != 'null' and not s is string and s is iterable and s|count > 0 -%}
        { {%- for i in state_attr('binary_sensor.motion_device_class','binary_sensor_list') if
          states('binary_sensor.motion_device_' + i|string)|lower != 'null'
          and states('binary_sensor.motion_device_' + i|string)|lower != 'unknown'
          and states('binary_sensor.motion_device_' + i|string)|lower != 'none' %}
          {%- if not loop.first -%},{%- endif -%}
          {%- set e = 'binary_sensor.motion_device_' + i|string %}
          {%- set n = state_attr(e,'ids')|count|default(none) %}
          "{{- i -}}":{{- n -}}
        {%- endfor -%} }
      {%- else -%}none{%- endif %}
    entities: >-
      {%- if ids|lower != 'none' and not ids is string and ids is iterable and ids|count > 0 -%}
        {% set s = ids -%}
        {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
          [{%- for i in s -%}
            {% set o = loop %}
            {%- for state in states if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string != 'null' -%}
              {%- if not o.first or not loop.first -%},{%- endif -%}
              {%- set v = state.state -%}
              {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}","area":"{{- area_id(state.entity_id) -}}"}
            {%- endfor -%}
          {%- endfor -%}]
        {%- else -%}null{%- endif %}
      {%- else -%}none{%- endif %}
    areas: >-
      {% set s = entities %}
      {%- if s|lower != 'null' and not s is string and s is iterable and s|count > 0 -%}
        {{ s|map(attribute='area')|reject('==','None')|sort|unique|list }}
      {%- else -%}null{%- endif %}
  action:
    - alias: 'update sensor.motion_device_class ids'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class
        ids: >-
          {{ ids }}
        total: >-
          {{ total }}
        measurement: >-
          {{ measurement }}
        status: >-
          {{ status }}
        entities: >-
          {{ entities }}
        buttons: >-
          {{ buttons }}
        lights: >-
          {{ lights }}
        media_players: >-
          {{ media_players }}
        switchs: >-
          {{ switchs }}
        areas: >-
          {{ areas }}
        state: >-
          {% if total|int(0) > 0 %}on{% else %}off{% endif %}
    - variables:
        unavailable: >-
          {%- set s = state_attr('binary_sensor.motion_device_class','sensor_list')|list + state_attr('binary_sensor.motion_device_class','binary_sensor_list')|list -%}
          [{%- for i in s|sort|unique if is_state('binary_sensor.motion_device_' + i + '_unavailable','on') -%}
            {%- if not loop.first -%},{%- endif -%}
            {%- for j in state_attr('binary_sensor.motion_device_' + i + '_unavailable','ids') -%}
              {%- if not loop.first -%},{%- endif -%}
              "{{- j -}}"
            {%- endfor -%}
          {%- endfor -%}]
        group: >-
          {%- set s = state_attr('binary_sensor.motion_device_class','sensor_list')|list + state_attr('binary_sensor.motion_device_class','binary_sensor_list')|list -%}
          [{%- for i in s|sort|unique if is_state('binary_sensor.motion_device_' + i + '_group','on') -%}
            {%- if not loop.first -%},{%- endif -%}
            {%- for j in state_attr(','ids') -%}
              {%- if not loop.first -%},{%- endif -%}
              "{{- binary_sensor.motion_device_' + i + '_activity' -}}"
            {%- endfor -%}
          {%- endfor -%}]
    - alias: 'update binary_sensor.motion_device_class_unavailable'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class_unavailable
        ids: >-
          {{ unavailable|sort|unique|list }}
        state: >-
          {% if unavailable|count|int(0) > 0 %}on{% else %}off{% endif %}
    - alias: 'set group.motion_device_class_activity'
      service: python_script.group_set_entities
      data_template:
        entity_id: group.motion_device_class_activity
        entities: >-
          {{ group }}

- id: motion_device_class_activity
  alias: motion_device_class_activity
  mode: restart
  initial_state: on
  trigger:
    - platform: time_pattern
      seconds: '/30'
    - platform: state
      entity_id: 'group.motion_device_class_activity'
  variables:
    activity: >-
      {%- set s = state_attr('binary_sensor.motion_device_class','sensor_list')|list + state_attr('binary_sensor.motion_device_class','binary_sensor_list')|list -%}
      [{%- for i in s|sort|unique if is_state('binary_sensor.motion_device_' + i + '_activity','on') -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- for j in state_attr('binary_sensor.motion_device_' + i + '_activity','ids') -%}
          {%- if not loop.first -%},{%- endif -%}
          "{{- j -}}"
        {%- endfor -%}
      {%- endfor -%}]
  action:
    - alias: 'update binary_sensor.motion_device_class_activity'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_class_activity
        ids: >-
          {{ activity|sort|unique|list }}
        state: >-
          {% if activity|count|int(0) > 0 %}on{% else %}off{% endif %}

- id: motion_device_class_unavailable
  alias: motion_device_class_unavailable
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_class_unavailable'
      to: 'on'
  variables:
    ids: >-
      {% set ids = state_attr('binary_sensor.motion_device_class_unavailable','ids') %}
      {{ ids }}
    title: >-
      {% set title = states('input_text.motion_app') + ': device(s) unavailable' %}
      {{ title }}
    notification_id: >-
      {{ 'device-unavailable-notify' }}
    icon: >-
      {% set icon = 'notification-device-unavailable' %}
      {{ icon }}
    header: >-
      {{- '[![](/local/images/icons/' + icon + '.png)]()' -}}
      {{- '<hr>' -}}
    footer: >-
      {{- '<hr>' -}}
    body: >-
      Devices(s) unavailable:
      {% if ids|lower != 'none' %}
        {{- '<p>' -}}
        {%- for i in ids if i|lower != 'none' -%}
          {%- if not loop.first -%}<br>{%- endif -%}
          [{{ i }}](/config/devices/device/{{- device_id(i) -}}) in [{{ area_id(device_id(i)) }}](/config/areas/area/{{- area_id(device_id(i)) -}})
        {%- endfor %}
      {% else %}unknown{%- endif %}
    message: >-
      {{ header }}
      {{ body }}
      {{ footer }}
  action:
    - alias: 'notify unavailable device'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_class_unavailable_dismiss
  alias: motion_device_class_unavailable_dismiss
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_class_unavailable'
      to: 'off'
  variables:
    notification_id: >-
      {{ 'device-unavailable-notify' }}
  action:
    - alias: 'dismiss inactive device'
      service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{- notification_id -}}

# activity

- id: motion_device_class_activity
  alias: motion_device_class_activity
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_class_activity'
      to: 'on'
  variables:
    ids: >-
      {% set ids = state_attr('binary_sensor.motion_device_class_activity','ids') %}
      {{ ids }}
    title: >-
      {% set title = states('input_text.motion_app') + ': device(s) activity' %}
      {{ title }}
    notification_id: >-
      {{ 'device-activity-notify' }}
    icon: >-
      {% set icon = 'notification-device-activity' %}
      {{ icon }}
    header: >-
      {{- '[![](/local/images/icons/' + icon + '.png)]()' -}}
      {{- '<hr>' -}}
    footer: >-
      {{- '<hr>' -}}
    body: >-
      Devices(s) activity:
      {% if ids|lower != 'none' %}
        {{- '<p>' -}}
        {%- for i in ids if i|lower != 'none' -%}
          {%- if not loop.first -%}<br>{%- endif -%}
          [{{ i }}](/config/devices/device/{{- device_id(i) -}}) in [{{ area_id(device_id(i)) }}](/config/areas/area/{{- area_id(device_id(i)) -}})
        {%- endfor %}
      {% else %}unknown{%- endif %}
    message: >-
      {{ header }}
      {{ body }}
      {{ footer }}
  action:
    - alias: 'notify activity device'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_class_activity_dismiss
  alias: motion_device_class_activity_dismiss
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: 'binary_sensor.motion_device_class_activity'
      to: 'off'
  variables:
    notification_id: >-
      {{ 'device-activity-notify' }}
  action:
    - alias: 'dismiss activity device'
      service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{- notification_id -}}
