###
# homeassistant/automation/motion/device/motion.yaml
###


## rescan

- id: motion_device_motion_rescan
  alias: motion_device_motion_rescan
  mode: single
  initial_state: on
  trigger:
  action:
    - service: automation.trigger
      data_template:
        entity_id: automation.motion_device_motion_binary_sensors

## binary_sensors

- id: motion_device_motion_binary_sensors
  alias: motion_device_motion_binary_sensors
  mode: restart
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: '/5'
    - platform: homeassistant
      event: start
  variables:
    all: >-
      [{%- for state in states.binary_sensor if 'device_class' in state.attributes and device_id(state.entity_id)|lower != 'none' and state.attributes.device_class=='motion' and not '.motion_' in state.entity_id -%}
        {%- if not loop.first -%},{% endif -%}
        "{{- device_attr(device_id(state.entity_id),'name') -}}"
      {%- endfor -%}]
    ids: >-
      {%- if all != [] and all is iterable and all|count > 0 -%}
        {{- all|sort|unique|list -}}
      {% else %}null{% endif %}
    total: >-
      {% set s = ids %}
      {% if s|lower != 'unknown' and s|lower != 'none' and not s is string %}
        {{ s|count }}
      {%- else -%}0{%- endif %}
    update: >-
      {% set s = ids %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {% set o = loop %}
          {%- for state in (states.button|list + states.switch|list) if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == 'update' -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {%- set v = state.state -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}"}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}null{%- endif %}
    restart: >-
      {% set s = ids %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {% set o = loop %}
          {%- for state in (states.button|list + states.switch|list) if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == 'restart' -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {%- set v = state.state -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}"}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}null{%- endif %}
    controls: >-
      {% set s = ids %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {% set o = loop %}
          {%- for state in (states.button|list + states.switch|list) if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == 'null' -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {%- set ctl = state_attr(state.entity_id,'friendly_name') -%}
            {%- set ctl = ctl|replace(i+' ','') -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}","control":"{{- ctl -}}"}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}null{%- endif %}
    test: >-
      {% set s = ids %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {% set o = loop %}
          {%- for state in states.sensor if device_attr(state.entity_id, 'name') == i and state.attributes.self_test|default('none')|string != 'none' -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}","state":"{{- state.state -}}","updated":{{- state.last_updated|as_timestamp(None) -}}}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}null{%- endif %}
    areas: >-
      {% set s = ids -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {% set o = loop %}
          {%- for state in states.binary_sensor if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == 'motion' -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {%- set v = state.state -%}
            {"id":"{{- i -}}","area":"{{- area_id(state.entity_id) -}}","state":"{{- state.state -}}"}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}null{%- endif %}
  action:
    - alias: 'update sensor.motion_device_motion ids, etc..'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_motion
        ids: >-
          {{ ids }}
        total: >-
          {{ total }}
        update: >-
          {{ update }}
        restart: >-
          {{ restart }}
        controls: >-
          {{ controls }}
        test: >-
          {{ test }}
        areas: >-
          {{ areas }}
        state: >-
          {{ states('binary_sensor.motion_device_motion') }}

## update status

- id: motion_device_motion_status
  alias: motion_device_motion_status
  mode: single
  initial_state: on
  trigger:
    - platform: time_pattern
      seconds: '/15'
    - platform: state
      entity_id: binary_sensor.motion_device_motion
      attribute: 'ids'
  variables:
    ids: >-
      {{ state_attr('binary_sensor.motion_device_motion','ids') }}
    status: >-
      {% set s = ids -%}
      {%- if s|lower != 'unknown' and s|lower != 'none' and not s is string -%}
        [{%- for i in s -%}
          {% set o = loop %}
          {%- for state in states.binary_sensor if device_attr(state.entity_id, 'name') == i and state.attributes.device_class|default('null')|string == 'motion' -%}
            {%- if not o.first or not loop.first -%},{%- endif -%}
            {%- set v = state.state -%}
            {"id":"{{- i -}}","entity_id":"{{- state.entity_id -}}","state":"{{- state.state -}}","updated":{{- state.last_updated|as_timestamp(None) -}}}
          {%- endfor -%}
        {%- endfor -%}]
      {%- else -%}null{%- endif %}
    positive: >-
      {% set s = status %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and not s is string -%}
        [{% for i in s if 'entity_id' in i and not i.entity_id is none and is_state(i.entity_id,'on') -%}
          {%- if not loop.first -%},{%- endif -%}
          "{{- state_attr(i.entity_id,'friendly_name') -}}"
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    negative: >-
      {% set s = status %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and not s is string -%}
        [{% for i in s if 'entity_id' in i and not i.entity_id is none and is_state(i.entity_id,'off') -%}
          {%- if not loop.first -%},{%- endif -%}
          "{{- state_attr(i.entity_id,'friendly_name') -}}"
        {%- endfor -%}]
      {%- else -%}none{%- endif %}
    values: >-
      {% set s = status %}
      {%- if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and not s is string -%}
        [{% for i in s if 'entity_id' in i and not i.entity_id is none -%}
          {%- if not loop.first -%},{%- endif -%}
          {% if is_state(i.entity_id,'on') %}1{% else %}0{% endif %}
        {%- endfor -%}]
      {%- else -%}null{%- endif %}
    value: >-
      {% set s = values %}
      {% if s|lower != 'unknown' and s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'null' %}
        {% if s|sum|int(0) > 0 %}on{% else %}off{% endif %}
      {% else %}null{% endif %}
  action:
    - alias: 'update sensor.motion_device_motion state'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_motion
        status: >-
          {{ status }}
        positive: >-
          {{ positive }}
        negative: >-
          {{ negative }}
        state: >-
          {{ value }}

## update, restart, and other contols

- id: motion_device_motion_self_test
  alias: motion_device_motion_self_test
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - alias: 'test if self_test is on'
        condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_motion_self_test','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_motion_self_test','entity_ids') }}
  action:
    - alias: 'test motion sensors'
      repeat:
        while:
          - alias: 'test if not done'
            condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: 'pressing button'
            service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_motion_mute
  alias: motion_device_motion_mute
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_motion_mute','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_motion_mute','entity_ids') }}
  action:
    - alias: 'mute motion sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_motion_unmute
  alias: motion_device_motion_unmute
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_motion_unmute','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_motion_unmute','entity_ids') }}
  action:
    - alias: 'unmute motion sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_motion_restart
  alias: motion_device_motion_restart
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_motion_restart','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_motion_restart','entity_ids') }}
  action:
    - alias: 'restart motion sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

- id: motion_device_motion_update
  alias: motion_device_motion_update
  mode: single
  initial_state: on
  trigger:
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_device_motion_update','on') }}
  variables:
    entity_ids: >-
      {{ state_attr('binary_sensor.motion_device_motion_update','entity_ids') }}
  action:
    - alias: 'update motion sensors'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = entity_ids[repeat.index - 1]|default('unknown') %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - service: button.press
            data_template:
              entity_id: >-
                {{ entity_ids[repeat.index - 1] }}

## notification

- id: motion_device_motion_missing
  alias: motion_device_motion_missing
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_motion_exist
    - platform: state
      entity_id: automation.motion_device_motion_binary_sensors
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_device_motion_exist','off') }}
      - condition: template
        value_template: >
          {{ is_state_attr('automation.motion_device_motion_binary_sensors','current',0) }}
  variables:
    ip: >-
      {{ none }}
    latitude: >-
      {{ none }}
    longitude: >-
      {{ none }}
    title: >-
      {{ 'Sensor not found' }}
    notification_id: >-
      {{ 'device-motion-notify' }}
    message: >-
      {{- '[![](/local/images/SHMOS-01.png)](/config/integrations)' -}}
      {{- '<br>' -}}
      The motion sensor could not be found; please setup the integration by clicking [here](/config/integrations) or on the image below.
      {{- '<hr>' -}}
      {%- if ip|lower != 'none' and ip|lower != 'null' -%}
        {{- '[![](https://img.shields.io/badge/location-reset-green.svg)]('
        + 'http://' + states('input_text.motion_shellies_username')
        + ':'
        + states('input_text.motion_shellies_password')
        + '@'
        + ip|string + '/settings?timezone=utc&lat=' + state_attr('zone.home','latitude')|string + '&lng=' + state_attr('zone.home','longitude')|string + ')' -}}
      {%- endif -%}
      {%- if latitude|float(-1) > 0 and longitude|float(-1) > 0 -%}
        {{- '[![](https://img.shields.io/badge/device-map-blue.svg)]('
          + 'https://www.google.com/maps/@'
          + latitude|string + ',' + longitude|string + ',15z'
          + ')' -}}
      {%- endif -%}
      {{-  '[![](https://img.shields.io/badge/home-map-blue.svg)]('
        + 'https://www.google.com/maps/@'
        + state_attr('zone.home','latitude')|string + ',' + state_attr('zone.home','longitude')|string + ',22z'
        + ')' -}}
  action:
    - alias: 'notify missing motion sensor'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_motion_found
  alias: motion_device_motion_found
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_motion_exist
      to: 'on'
  variables:
    ids: >-
      {{ state_attr('binary_sensor.motion_device_motion','ids') }}
    areas: >-
      {{ state_attr('binary_sensor.motion_device_motion','areas')|map(attribute='area')|list }}
    ip: >-
      {{ none }}
    latitude: >-
      {{ none }}
    longitude: >-
      {{ none }}
    title: >-
      {{ 'Sensor found' }}
    notification_id: >-
      {{ 'device-motion-notify' }}
    message: >-
      {{- '[![](/local/images/SHMOS-01.png)](/config/integrations)' -}}
      {{- '<br>' -}}
      Sensor(s) for motion found; ids: {{ ids -}}; areas: {{ areas }}
      {{- '<hr>' -}}
      {%- if ip|lower != 'none' and ip|lower != 'null' -%}
        {{- '[![](https://img.shields.io/badge/location-reset-green.svg)]('
        + 'http://' + states('input_text.motion_shellies_username')
        + ':'
        + states('input_text.motion_shellies_password')
        + '@'
        + ip|string + '/settings?timezone=utc&lat=' + state_attr('zone.home','latitude')|string + '&lng=' + state_attr('zone.home','longitude')|string + ')' -}}
      {%- endif -%}
      {%- if latitude|float(-1) > 0 and longitude|float(-1) > 0 -%}
        {{- '[![](https://img.shields.io/badge/device-map-blue.svg)]('
          + 'https://www.google.com/maps/@'
          + latitude|string + ',' + longitude|string + ',15z'
          + ')' -}}
      {%- endif -%}
      {{-  '[![](https://img.shields.io/badge/home-map-blue.svg)]('
        + 'https://www.google.com/maps/@'
        + state_attr('zone.home','latitude')|string + ',' + state_attr('zone.home','longitude')|string + ',22z'
        + ')' -}}
  action:
    - alias: 'notify found motion sensor'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

- id: motion_device_motion_detected
  alias: motion_device_motion_detected
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_motion
      to: 'on'
  variables:
    ids: >-
      {% set ids = state_attr('binary_sensor.motion_device_motion','ids') %}
      {{ ids }}
    positive: >-
      {% set positive = state_attr('binary_sensor.motion_device_motion','positive') %}
      {{ positive }}
    which: >-
      {% if ids|count|int(0) > 0 and positive|count|int(0) > 0 %}
        {% for i in ids %}
          {% for p in positive if i in p %}
            {{ i }}
          {% endfor %}
        {% endfor %}
      {% else %}null{% endif %}
    area: >-
      {% if which|lower != 'null' and which|lower != 'none' and which|string|length > 0 -%}
        {%- set s = state_attr('binary_sensor.motion_device_motion','areas')|list -%}
        {%- if s|lower != 'none' and not s is string and s is iterable -%}
          {%- set s = s|selectattr('id','==',which)|list -%}
          {%- if s|lower != 'none' and not s is string -%}
            {%- set s = s|map(attribute='area')|list -%}
            {%- if s|lower != 'none' and s|count > 0 -%}
              {{- s|first -}}
            {%- else -%}null{%- endif -%}
          {%- else -%}null{%- endif -%}
        {%- else -%}null{%- endif -%}
      {%- else -%}null{%- endif %}
    ip: >-
      {% set ip = none %}
      {{ ip }}
    latitude: >-
      {% set latitude = none %}
      {{ latitude }}
    longitude: >-
      {% set longitude = none %}
      {{ longitude }}
    icon: >-
      {% set icon = 'notification-alert' %}
      {{ icon }}
    action: >-
      {% set action = 'motion-okay' %}
      {{ action }}
    url: >-
      {% set url = '/lovelace/motion-okay' %}
      {{ url }}
    title: >-
      {% set title = states('input_text.motion_app') + ': motion alarm' %}
      {{ title }}
    body: >-
      Your home motion alarm was triggered. 
      We have notified **{{- state_attr('sensor.motion_role_primary','friendly_name') -}}** about your motion alarm.
    notification_id: >-
      {{ 'device-motion-notify-detected' }}
    footer: >-
      {{- '<hr>' -}}
      {%- if ip|lower != 'none' and ip|lower != 'null' -%}
        {{- '[![](https://img.shields.io/badge/location-reset-green.svg)]('
        + 'http://' + states('input_text.motion_shellies_username')
        + ':'
        + states('input_text.motion_shellies_password')
        + '@'
        + ip|string + '/settings?timezone=utc&lat=' + state_attr('zone.home','latitude')|string + '&lng=' + state_attr('zone.home','longitude')|string + ')' -}}
      {%- endif -%}
      {%- if latitude|float(-1) > 0 and longitude|float(-1) > 0 -%}
        {{- '[![](https://img.shields.io/badge/sensor-map-blue.svg)]('
          + 'https://www.google.com/maps/@'
          + latitude|string + ',' + longitude|string + ',15z'
          + ')' -}}
      {%- endif -%}
      {{-  '[![](https://img.shields.io/badge/home-map-blue.svg)]('
        + 'https://www.google.com/maps/@'
        + state_attr('zone.home','latitude')|string + ',' + state_attr('zone.home','longitude')|string + ',22z'
        + ')' -}}
      {{-  '[![](https://img.shields.io/badge/person-map-blue.svg)]('
        + 'https://www.google.com/maps/@'
        + state_attr('sensor.motion_person','latitude')|string + ',' + state_attr('sensor.motion_person','longitude')|string + ',22z'
        + ')' -}}
    message: >-
      {{- '[![](/local/images/icons/' + icon + '.png)](' + '/lovelace/support' + ')' -}}
      {{- '<br>' -}}
      {{- body -}}
      {{- '<p>' -}}
      {%- if action|lower != 'none' and action|lower != 'null' -%}
        If you are fine handling this situation on your own, click the **{{- action -}}** button below.
        <br>
        {{-  '[![](https://img.shields.io/badge/' + action + '-green.svg)](' + 'url' + ')' -}}
      {%- endif -%}
      {{- '<hr>' -}}
      {%- if which|lower != 'none' and which|lower != 'null' -%}Sensor: {{ which -}}{%- if area|lower != 'null' -%}; area: {{ area -}}{%- endif -%}{% endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_device_motion','on') }}
      - condition: template
        value_template: >
          {{ which|lower != 'none' and which|lower != 'null' and which|length > 0 }}
  action:
    - alias: 'notify motion sensor activated'
      service: persistent_notification.create
      data_template:
        title: >-
          {{- title -}}
        notification_id: >-
          {{- notification_id -}}
        message: >-
          {{- message -}}

