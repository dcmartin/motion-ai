###
# homeassistant/automation/motion/person_activity.yaml
###

- id: motion_person_active_ago_state
  alias: motion_person_active_ago_state
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_ago_measurement
  variables:
    state: >-
      {% set s = states('sensor.motion_person_active_ago_measurement') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'unavailable' -%}
        {{ '%0.1f'|format(s|float) }}
      {%- else -%}{{ 'null' }}{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active ago'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active_ago
        state: >-
          {{ state }}

- id: motion_person_active_probability_state
  alias: motion_person_active_probability_state
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_active
  variables:
    state: >-
      {% set s = state_attr('binary_sensor.motion_person_active','probability') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'unavailable' -%}
        {{ '%0.2f'|format(s|float) }}
      {%- else -%}{{ 'null' }}{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active probability'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active_probability
        state: >-
          {{ state }}

- id: motion_person_active_probability_threshold
  alias: motion_person_active_probability_threshold
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_person_active
        - input_number.motion_person_active_probability_threshold
  variables:
    threshold: >-
      {% if 'input_number' in trigger.entity_id %}
        {{ states(trigger.entity_id) }}
      {% else %}
        {% set s = states('sensor.motion_person_active_probability_mean_1w') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set mn = s|float %}
          {% set sd = states('sensor.motion_person_active_probability_stdev_1w')|float %}
          {% set d = states('input_number.motion_person_active_probability_threshold_deviation')|float %}
          {{ mn + sd * d }}
        {% else %}
          {{ state_attr('binary_sensor.motion_person_active','probability_threshold') }}
        {% endif %}
      {% endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ not 'input_number' in trigger.entity_id and state_attr(trigger.entity_id,'probability_threshold')|float != threshold|float or true }}
  action:
    - alias: 'set motion_person_active.probability_threshold'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_person_active
        probability_threshold: >-
          {{ threshold }}

- id: motion_person_active_ago_deciles
  alias: motion_person_active_ago_deciles
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_ago_deciles_1w
  variables:
    deciles: >-
      {% set s = states('sensor.motion_person_active_ago_deciles_1w') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unknown' and s|lower != 'unavailable' %}
         {{ s }}
      {%- else -%}null{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active ago'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active_ago
        deciles: >-
          {{ deciles }}

- id: motion_person_active_probability_deciles
  alias: motion_person_active_probability_deciles
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_probability_deciles_1w
  variables:
    deciles: >-
      {% set s = states('sensor.motion_person_active_probability_deciles_1w') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unknown' and s|lower != 'unavailable' %}
         {{ s }}
      {%- else -%}null{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active probability'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active_probability
        deciles: >-
          {{ deciles }}

- id: motion_person_active_level
  alias: motion_person_active_level
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_count_today
  variables:
    level: >-
      {% set s = states('sensor.motion_person_active_count_today') %}
      {% if s|lower == 'none' or s|lower == 'unknown' or s|lower == 'unknown' or s|lower == 'unavailable' %}
         Pending
      {% elif s|int <= 0 %}
         Nothing today
      {%- elif is_state('binary_sensor.motion_person_active_ago_high_persistent','on') -%}
        Low
      {%- elif is_state('binary_sensor.motion_person_active_ago_high','on') -%}
        Decreasing
      {%- elif is_state('binary_sensor.motion_person_active_ago_low_persistent','on') -%}
        High
      {%- elif is_state('binary_sensor.motion_person_active_ago_low','on') -%}
        Increasing
      {%- else -%}
        Nominal
      {%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active level'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        level: >-
          {{ level }}

- id: motion_person_active_rank
  alias: motion_person_active_rank
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_ago
  variables:
    rank: >-
      {%- set s = states('sensor.motion_person_active_ago_stdev') -%}
      {%- set m = states('sensor.motion_person_active_ago_mean') -%}
      {%- set n = states('sensor.motion_person_active_ago_min') -%}
      {%- if s|float > 0.0 and m|float > 0.0 and n|float >= 0.0 %}
        {%- set rate_u = n|float / m|float * 100.0 %}
        {%- set rate_s = n|float / s|float * 100.0 %}
        {%- set rate_vl = rate_u - rate_s %}
        {%- set rate_vh = rate_u + rate_s %}
        {%- set rate_l = rate_u - rate_s/2 %}
        {%- set rate_h = rate_u + rate_s/2 %}
        {%- set v = states('sensor.motion_person_active_ago') %}
        {%- if v|lower == 'none' or v|lower == 'null' %}{{- 'none' -}}
        {%- elif v|float >= rate_vh %}{{- 'veryhigh' -}}
          {%- elif v|float >= rate_h %}{{- 'high' -}}
          {%- elif v|float < rate_h and v|float > rate_l %}{{- 'nominal' -}}
          {%- elif v|float <= rate_vl %}{{- 'verylow' -}}
          {%- elif v|float <= rate_l %}{{- 'low' -}}
          {%- else %}{{- 'null' -}}
        {%- endif -%}
      {%- else %}{{- 'unknown' -}}{% endif %}
  action:
    - alias: 'set sensor.motion_person_active rank'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        rank: >-
          {{ rank }}

- id: motion_person_active_status
  alias: motion_person_active_status
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_active
      attribute: probability
  variables:
    status: >-
      {%- set s = state_attr('binary_sensor.motion_person_active','probability') -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {%- set p = '%0.2f'|format(s|float) -%}
        {%- set s = state_attr('binary_sensor.motion_person_active','probability_threshold') -%}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {%- set t = '%0.2f'|format(s|float) -%}
          𝛒: {{ '%0.1f'|format(p|float * 100) -}}; τ: {{ '%0.1f'|format(t|float * 100) -}};
        {%- else -%}
          𝛒: {{ '%0.1f'|format(p|float * 100) -}};
        {%- endif -%}
        {%- set s = state_attr('binary_sensor.motion_person_active','observations') -%}
        {%- if s|lower != 'none' and s|lower != 'null' and 'observations' in s and s.observations is iterable and s.observations|count > 0 -%}
          {{- ' true (μ):' }}{{ '%0.2f'|format(s.observations|map(attribute='prob_given_true')|select('number')|average) -}};
          {{- ' false (μ):' }}{{ '%0.2f'|format(s.observations|map(attribute='prob_given_false')|select('number')|average) -}}; n: {{ s|count -}}
        {%- else -%}{{ ' no observations' }}{%- endif -%}
      {%- else -%}
        {%- set s = state_attr('sensor.motion_person_active','status') -%}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {{ s }}
        {%- else -%}Pending{%- endif -%}
      {%- endif %}
  action:
    - alias: 'set sensor.motion_person_active status'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        status: >-
          {{ status }}

- id: motion_person_active_on
  alias: motion_person_active_on
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_active
      to: 'on'
  variables:
    now: >-
      {{ utcnow().timestamp() }}
  action:
    - alias: 'set sensor.motion_person_active start; reset end, duration'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        allow_create: true
        start: >-
          {{ now }}
        state: >-
          {{ states('binary_sensor.motion_person_active') }}

- id: motion_person_active_off
  alias: motion_person_active_off
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_active
      to: 'off'
  variables:
    end: >-
      {{ utcnow().timestamp() }}
    start: >-
      {{ state_attr('sensor.motion_person_active','start') }}
    duration: >-
      {%- if start|lower != 'none' and start|lower != 'unknown' and start|lower != 'null' and start|lower != 'unavailable' -%}
        {{ '%0.1f'|format(end - start) }}
      {%- else -%}null{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active end, duration'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        allow_create: true
        end: >-
          {{ end }}
        duration: >-
          {{ duration }}
        state: >-
          {{ states('binary_sensor.motion_person_active') }}

# occupancy

- id: motion_person_occupancy_probability_threshold
  alias: motion_person_occupancy_probability_threshold
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_person_occupancy
        - input_number.motion_person_occupancy_probability_threshold
  variables:
    threshold: >-
      {% if 'input_number' in trigger.entity_id %}
        {{ states(trigger.entity_id) }}
      {% else %}
        {% set s = states('sensor.motion_person_occupancy_probability_mean_1w') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set mn = s|float %}
          {% set sd = states('sensor.motion_person_occupancy_probability_stdev_1w')|float %}
          {% set d = states('input_number.motion_person_occupancy_probability_threshold_deviation')|float %}
          {{ mn + sd * d }}
        {% else %}
          {{ state_attr('binary_sensor.motion_person_occupancy','probability_threshold') }}
        {% endif %}
      {% endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ not 'input_number' in trigger.entity_id and state_attr(trigger.entity_id,'probability_threshold')|float != threshold|float or true }}
  action:
    - alias: 'set motion_person_occupancy.probability_threshold'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_person_occupancy
        probability_threshold: >-
          {{ threshold }}

# smartphone

- id: motion_person_location_probability_threshold
  alias: motion_person_location_probability_threshold
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_person_location
        - input_number.motion_person_location_probability_threshold
  variables:
    threshold: >-
      {% if 'input_number' in trigger.entity_id %}
        {{ states(trigger.entity_id) }}
      {% else %}
        {% set s = states('sensor.motion_person_location_probability_mean_1w') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set mn = s|float %}
          {% set sd = states('sensor.motion_person_location_probability_stdev_1w')|float %}
          {% set d = states('input_number.motion_person_location_probability_threshold_deviation')|float %}
          {{ mn + sd * d }}
        {% else %}
          {{ state_attr('binary_sensor.motion_person_location','probability_threshold') }}
        {% endif %}
      {% endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ not 'input_number' in trigger.entity_id and state_attr(trigger.entity_id,'probability_threshold')|float != threshold|float or true }}
  action:
    - alias: 'set motion_person_location.probability_threshold'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_person_location
        probability_threshold: >-
          {{ threshold }}
