###
# homeassistant/automation/motion/person_activity.yaml
###

- id: motion_person_active_probability_state
  alias: motion_person_active_probability_state
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_active
  variables:
    state: >-
      {% set s = state_attr('binary_sensor.motion_person_active','probability') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'unavailable' -%}
        {{ '%0.2f'|format(s|float(0.0)) }}
      {%- else -%}{{ 'null' }}{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active probability'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active_probability
        state: >-
          {{ state }}

- id: motion_person_active_average_state
  alias: motion_person_active_average_state
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_average_measurement
  variables:
    state: >-
      {% set s = states('sensor.motion_person_active_average_measurement') %}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'unavailable' -%}
        {{ '%0.1f'|format(s|float(0.0)) }}
      {%- else -%}{{ 'null' }}{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active ago'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active_average
        state: >-
          {{ state }}

- id: motion_person_active_probability_threshold
  alias: motion_person_active_probability_threshold
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_person_active
        - input_number.motion_person_active_probability_threshold
  variables:
    threshold: >-
      {% if 'input_number' in trigger.entity_id %}
        {{ states(trigger.entity_id) }}
      {% else %}
        {% set s = states('sensor.motion_person_active_probability_mean_1w') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set mn = s|float(0.0) %}
          {% set sd = states('sensor.motion_person_active_probability_stdev_1w')|float(0.0) %}
          {% set d = states('input_number.motion_person_active_probability_threshold_deviation')|float(0.0) %}
          {{ mn + sd * d }}
        {% else %}
          {{ state_attr('binary_sensor.motion_person_active','probability_threshold') }}
        {% endif %}
      {% endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ not 'input_number' in trigger.entity_id and state_attr(trigger.entity_id,'probability_threshold')|float(0.0) != threshold|float(0.0) or true }}
  action:
    - alias: 'set motion_person_active.probability_threshold'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_person_active
        probability_threshold: >-
          {{ threshold }}

- id: motion_person_active_probability_quartiles
  alias: motion_person_active_probability_quartiles
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_probability_quartiles_1w
  variables:
    quartiles: >-
      {% set s = states('sensor.motion_person_active_probability_quartiles_1w') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unknown' and s|lower != 'unavailable' %}
         {{ s }}
      {%- else -%}null{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active probability'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active_probability
        quartiles: >-
          {{ quartiles }}

- id: motion_person_active_average_quartiles
  alias: motion_person_active_average_quartiles
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_average_quartiles_1w
  variables:
    quartiles: >-
      {% set s = states('sensor.motion_person_active_average_quartiles_1w') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unknown' and s|lower != 'unavailable' %}
         {{ s }}
      {%- else -%}null{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active average'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active_average
        quartiles: >-
          {{ quartiles }}

- id: motion_person_active_level
  alias: motion_person_active_level
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_count_today
  variables:
    level: >-
      {% set s = states('sensor.motion_person_active_count_today') %}
      {% if s|lower == 'none' or s|lower == 'unknown' or s|lower == 'unknown' or s|lower == 'unavailable' %}
         Pending
      {% elif s|int(0) <= 0 %}
         Nothing today
      {%- elif is_state('binary_sensor.motion_person_active_ago_high_persistent','on') -%}
        Low
      {%- elif is_state('binary_sensor.motion_person_active_ago_high','on') -%}
        Decreasing
      {%- elif is_state('binary_sensor.motion_person_active_ago_low_persistent','on') -%}
        High
      {%- elif is_state('binary_sensor.motion_person_active_ago_low','on') -%}
        Increasing
      {%- else -%}
        Nominal
      {%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active level'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        level: >-
          {{ level }}

- id: motion_person_active_rank
  alias: motion_person_active_rank
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_person_active_ago
  variables:
    rank: >-
      {%- set s = states('sensor.motion_person_active_ago_stdev') -%}
      {%- set m = states('sensor.motion_person_active_ago_mean') -%}
      {%- set n = states('sensor.motion_person_active_ago_min') -%}
      {%- if s|float(0.0) > 0.0 and m|float(0.0) > 0.0 and n|float(0.0) >= 0.0 %}
        {%- set rate_u = n|float(0.0) / m|float(0.0) * 100.0 %}
        {%- set rate_s = n|float(0.0) / s|float(0.0) * 100.0 %}
        {%- set rate_vl = rate_u - rate_s %}
        {%- set rate_vh = rate_u + rate_s %}
        {%- set rate_l = rate_u - rate_s/2 %}
        {%- set rate_h = rate_u + rate_s/2 %}
        {%- set v = states('sensor.motion_person_active_ago') %}
        {%- if v|lower == 'none' or v|lower == 'null' %}{{- 'none' -}}
        {%- elif v|float(0.0) >= rate_vh %}{{- 'veryhigh' -}}
          {%- elif v|float(0.0) >= rate_h %}{{- 'high' -}}
          {%- elif v|float(0.0) < rate_h and v|float(0.0) > rate_l %}{{- 'nominal' -}}
          {%- elif v|float(0.0) <= rate_vl %}{{- 'verylow' -}}
          {%- elif v|float(0.0) <= rate_l %}{{- 'low' -}}
          {%- else %}{{- 'null' -}}
        {%- endif -%}
      {%- else %}{{- 'unknown' -}}{% endif %}
  action:
    - alias: 'set sensor.motion_person_active rank'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        rank: >-
          {{ rank }}

- id: motion_person_active_status
  alias: motion_person_active_status
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_active
      attribute: probability
  variables:
    status: >-
      {%- set s = state_attr('binary_sensor.motion_person_active','probability') -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {%- set p = '%0.2f'|format(s|float(0.0)) -%}
        {%- set s = state_attr('binary_sensor.motion_person_active','probability_threshold') -%}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {%- set t = '%0.2f'|format(s|float(0.0)) -%}
          𝛒: {{ '%0.1f'|format(p|float(0.0) * 100) -}}; τ: {{ '%0.1f'|format(t|float(0.0) * 100) -}};
        {%- else -%}
          𝛒: {{ '%0.1f'|format(p|float(0.0) * 100) -}};
        {%- endif -%}
        {%- set s = state_attr('binary_sensor.motion_person_active','observations') -%}
        {%- if s|lower != 'none' and s|lower != 'null' and 'observations' in s and s.observations is iterable and s.observations|count > 0 -%}
          {{- ' true (μ):' }}{{ '%0.2f'|format(s.observations|map(attribute='prob_given_true')|select('number')|average) -}};
          {{- ' false (μ):' }}{{ '%0.2f'|format(s.observations|map(attribute='prob_given_false')|select('number')|average) -}}; n: {{ s|count -}}
        {%- else -%}{{ ' no observations' }}{%- endif -%}
      {%- else -%}
        {%- set s = state_attr('sensor.motion_person_active','status') -%}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
          {{ s }}
        {%- else -%}Pending{%- endif -%}
      {%- endif %}
  action:
    - alias: 'set sensor.motion_person_active status'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        status: >-
          {{ status }}

- id: motion_person_active_on
  alias: motion_person_active_on
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_active
      to: 'on'
  variables:
    now: >-
      {{ utcnow().timestamp() }}
    evidence: >-
      {%- set s = state_attr('binary_sensor.motion_person_active','observations') -%}
      {%- if s|lower != 'none' and s is iterable and s|count > 0 -%}
        {%- set s = s|selectattr('to_state','==','on')|list -%}
        {%- if s|lower != 'none' and s is iterable and s|count > 0 -%}
          {%- set s = s|map(attribute='entity_id')|list -%}
          {%- if s|lower != 'none' and s is iterable and s|count > 0 -%}
            {%- set eids = s -%}
            [{%- for i in eids -%}
              {%- if not loop.first -%},{%- endif -%}
              {%- set s = state_attr(i,'evidence') -%}
              {%- if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' -%}
                {%- set e = s -%}
              {%- else -%}
                {%- set e = '"null"' -%}
              {%- endif -%}
              {"source":"{{- i -}}","evidence":{{- e -}},"state":"{{- states(i) -}}"}
            {%- endfor -%}]
          {%- else -%}[]{%- endif -%}
        {%- else -%}[]{%- endif -%}
      {%- else -%}[]{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active start w/ evidence,probability,threshold,observations'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        allow_create: true
        start: >-
          {{ now }}
        evidence: >-
          {{ evidence }}
        probability: >-
          {{ state_attr('binary_sensor.motion_person_active','probability') }}
        threshold: >-
          {{ state_attr('binary_sensor.motion_person_active','probability_threshold') }}
        observations: >-
          {{ state_attr('binary_sensor.motion_person_active','observations') }}
        state: >-
          {{ states('binary_sensor.motion_person_active') }}

- id: motion_person_active_off
  alias: motion_person_active_off
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_active
      to: 'off'
  variables:
    end: >-
      {{ utcnow().timestamp() }}
    start: >-
      {{ state_attr('sensor.motion_person_active','start') }}
    duration: >-
      {%- if start|lower != 'none' and start|lower != 'unknown' and start|lower != 'null' and start|lower != 'unavailable' -%}
        {{ '%0.1f'|format(end - start) }}
      {%- else -%}null{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_active end w/ duration'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        allow_create: true
        end: >-
          {{ end }}
        duration: >-
          {{ duration }}
        state: >-
          {{ states('binary_sensor.motion_person_active') }}

# occupancy

- id: motion_person_occupancy_probability_threshold
  alias: motion_person_occupancy_probability_threshold
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_person_occupancy
        - input_number.motion_person_occupancy_probability_threshold
  variables:
    threshold: >-
      {% if 'input_number' in trigger.entity_id %}
        {{ states(trigger.entity_id) }}
      {% else %}
        {% set s = states('sensor.motion_person_occupancy_probability_mean_1w') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set mn = s|float(0.0) %}
          {% set sd = states('sensor.motion_person_occupancy_probability_stdev_1w')|float(0.0) %}
          {% set d = states('input_number.motion_person_occupancy_probability_threshold_deviation')|float(0.0) %}
          {{ mn + sd * d }}
        {% else %}
          {{ state_attr('binary_sensor.motion_person_occupancy','probability_threshold') }}
        {% endif %}
      {% endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ not 'input_number' in trigger.entity_id and state_attr(trigger.entity_id,'probability_threshold')|float(0.0) != threshold|float(0.0) or true }}
  action:
    - alias: 'set motion_person_occupancy.probability_threshold'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_person_occupancy
        probability_threshold: >-
          {{ threshold }}

# smartphone

- id: motion_person_location_probability_threshold
  alias: motion_person_location_probability_threshold
  initial_state: on
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_person_location
        - input_number.motion_person_location_probability_threshold
  variables:
    threshold: >-
      {% if 'input_number' in trigger.entity_id %}
        {{ states(trigger.entity_id) }}
      {% else %}
        {% set s = states('sensor.motion_person_location_probability_mean_1w') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {% set mn = s|float(0.0) %}
          {% set sd = states('sensor.motion_person_location_probability_stdev_1w')|float(0.0) %}
          {% set d = states('input_number.motion_person_location_probability_threshold_deviation')|float(0.0) %}
          {{ mn + sd * d }}
        {% else %}
          {{ state_attr('binary_sensor.motion_person_location','probability_threshold') }}
        {% endif %}
      {% endif %}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ not 'input_number' in trigger.entity_id and state_attr(trigger.entity_id,'probability_threshold')|float(0.0) != threshold|float(0.0) or true }}
  action:
    - alias: 'set motion_person_location.probability_threshold'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_person_location
        probability_threshold: >-
          {{ threshold }}

## NIGHT DAY

# last_night

- alias: motion_person_active_last_night
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.motion_sun
      to: 'day'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ states('sensor.motion_sun')|lower == 'day' }}
  action:
    - alias: 'set sensor.motion_person_active last_night'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        last_night: >-
          {
            "timestamp": {{- states.sensor.motion_person_active_count_night.last_changed|as_timestamp(default='null') -}},
            "when":"{{- states.sensor.motion_person_active_count_night.last_changed|as_timestamp(0)|timestamp_custom('%a %b %d %I:%M %p %Z',true) -}}",
            "count":{{- states('sensor.motion_person_active_count_night')|int(0) -}},
            "time":{{- states('sensor.motion_person_active_time_night')|float(0) -}}
          }
    - alias: 'update active count day'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_count_day
    - alias: 'update active time day'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_time_day

# last_day

- alias: motion_person_active_last_day
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.motion_sun
      to: 'night'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ states('sensor.motion_sun')|lower == 'night' }}
  action:
    - alias: 'set sensor.motion_person_active last_day'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_active
        last_day: >-
          {
            "timestamp": {{- states.sensor.motion_person_active_count_day.last_changed|as_timestamp(default='null') -}},
            "when":"{{- states.sensor.motion_person_active_count_day.last_changed|as_timestamp(0)|timestamp_custom('%a %b %d %I:%M %p %Z',true) -}}",
            "count":{{- states('sensor.motion_person_active_count_day')|int(0) -}},
            "time":{{- states('sensor.motion_person_active_time_day')|float(0) -}}
          }
    - alias: 'update active count night'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_count_night
    - alias: 'update active time night'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_time_night
