###
# homeassistant/automation/motion/shelly_light.yaml
###

- id: motion_shellies_light_counter
  alias: motion_shellies_light_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_shellies_light
    from: 'off'
    to: 'on'
  action:
    - service: counter.increment
      entity_id: counter.motion_shellies_light

# set lights brightness

- id: motion_shellies_light_brightness_mqtt
  alias: motion_shellies_light_brightness_mqtt
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: input_number.motion_shellies_light_brightness
  variables:
    devices: >-
      {%- set s = state_attr('group.motion_shellies_light','entity_id') -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {%- for c in s -%}
          {%- if loop.first -%}[{%- else -%},{%- endif -%}
          "{{- state_attr(c,'id') -}}"
          {%- if loop.last -%}]{%- endif -%}
        {%- endfor -%}
      {% else %}null{%- endif -%}
  action:
    - alias: 'set brightness on on all shelly lights'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = devices[repeat.index - 1] %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: 'publish light set command'
            service_template: mqtt.publish
            data_template:
              topic: >-
                {{- 'shellies/' + devices[repeat.index - 1] + '/light/0/set' -}}
              payload_template: >-
                {{ '{"brightness":' + states('input_number.motion_shellies_light_brightness')|int|string + ',"turn":"on"}' }}
              qos: 2
              retain: false

# turn on all lights

- id: motion_shellies_light_on_mqtt
  alias: motion_shellies_light_on_mqtt
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: input_boolean.motion_shellies_light
      from: 'off'
      to: 'on'
  variables:
    devices: >-
      {%- set s = state_attr('group.motion_shellies_light','entity_id') -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {%- for c in s -%}
          {%- if loop.first -%}[{%- else -%},{%- endif -%}
          "{{- state_attr(c,'id') -}}"
          {%- if loop.last -%}]{%- endif -%}
        {%- endfor -%}
      {% else %}null{%- endif -%}
  action:
    - alias: "test if not turning off"
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {% set s = state_attr('automation.motion_shellies_light_off_mqtt','current') %}
            {{ s is number and s|int == 0 }}
    - alias: 'turn on all shelly lights'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = devices[repeat.index - 1] %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: 'publish light on command'
            service_template: mqtt.publish
            data_template:
              topic: >-
                {{- 'shellies/' + devices[repeat.index - 1] + '/light/0/command' -}}
              payload_template: >-
                {{- 'on' -}}
              qos: 2
              retain: false
    - alias: 'update group.motion_shellies_light'
      service: automation.trigger
      entity_id: automation.motion_shellies_light_group_update

# turn off all lights

- id: motion_shellies_light_off_mqtt
  alias: motion_shellies_light_off_mqtt
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: input_boolean.motion_shellies_light
      from: 'on'
      to: 'off'
  variables:
    devices: >-
      {%- set s = state_attr('group.motion_shellies_light','entity_id') -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {%- for c in s -%}
          {%- if loop.first -%}[{%- else -%},{%- endif -%}
          "{{- state_attr(c,'id') -}}"
          {%- if loop.last -%}]{%- endif -%}
        {%- endfor -%}
      {% else %}null{%- endif -%}
  action:
    - alias: "test if not turning on"
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {% set s = state_attr('automation.motion_shellies_light_on_mqtt','current') %}
            {{ s is number and s|int == 0 }}
    - alias: 'turn off all shelly lights'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = devices[repeat.index - 1] %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: 'publish light off command'
            service_template: mqtt.publish
            data_template:
              topic: >-
                {{- 'shellies/' + devices[repeat.index - 1] + '/light/0/command' -}}
              payload_template: >-
                {{- 'off' -}}
              qos: 2
              retain: false
    - alias: 'update group.motion_shellies_light'
      service: automation.trigger
      entity_id: automation.motion_shellies_light_group_update

# update light group on binary_sensor

- id: motion_shellies_light_group_update
  alias: motion_shellies_light_group_update
  initial_state: on
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.motion_shellies_light
  variables:
    state: >-
      {% set s = state_attr('sensor.motion_shellies_light','status') %}
      {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s is iterable %}
        {% if s|select('==','on')|list|length > 0 %}on{% else %}off{% endif %}
      {% else %}off{% endif %}
  action:
    - alias: 'set group.motion_shellies_light'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ 'group.motion_shellies_light' }}
        state: >-
          {{ state }}

# update on light start

- id: motion_shellies_light_start
  alias: motion_shellies_light_start
  mode: queued
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_shellies_light
    from: 'off'
    to: 'on'
  variables:
    sensor: >-
      {% set mac = state_attr('binary_sensor.motion_shellies_light','mac') %}
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {{ 'binary_sensor.motion_shelly_light_' + mac|lower }}
      {% else %}null{% endif %}
    now: >-
      {{ utcnow().timestamp()|int }}
    when: >-
      {{ now|timestamp_custom("%a %b %d %I:%M:%S %p %Z") }}
  action:
    - alias: 'set on: binary_sensor.motion_shellies_light'
      service: python_script.set_state
      data_template:
        entity_id: >-
          {{- 'binary_sensor.motion_shellies_light' -}}
        last: >-
          {{ now }}
        when: >-
          {{ when }}
        state: >-
          {{- 'on' -}}
    - alias: 'test sensor is not null'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' and sensor|lower != 'none' }}
    - alias: 'set on: binary_sensor.motion_shelly_light_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        when: >-
          {{ when }}
        last: >-
          {{ now }}
        start: >-
          {{ now }}
        end: >-
          {{- 'null' -}}
        state: >-
          {{- 'on' -}}

- id: motion_shellies_light_end
  alias: motion_shellies_light_end
  mode: queued
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_shellies_light
    from: 'on'
    to: 'off'
  variables:
    sensor: >-
      {% set mac = state_attr('binary_sensor.motion_shellies_light','mac') %}
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {{ 'binary_sensor.motion_shelly_light_' + mac|lower }}
      {% else %}null{% endif %}
    now: >-
      {{ utcnow().timestamp()|int }}
    when: >-
      {{ now|timestamp_custom("%a %b %d %I:%M:%S %p %Z") }}
    duration: >-
      {% if sensor|lower != 'null' %}
      {% set s = state_attr(sensor,'start') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|int > 0 %}
          {{ now - s|int }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
  action:
    - alias: 'set off: binary_sensor.motion_shellies_light'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{- 'binary_sensor.motion_shellies_light' -}}
        last: >-
          {{ now }}
        when: >-
          {{ when }}
        duration: >-
          {{ duration }}
        state: >-
          {{- 'off' -}}
    - alias: 'test sensor is not null'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ sensor|lower != 'unavailable' and sensor|lower != 'unknown' and sensor|lower != 'null' and sensor|lower != 'none' }}
    - alias: 'set off: binary_sensor.motion_shelly_light_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{- sensor -}}
        when: >-
          {{ when }}
        duration: >-
          {{ duration }}
        last: >-
          {{ now }}
        end: >-
          {{ now }}
        state: >-
          {{- 'off' -}}

## MQTT

# light on message

- id: motion_shellies_light_mqtt_on
  alias: motion_shellies_light_mqtt_on
  initial_state: on
  mode: queued
  trigger:
    - platform: mqtt
      topic: 'shellies/+/light/0'
  variables:
    topic: >-
      {{ trigger.topic }}
    state: >-
      {{ trigger.payload_json|lower == 'on' }}
    id: >-
      {{ topic|replace('shellies/','')|replace('/light/0','') }}
    updated: >-
      {{ utcnow().timestamp()|int }}
    mac: >-
      {% if id|lower != 'none' and id|lower != 'unavailable' and id|lower != 'unknown' and id|lower != 'null' and id|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'id') == id %}
              {% if loop.first %}{{ state_attr(i,'mac') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    type: >-
      {% if mac|lower != 'none' and mac|lower != 'unavailable' and mac|lower != 'unknown' and mac|lower != 'null' and mac|length > 0 %}
        {% set s = states('group.motion_shellies') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
          {% set s = state_attr('group.motion_shellies','entity_id') %}
          {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' %}
            {% for i in s if state_attr(i,'mac') == mac %}
              {% if loop.first %}{{ state_attr(i,'type') }}{% endif %}
            {% endfor %}
          {% else %}null{% endif %}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    sensor: >-
      {% if mac|lower != 'null' and mac|length > 0 and type|lower != 'null' and type|length > 0 %}
        {{ 'binary_sensor.motion_shelly_' + type|string + '_' + mac|string }}
      {% else %}null{% endif %}
  action:
    - alias: 'test sensor is not null'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ sensor|lower != 'null' }}
    - alias: 'set_state: binary_sensor.motion_shelly_<type>_<mac>'
      service: python_script.set_state
      data_template:
        allow_create: true
        entity_id: >-
          {{ sensor }}
        updated: >-
          {{ updated }}
        state: >-
          {{ state }}
