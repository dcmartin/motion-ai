###
# homeassistant/automation/motion/person_activity_notify.yaml
###

## detected

- id: motion_person_detected_unknown_notify
  alias: motion_person_detected_unknown_notify
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_person_detected
      to: 'unknown'
    - platform: time_pattern
      minutes: '/15'
    - platform: homeassistant
      event: start
  condition:
    - condition: template
      value_template: >
        {{ is_state('sensor.motion_person_detected','unknown') }}
  variables:
    title: >-
      ALERT: Detected location unknown
    message: >-
      The location from person detection is unknown; at {{ utcnow().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - condition: template
      value_template: >
        {{ states('input_select.motion_log_level') in ['debug','info','notice','alert'] }}
    - alias: 'notify'
      service: persistent_notification.create
      data_template:
        title: >-
          {{ title }}
        notification_id: motion_person_detected_unknown
        message: >-
          {{ message }}

- id: motion_person_detected_unknown_dismiss
  alias: motion_person_detected_unknown_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_person_detected
    from: 'unknown'
  condition:
    - condition: template
      value_template: >
        {{ not is_state('sensor.motion_person_detected','unknown') }}
  action:
    - alias: 'dismiss'
      service: persistent_notification.dismiss
      data_template:
        notification_id: motion_person_detected_unknown

## occupancy

- id: motion_person_occupancy_unknown_notify
  alias: motion_person_occupancy_unknown_notify
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_person_occupancy
      to: 'unknown'
    - platform: time_pattern
      minutes: '/15'
    - platform: homeassistant
      event: start
  condition:
    - condition: template
      value_template: >
        {{ is_state('sensor.motion_person_occupancy','unknown') }}
  variables:
    title: >-
      ALERT: Occupancy unknown
    message: >-
      Occupancy from motion detection is unknown; at {{ utcnow().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
  action:
    - condition: template
      value_template: >
        {{ states('input_select.motion_log_level') in ['debug','info','notice','alert'] }}
    - alias: 'notify'
      service: persistent_notification.create
      data_template:
        title: >-
          {{ title }}
        notification_id: motion_person_occupancy_unknown
        message: >-
          {{ message }}

- id: motion_person_occupancy_unknown_dismiss
  alias: motion_person_occupancy_unknown_dismiss
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_person_occupancy
      from: 'unknown'
  condition:
    - condition: template
      value_template: >
        {{ not is_state('sensor.motion_person_occupancy','unknown') }}
  action:
    - alias: 'dismiss'
      service: persistent_notification.dismiss
      data_template:
        notification_id: motion_person_occupancy_unknown

## notify

- id: motion_person_active_ago_low_notify
  alias: motion_person_active_ago_low_notify
  initial_state: !secret detected-person-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.person_active_ago_low
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.person_active_ago_low','on') }}
  variables:
    message: >-
      Current: {{ state_attr('sensor.motion_person_active','status') -}};
      average {{ states('sensor.motion_person_active_ago_mean') }} second(s);
      stdev {{ state_attr('sensor.motion_person_active_ago_stdev_mean') }} second(s)
  action:
    - condition: template
      value_template: >
        {{ states('input_select.motion_log_level') in ['debug','info'] }}
    - service: persistent_notification.create
      data_template:
        title: >-
          INFO: Person ago low at {{ utcnow().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
        notification_id: motion_person_active_ago_low
        message: >-
          {{ message }}

- id: motion_person_active_ago_low_dismiss
  alias: motion_person_active_ago_low_dismiss
  initial_state: !secret detected-person-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.person_active_ago_low
    to: 'off'
  condition:
    - condition: template
      value_template: >
        {{ is_state('binary_sensor.person_active_ago_low','off') }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: motion_person_active_ago_low

- id: motion_person_active_ago_low_persistent
  alias: motion_person_active_ago_low_persistent
  initial_state: !secret detected-person-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.person_active_ago_low_persistent
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.person_active_ago_low_persistent','on') }}
  variables:
    message: >-
      Current: {{ state_attr('sensor.motion_person_active','status') -}};
      average {{ states('sensor.motion_person_active_ago_mean') }} second(s);
      stdev {{ state_attr('sensor.motion_person_active_ago_stdev_mean') }} second(s)
  action:
    - condition: template
      value_template: >
        {{ states('input_select.motion_log_level') in ['debug','info'] }}
    - service: persistent_notification.create
      data_template:
        title: >-
          INFO: Person ago persistently low at {{ utcnow().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
        notification_id: motion_person_active_ago_low
        message: >-
          {{ message }}

- id: motion_person_active_ago_high_notify
  alias: motion_person_active_ago_high_notify
  initial_state: !secret detected-person-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.person_active_ago_high
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.person_active_ago_high','on') }}
  variables:
    message: >-
      Current: {{ state_attr('sensor.motion_person_active','status') -}};
      average {{ states('sensor.motion_person_active_ago_mean') }} second(s);
      stdev {{ state_attr('sensor.motion_person_active_ago_stdev_mean') }} second(s)
  action:
    - condition: template
      value_template: >
        {{ states('input_select.motion_log_level') in ['debug','info','notice'] }}
    - service: persistent_notification.create
      data_template:
        title: >-
          NOTICE: Person ago high at {{ utcnow().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
        notification_id: motion_person_active_ago_high
        message: >-
          {{ message }}

- id: motion_person_active_ago_high_dismiss
  alias: motion_person_active_ago_high_dismiss
  initial_state: !secret detected-person-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.person_active_ago_high
    to: 'off'
  condition:
    - condition: template
      value_template: >
        {{ is_state('binary_sensor.person_active_ago_high','off') }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: motion_person_active_ago_high

- id: motion_person_active_ago_high_persistent
  alias: motion_person_active_ago_high_persistent
  initial_state: !secret detected-person-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.person_active_ago_high_persistent
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.person_active_ago_high_persistent','on') }}
  variables:
    message: >-
      Current: {{ state_attr('sensor.motion_person_active','status') -}};
      average {{ states('sensor.motion_person_active_ago_mean') }} second(s);
      stdev {{ state_attr('sensor.motion_person_active_ago_stdev_mean') }} second(s)
  action:
    - condition: template
      value_template: >
        {{ states('input_select.motion_log_level') in ['debug','info','notice','alert'] }}
    - service: persistent_notification.create
      data_template:
        title: >-
          ALERT: Person ago high at {{ utcnow().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
        notification_id: motion_person_active_ago_high
        message: >-
          {{ message }}
