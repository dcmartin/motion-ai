###
# homeassistant/automation/motion/person_occupancy.yaml
###

- id: motion_person_occupancy_sync
  alias: motion_person_occupancy_sync
  initial_state: off
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_shellies_occupancy
      to: 'off'
  action:
    - service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_occupancy
        state: >-
          {{ 'none' }}

- id: motion_person_occupancy_previous
  alias: motion_person_occupancy_previous
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_person_occupancy
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% set s = states('sensor.motion_person_occupancy') %}
          {# s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|lower != 'pending' #}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' }}
  variables:
    latitude: >-
      {% set s = state_attr(state_attr('sensor.motion_person_occupancy','sensor'),'latitude') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    longitude: >-
      {% set s = state_attr(state_attr('sensor.motion_person_occupancy','sensor'),'longitude') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    id: >-
      {% set s = state_attr('sensor.motion_person_occupancy','id') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    movement: >-
      {% set s = state_attr('sensor.motion_person_occupancy','sensor') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {% set p = state_attr('sensor.motion_person_occupancy','prior') %}
        {% if p|lower != 'none' and p|lower != 'unknown' and p|lower != 'unavailable' and p|lower != 'null' %}
          {% set s = distance(s, p)|default('none') %}
          {% if s|lower != 'none' and s|float(0.0) > 0 and s|float(0.0) < 40075 %}
            {%- set d = '%0.2f'|format(s|float(0.0) * 1000) -%}
          {% endif %}
        {% endif %}
      {% endif %}
      {% if d is defined and d|float(0.0) > 0 %}
        {{- d -}}
      {% else %}
        {{ range(0,state_attr(state_attr('sensor.motion_person_occupancy','sensor'),'gps_accuracy'))|random }}
      {% endif %}
    interval: >-
      {% set t = state_attr('sensor.motion_person_occupancy_previous','timestamp') %}
      {% if t|lower != 'none' and t|lower != 'unknown' and t|lower != 'unavailable' and t|lower != 'null' and t|float(0.0) is number and t|float(0.0) > 0 %}
        {{ utcnow().timestamp() - t|float(0.0) }}
      {% else %}null{% endif %}
    velocity: >-
      {% set d = movement %}
      {% if d|lower != 'null' and d|int(0) is number and d|int(0) < 40075 %}
        {% set t = interval %}
        {% if t|lower != 'null' and t|float(0.0) is number and t|float(0.0) > 0 %}
          {{- '%0.2f'|format(d|float/t|float(0.0)) -}}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
  action:
    - alias: 'known sensor?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ id|lower != 'null' }}
    - alias: 'set sensor.motion_person_occupancy_previous'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_occupancy_previous
        latitude: >-
          {{ latitude }}
        longitude: >-
          {{ longitude }}
        id: >-
          {{ id }}
        movement: >-
          {{ movement }}
        interval: >-
          {{ interval }}
        velocity: >-
          {{ velocity }}
        timestamp: >-
          {{ utcnow().timestamp() }}
        distance: >-
          {{ state_attr('sensor.motion_person_occupancy','distance') }}
        sensor: >-
          {{ state_attr('sensor.motion_person_occupancy','sensor') }}
        area: >-
          {{ state_attr('sensor.motion_person_occupancy','area') }}
        state: >-
          {{ states('sensor.motion_person_occupancy') }}

- id: motion_person_occupancy
  alias: motion_person_occupancy
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_shellies_occupancy
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% set s = states('sensor.motion_shellies_occupancy') %}
          {# s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|lower != 'pending' #}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' }}
  variables:
    sensor: >-
      {% set s = state_attr('sensor.motion_shellies_occupancy','sensor') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    id: >-
      {% if sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'id') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {{ s }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    ago: >-
      {% if sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'last') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {{ utcnow().timestamp()|int(0) - s|int(0) }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    duration: >-
      {% if sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'duration') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {{ s|int(0) }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    latitude: >-
      {% if sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'latitude') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {{ s|float(0.0) }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    longitude: >-
      {% if sensor|lower != 'null' %}
        {% set s = state_attr(sensor,'longitude') %}
        {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
          {{ s|float(0.0) }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    distance: >-
      {% if latitude|lower != 'null' and longitude|lower != 'null' %}
        {% set s = distance('zone.home', longitude, latitude) %}
        {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' and s|int(0) is number and s|int(0) < 40075 %}
          {{- '%0.2f'|format(s|float(0.0) * 1000) -}}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    gps: >-
      {% if latitude|lower != 'null' and longitude|lower != 'null' %}
        {% set s = state_attr('zone.home','radius') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|int(0) > 0 %}
          {{ latitude|lower != 'null' and longitude|lower != 'null' and distance|int(0) < s|int(0) }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    area: >-
      {% set s = area_name(sensor) %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    probability: >-
      {{ state_attr('binary_sensor.motion_person_occupancy','probability') }}
  action:
    - alias: 'choose: notify on id or gps'
      choose:
        - alias: 'condition: id unknown and gps bad?'
          conditions:
            - condition: template
              value_template: >
                {{ id|lower == 'null' and gps|lower != 'true' }}
          sequence:
            - alias: 'notify id and gps bad'
              service: persistent_notification.create
              data_template:
                title: >-
                  INVALID: Occupancy sensor
                notification_id: >-
                  {{ sensor|string + '_person_occupancy' }}
                message: >-
                  Occupancy sensor id and location invalid; id: {{ id -}}; GPS: {{ latitude,longitude -}}; distance: {{ distance }} 
        - alias: 'condition: gps bad?'
          conditions:
            - condition: template
              value_template: >
                {{ gps|lower != 'true' }}
          sequence:
            - alias: 'notify gps bad'
              service: persistent_notification.create
              data_template:
                title: >-
                  NOTICE: Occupancy location
                notification_id: >-
                  {{ sensor|string + '_person_occupancy' }}
                message: >-
                  Occupancy sensor location invalid; id: **{{- id -}}**; GPS: {{ latitude,longitude -}}; distance: {{ distance }} 
        - alias: 'condition: id unknown?'
          conditions:
            - condition: template
              value_template: >
                {{ id|lower == 'null' }}
          sequence:
            - alias: 'notify id bad'
              service: persistent_notification.create
              data_template:
                title: >-
                  INVALID: Occupancy identifier
                notification_id: >-
                  {{ sensor|string + '_person_occupancy' }}
                message: >-
                  Occupancy sensor identifier invalid; id: **{{- id -}}**
    - alias: 'choose: update based on location'
      choose:
        - alias: 'condition: id is good and gps is bad'
          conditions:
            - condition: template
              value_template: >-
                {{ id|lower != 'null' and gps|lower != 'true' }}
          sequence:
            - alias: 'service: set_state sensor.motion_person_occupancy'
              service: python_script.set_state
              data_template:
                entity_id: sensor.motion_person_occupancy
                id: >-
                  {{ id }}
                sensor: >-
                  {{ sensor }}
                prior: >-
                  {{ state_attr('sensor.motion_person_occupancy_previous','sensor') }}
                latitude: >-
                  {{ state_attr('zone.home','latitude') }}
                longitude: >-
                  {{ state_attr('zone.home','longitude') }}
                area: >-
                  {{ area }}
                ago: >-
                  {{ ago }}
                probability: >-
                  {{ probability }}
                state: >-
                  {{ 'on' }}
        - alias: 'condition: id is good and gps is good'
          conditions:
            - condition: template
              value_template: >-
                {{ id|lower != 'null' and gps|lower == 'true' }}
          sequence:
            - alias: 'service: set_state sensor.motion_person_occupancy'
              service: python_script.set_state
              data_template:
                entity_id: sensor.motion_person_occupancy
                id: >-
                  {{ id }}
                sensor: >-
                  {{ sensor }}
                prior: >-
                  {{ state_attr('sensor.motion_person_occupancy_previous','sensor') }}
                area: >-
                  {{ area }}
                ago: >-
                  {{ ago }}
                latitude: >-
                  {{ latitude }}
                longitude: >-
                  {{ longitude  }}
                distance: >-
                  {{ distance }}
                probability: >-
                  {{ probability }}
                state: >-
                  {{ 'on' }}

- id: motion_person_occupancy_on
  alias: motion_person_occupancy_on
  mode: queued
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_occupancy
      to: 'on'
  variables:
    now: >-
      {{ utcnow().timestamp() }}
    evidence: >-
      {%- set s = state_attr('binary_sensor.motion_person_occupancy','observations') -%}
      {%- if s|lower != 'none' and s is iterable and s|count > 0 -%}
        {%- set s = s|selectattr('to_state','==','on')|map(attribute='entity_id')|list -%}
        {%- if s is iterable and s|list|count > 0 -%}
          {%- set eids = s -%}
          [{%- for i in eids -%}
            {%- if not loop.first -%},{%- endif -%}
            {"source":"{{- i -}}","evidence":
            {%- set s = state_attr(i,'sensor') -%}
            {%- if s|lower != 'none' -%}
              {%- set sensor = s -%}
              {%- set id = state_attr(sensor,'id') -%}
              {%- set ago = state_attr(sensor,'ago') -%}
              {%- set sensitivity = state_attr(sensor,'settings').motion.sensitivity|default('none') -%}
              {%- set blind_time = state_attr(sensor,'settings').motion.blind_time|default('none') -%}
              {"sensor":"{{- sensor -}}","name":"{{- id -}}","ago":{{- ago -}},"sensitivity":{{- sensitivity -}},"blind_time":{{- blind_time -}}},
            {%- else -%}"null",{%- endif -%}
            "state":"{{- states(i) -}}"}
          {%- endfor -%}]
        {%- else -%}[]{%- endif -%}
      {%- else -%}[]{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_occupancy start'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_occupancy
        allow_create: true
        start: >-
          {{ now }}
        evidence: >-
          {{ evidence }}
        probability: >-
          {{ state_attr('binary_sensor.motion_person_occupancy','probability') }}
        threshold: >-
          {{ state_attr('binary_sensor.motion_person_occupancy','probability_threshold') }}
        observations: >-
          {{ state_attr('binary_sensor.motion_person_occupancy','observations') }}
        state: >-
          {{ 'on' }}

- id: motion_person_occupancy_off
  alias: motion_person_occupancy_off
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_person_occupancy
      to: 'off'
  variables:
    end: >-
      {{ utcnow().timestamp() }}
    start: >-
      {{ state_attr('sensor.motion_person_occupancy','start') }}
    duration: >-
      {%- if start|lower != 'none' and start|lower != 'unknown' and start|lower != 'null' and start|lower != 'unavailable' -%}
        {{ '%0.1f'|format(end - start) }}
      {%- else -%}null{%- endif -%}
  action:
    - alias: 'set sensor.motion_person_occupancy end, duration'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_occupancy
        allow_create: true
        end: >-
          {{ end }}
        duration: >-
          {{ duration }}
        state: >-
          {{ 'off' }}
