###
# homeassistant/automation/motion/camera_restart.yaml
###

- id: motion_reload
  alias: motion_reload
  mode: single
  initial_state: off
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_reload
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
         {{ is_state('binary_sensor.motion_reload','on') }}
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.motion_reloading','off') }}
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_reload_command') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
  action:   
    - alias: 'set state binary_sensor.motion_reloading: on'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_reloading
        state: 'on'
    - alias: 'install tools'
      service: shell_command.motion_reload_apk
    - alias: 'clone repository'
      service: shell_command.motion_reload_git
    - alias: 'pull & copy repository'
      service: shell_command.motion_reload_tar
    - alias: 'make configuration'
      service: shell_command.motion_reload_make
    - alias: 'wait 5 seconds'
      delay:
        seconds: 5
    - alias: 'set state binary_sensor.motion_reloading: off'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_reloading
        state: 'off'
    - alias: 'set state binary_sensor.motion_reloaded: on'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_reloaded
        state: 'on'
    - alias: 'set state binary_sensor.motion_reload: off'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_reload
        state: 'off'
