###
## automation/motion/sun.yaml
###

# day

- id: motion_sun_day
  alias: motion_sun_day
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: sun.sun
      to: 'above_horizon'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ states('sun.sun')|lower == 'above_horizon' }}
  variables:
    now: >-
      {{ utcnow().timestamp() }}
    setting: >-
      {{ states.sun.sun.attributes.next_setting|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z") }}
    dusk: >-
      {{ states.sun.sun.attributes.next_dusk|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z") }}
    night: >-
      {{ states.sun.sun.attributes.next_dusk|as_timestamp }}
    state: >-
      {{ 'day' }}
  action:
    - alias: 'set sensor.motion_sun day and last_night'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_sun
        day: >-
          {{ now }}
        setting: >-
          {{ setting }}
        dusk: >-
          {{ dusk }}
        night: >-
          {{ night }}
        last_night: >-
          {
            "timestamp": {{- states.sensor.motion_person_active_count_night.last_changed|as_timestamp(default='null') -}},
            "when":"{{- states.sensor.motion_person_active_count_night.last_changed|as_timestamp(0)|timestamp_custom("%a %b %d %I:%M %p %Z") -}}",
            "count":{{- states('sensor.motion_person_active_count_night')|int(0) -}},
            "time":{{- states('sensor.motion_person_active_time_night')|int(0) -}},
            "ratio":{{- states('sensor.motion_person_active_ratio_night')|int(0) -}},
            "last":{{ states.sensor.motion_person_active_count_night.last_changed|as_timestamp|default(0) - as_datetime(states.sensor.motion_person_active_count_night.last_changed|as_timestamp|default(0)).replace(hour=0).replace(minute=0).replace(second=0)|as_timestamp(default='null') }},
          }
        state: >-
          {{ state }}
    - alias: 'update active count day'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_count_day
    - alias: 'update active time day'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_time_day
    - alias: 'update active ratio day'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_ratio_day

# night

- id: motion_sun_night
  alias: motion_sun_night
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: sun.sun
      to: 'below_horizon'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ states('sun.sun')|lower == 'below_horizon' }}
  variables:
    now: >-
      {{ utcnow().timestamp() }}
    dawn: >-
      {{ states.sun.sun.attributes.next_dawn|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z") }}
    rising: >-
      {{ states.sun.sun.attributes.next_rising|as_timestamp|timestamp_custom("%a %b %d %I:%M %p %Z") }}
    day: >-
      {{ states.sun.sun.attributes.next_dawn|as_timestamp }}
    state: >-
      {{ 'night' }}
  action:
    - alias: 'set sensor.motion_sun night and last_day'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_sun
        night: >-
          {{ now }}
        dawn: >-
          {{ dawn }}
        rising: >-
          {{ rising }}
        day: >-
          {{ day }}
        last_day: >-
          {
            "timestamp": {{- states.sensor.motion_person_active_count_day.last_changed|as_timestamp(default='null') -}},
            "when":"{{- states.sensor.motion_person_active_count_day.last_changed|as_timestamp(0)|timestamp_custom("%a %b %d %I:%M %p %Z") -}}",
            "count":{{- states('sensor.motion_person_active_count_day')|int(0) -}},
            "time":{{- states('sensor.motion_person_active_time_day')|int(0) -}},
            "ratio":{{- states('sensor.motion_person_active_ratio_day')|int(0) -}},
            "last":{{ states.sensor.motion_person_active_count_day.last_changed|as_timestamp|default(0) - as_datetime(states.sensor.motion_person_active_count_day.last_changed|as_timestamp|default(0)).replace(hour=0).replace(minute=0).replace(second=0)|as_timestamp(default='null') }},
          }
        state: >-
          {{ state }}
    - alias: 'update active count night'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_count_night
    - alias: 'update active time night'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_time_night
    - alias: 'update active ratio night'
      service: homeassistant.update_entity
      entity_id: sensor.motion_person_active_ratio_night
