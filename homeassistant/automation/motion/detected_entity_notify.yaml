###
# homeassistant/automation/motion/detected_entity_notify.yaml
###

- id: motion_detected_entity_notify
  alias: motion_detected_entity_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_detected_entity
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_detected_entity','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_detected_entity_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_detected_entity_count')|int > 0 }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states('sensor.motion_detected_entity_count') }} {{ states('sensor.motion_detect_entity') -}}(s)
          from {{ states('sensor.motion_detected_entity_camera') }}
        notification_id: >
          motion_detected_entity-{{- states('sensor.motion_detected_entity_camera') -}}
        message: >-
          {{ '[![]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/'
             + states('sensor.motion_detected_entity_camera')
             + '/detected_entity'
             + '.jpg?e='
             + states('sensor.motion_detected_entity_event_' + states('sensor.motion_detected_entity_camera'))
             + ')]('
             + states('sensor.motion_base_url')
             + '/local/images/motion/'
             + states('sensor.motion_detected_entity_camera')
             + '/detected_entity_animated'
             + '.gif?e='
             + states('sensor.motion_detected_entity_event_' + states('sensor.motion_detected_entity_camera'))
             + ')' }}
          Detected {{ states('sensor.motion_detected_entity_count') }} {{ states('sensor.motion_detect_entity') -}}(s)
          for {{ states('sensor.motion_detected_entity_elapsed') }} seconds
          at {{ states('sensor.motion_detected_entity_when') }}
