###
# homeassistant/automation/motion/detected_vehicle_notify.yaml
###

## notify

- id: motion_detected_vehicle_notify
  alias: motion_detected_vehicle_notify
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_detected_vehicle
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_detected_vehicle','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_detected_vehicle_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_detected_vehicle_count')|int > 0 }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states('sensor.motion_detected_vehicle_count') }} vehicle(s)
          from {{ states('sensor.motion_detected_vehicle_camera') }}
        notification_id: >
          motion_detected_vehicle-{{- states('sensor.motion_detected_vehicle_camera') -}}
        message: >-
          {%- set c = states('sensor.motion_detected_vehicle_camera') -%}
          {%- set d = states('sensor.motion_detected_vehicle_device') -%}
          {%- set r = states('sensor.motion_detected_vehicle_list') -%}
          {%- if r|lower != 'none' and r|lower != 'unknown' and r|lower != 'unavailable' and r|lower != 'null' -%}
            {%- set u = '&results=' + r|urlencode -%}
            {%- set r = r|replace("'",'"')|from_json -%}
          {%- else -%}
            {%- set u = '' -%}
            {%- set r = null -%}
          {%- endif -%}
          {%- set e = states('sensor.motion_detected_vehicle_event_' + states('sensor.motion_detected_vehicle_camera')) -%}
          {{- '[![]('
             + '/local/images/motion/'
             + c
             + '/detected_vehicle'
             + '.jpg?e='
             + e
             + ')]('
             + '/local/images/motion/'
             + c
             + '/detected_vehicle_animated'
             + '.gif?e='
             + e
             + ')' }}
          Detected {{ states('sensor.motion_detected_vehicle_count') }} vehicle(s)
          for {{ states('sensor.motion_detected_vehicle_elapsed') }} seconds
          at {{ states('sensor.motion_detected_vehicle_when') }}
          {% if r is iterable and r|length > 0 -%}
            {% for i in r|map(attribute="e")|unique|list -%}
            {{- '[![](https://img.shields.io/badge/' + i + '-yes-green.svg)]('
              + states('sensor.motion_detected_vehicle_api')
              + '/cgi-bin/predict.yes?entity=' + i
              + '&camera=' + c
              + '&event=' + e
              + u
              + ')' -}}
            {{- '[![](https://img.shields.io/badge/' + i + '-no-red.svg)]('
              + states('sensor.motion_detected_vehicle_api')
              + '/cgi-bin/predict.no?entity=' + i
              + '&camera=' + c
              + '&event=' + e
              + u
              + ')' -}}
            {%- endfor -%}
          {%- endif %}

- id: motion_detected_vehicle_notify_smartphone
  alias: motion_detected_vehicle_notify_smartphone
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_detected_vehicle
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_detected_vehicle','on') }}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_detected_vehicle_notify','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.motion_detected_vehicle_count')|int > 0 }}
      - condition: template
        value_template: >
          {% set s = states('input_select.motion_smartphone_name') %}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|lower != 'all' }}
      - condition: template
        value_template: >
          {% set s = state_attr('input_select.motion_smartphone_name','options') %}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|length > 0 }}
  action:
    - service_template: >-
        {%- set s = states('input_select.motion_smartphone_name') -%}
        {%- if s == 'all' -%}{%- set s = 'MOTION_NOTIFY_SMARTPHONE_ALL' -%}{%- endif -%}
        {{- 'notify.mobile_app_' + s -}}
      data_template:
        title: >-
          Detected {{ states('sensor.motion_detected_vehicle_count') }} vehicle(s)
          from {{ states('sensor.motion_detected_vehicle_camera') }}
        message: >-
          Detected {{ states('sensor.motion_detected_vehicle_count') }} vehicle(s)
          for {{ states('sensor.motion_detected_vehicle_elapsed') }} seconds
          at {{ states('sensor.motion_detected_vehicle_when') }}
        apns_headers:
          apns-collapse-id: >-
            motion_detected_vehicle_{{- states('sensor.motion_detected_vehicle_camera') -}}_{{- states('sensor.motion_detected_vehicle_event') -}}

# ago low/high counters

- id: motion_detected_vehicle_ago_low_counter
  alias: motion_detected_vehicle_ago_low_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.detected_vehicle_ago_low
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.detected_vehicle_ago_low','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: agoer.increment
      entity_id: agoer.motion_detected_vehicle_ago_low_counter

- id: motion_detected_vehicle_ago_high_counter
  alias: motion_detected_vehicle_ago_high_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.detected_vehicle_ago_high
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.detected_vehicle_ago_high','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ states('sensor.intranet_test') is not none }}
  action:
    - service: agoer.increment
      entity_id: agoer.motion_detected_vehicle_ago_high_counter

## notify

- id: motion_detected_vehicle_ago_low_notify
  alias: motion_detected_vehicle_ago_low_notify
  initial_state: !secret detected-vehicle-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.detected_vehicle_ago_low
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.detected_vehicle_ago_low','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.intranet_test') is not none and state_attr('sensor.intranet_test','date') is not none }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Vehicle ago low at
          {{ now().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z") }}
        notification_id: motion_detected_vehicle_ago_low
        message: >
          Current: {{ states('sensor.motion_detected_vehicle_status') -}}; 
          average {{ states('sensor.motion_detected_vehicle_ago_mean') }} vehicle(s);
          stdev {{ state_attr('sensor.motion_detected_vehicle_ago_stdev_statistics') }} vehicle(s)

- id: motion_detected_vehicle_ago_low_dismiss
  alias: motion_detected_vehicle_ago_low_dismiss
  initial_state: !secret detected-vehicle-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.detected_vehicle_ago_low
  condition:
    - condition: template
      value_template: >
        {{ is_state('binary_sensor.detected_vehicle_ago_low','off') }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: motion_detected_vehicle_ago_low

- id: motion_detected_vehicle_ago_low_persistent
  alias: motion_detected_vehicle_ago_low_persistent
  initial_state: !secret detected-vehicle-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.detected_vehicle_ago_low_persistent
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.detected_vehicle_ago_low_persistent','on') }}
      - condition: template
        value_template: >
          {{ states('sensor.intranet_test') is not none }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Vehicle ago persistently low at
          {{ now().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z") }}
        notification_id: motion_detected_vehicle_ago_low
        message: >-
          Current: {{ states('sensor.motion_detected_vehicle_status') -}}; 
          average {{ states('sensor.motion_detected_vehicle_ago_mean') }} vehicle(s);
          stdev {{ state_attr('sensor.motion_detected_vehicle_ago_stdev_statistics') }} vehicle(s)

- id: motion_detected_vehicle_ago_high_notify
  alias: motion_detected_vehicle_ago_high_notify
  initial_state: !secret detected-vehicle-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.detected_vehicle_ago_high
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.detected_vehicle_ago_high','on') }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Vehicle ago high at
          {{ now().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z") }}
        notification_id: motion_detected_vehicle_ago_high
        message: >
          Current: {{ states('sensor.motion_detected_vehicle_status') -}}; 
          average {{ states('sensor.motion_detected_vehicle_ago_mean') }} vehicle(s);
          stdev {{ state_attr('sensor.motion_detected_vehicle_ago_stdev_statistics') }} vehicle(s)

- id: motion_detected_vehicle_ago_high_dismiss
  alias: motion_detected_vehicle_ago_high_dismiss
  initial_state: !secret detected-vehicle-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.detected_vehicle_ago_high
  condition:
    - condition: template
      value_template: >
        {{ is_state('binary_sensor.detected_vehicle_ago_high','off') }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: motion_detected_vehicle_ago_high

- id: motion_detected_vehicle_ago_high_persistent
  alias: motion_detected_vehicle_ago_high_persistent
  initial_state: !secret detected-vehicle-ago-notifications
  trigger:
    platform: state
    entity_id: binary_sensor.detected_vehicle_ago_high_persistent
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.detected_vehicle_ago_high_persistent','on') }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Vehicle ago high at
          {{ now().timestamp()|int|timestamp_custom("%a %b %d %I:%M %p %Z") }}
        notification_id: motion_detected_vehicle_ago_high
        message: >
          Current: {{ states('sensor.motion_detected_vehicle_status') -}}; 
          average {{ states('sensor.motion_detected_vehicle_ago_mean') }} vehicle(s);
          stdev {{ state_attr('sensor.motion_detected_vehicle_ago_stdev_statistics') }} vehicle(s)
