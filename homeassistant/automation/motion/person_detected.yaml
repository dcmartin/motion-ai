###
# homeassistant/automation/motion/person_detected.yaml
###

- id: motion_person_detected_previous
  alias: motion_person_detected_previous
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.motion_person_detected
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% set s = states('sensor.motion_person_detected') %}
          {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|lower != 'pending' }}
  variables:
    latitude: >-
      {% set s = state_attr(state_attr('sensor.motion_person_detected','sensor'),'latitude') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    longitude: >-
      {% set s = state_attr(state_attr('sensor.motion_person_detected','sensor'),'longitude') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    id: >-
      {% set s = state_attr('sensor.motion_person_detected','id') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    movement: >-
      {% set d = distance(state_attr('sensor.motion_person_detected','sensor'), state_attr('sensor.motion_person_detected','prior')) %}
      {% if d|lower != 'none' and d|float is number and d|float > 0 and d|float < 40075 %}
        {{- '%0.2f'|format(d * 1000) -}}
      {% else %}
        {{ range(0,state_attr(state_attr('sensor.motion_person_detected','sensor'),'gps_accuracy'))|random }}
      {% endif %}
    interval: >-
      {% set t = state_attr('sensor.motion_person_detected_previous','timestamp') %}
      {% if t|lower != 'none' and t|lower != 'unknown' and t|lower != 'unavailable' and t|lower != 'null' and t|float is number and t|float > 0 %}
        {{ utcnow().timestamp() - t|float }}
      {% else %}null{% endif %}
    velocity: >-
      {% set d = movement %}
      {% if d|lower != 'null' and d|int is number and d|int < 40075 %}
        {% set t = interval %}
        {% if t|lower != 'null' and t|float is number and t|float > 0 %}
          {{- '%0.2f'|format(d|float/t|float) -}}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ is_state('input_select.motion_log_level','debug') }}
          sequence:
            - alias: 'debug: person_detected_previous'
              service: persistent_notification.create
              data_template:
                title: >-
                  DEBUG: Person detection
                notification_id: >-
                  {{ 'person_detected_previous_' + id }}
                message: >-
                  Sensor: {{ state_attr('sensor.motion_person_detected','sensor') -}}; prior: {{ state_attr('sensor.motion_person_detected','prior') -}}; GPS: {{ latitude,longitude -}}; movement: {{ movement -}}; velocity: {{ velocity }}
    - alias: 'camera and location good?'
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ id|lower != 'null' and latitude|lower != 'null' and longitude|lower != 'null' }}
    - alias: 'set sensor.motion_person_detected_previous'
      service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_detected_previous
        id: >-
          {{ id }}
        latitude: >-
          {{ latitude }}
        longitude: >-
          {{ longitude }}
        movement: >-
          {{ movement }}
        interval: >-
          {{ interval }}
        velocity: >-
          {{ velocity }}
        timestamp: >-
          {{ utcnow().timestamp() }}
        confidence: >-
          {{ state_attr('sensor.motion_person_detected','confidence') }}
        gps_accuracy: >-
          {{ state_attr('sensor.motion_person_detected','gps_accuracy') }}
        distance: >-
          {{ state_attr('sensor.motion_person_detected','distance') }}
        sensor: >-
          {{ state_attr('sensor.motion_person_detected','sensor') }}
        zone: >-
          {{ state_attr('sensor.motion_person_detected','zone') }}
        state: >-
          {{ states('sensor.motion_person_detected') }}

- id: motion_person_detected
  alias: motion_person_detected
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_cameras_detected_person
      to: 'on'
  variables:
    id: >-
      {% set s = state_attr('binary_sensor.motion_cameras_detected_person','id') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    sensor: >-
      {% set s = state_attr('binary_sensor.motion_cameras_detected_person','sensor') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    latitude: >-
      {% set s = state_attr(sensor,'latitude') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    longitude: >-
      {% set s = state_attr(sensor,'longitude') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    distance: >-
      {% if latitude|lower != 'null' and longitude|lower != 'null' %}
        {% set s = distance('zone.home', latitude, longitude) %}
        {% if s|lower != 'none' and s|lower != 'null' and s|lower != 'unknown' and s|lower != 'unavailable' and s|int is number and s|int < 40075 %}
          {{- '%0.2f'|format(s|float * 1000) -}}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    gps: >-
      {% if latitude|lower != 'null' and longitude|lower != 'null' %}
        {% set s = state_attr('zone.home','radius') %}
        {% if s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|int > 0 %}
          {{ latitude|lower != 'null' and longitude|lower != 'null' and distance|int < s|int }}
        {% else %}null{% endif %}
      {% else %}null{% endif %}
    ago: >-
      {% set s = state_attr(sensor,'date') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ utcnow().timestamp() - s|float }}
      {% else %}null{% endif %}
    area: >-
      {% set s = area_name(sensor) %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    probability: >-
      {{ state_attr('binary_sensor.motion_person_detected_active','probability') }}
    gps_accuracy: >-
      {% set s = state_attr(sensor,'gps_accuracy') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {{ s }}
      {% else %}null{% endif %}
    results: >-
      {% set s = state_attr(sensor,'results') %}
      {% if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' %}
        {% set option = states('input_select.motion_detect_person') %}
        {% if option|lower == 'all' or option|lower == 'person' %}
          {% set options = state_attr('input_select.motion_detect_person','options') %}
          {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
            {% set l = results|selectattr('entity','in',options)|list %}
          {% endif %}
        {% else %}
          {% set options = state_attr('input_select.motion_detect_person','options') %}
          {% if options|lower != 'none' and options|lower != 'unknown' and options|length > 0 %}
            {% set l = results|selectattr('entity','==',option)|list %}
          {% endif %}
        {% endif %}
      {% endif %}
      {% if l is defined and l is iterable and l|count > 0 %}
          {{ l }}
      {% else %}null{% endif %}
    confidence: >-
      {% if results|lower != 'null' and results is iterable and results|count > 0 %}
        {% set l = results|map(attribute='confidence')|list %}
        {% if l is iterable and l|count > 0 %}
          {% set p = l|max %}
        {% endif %}
      {% endif %}
      {% if p is defined %}
        {{ '%0.2f'|format(p|float) }}
      {% else %}null{% endif %}
  action:
    - alias: 'choose: notify on id or gps'
      choose:
        - alias: 'condition: id null or gps bad?'
          conditions:
            - condition: template
              value_template: >
                {{ id|lower == 'null' or gps|lower != 'true' }}
          sequence:
            - alias: 'notify invalid id or gps'
              service: persistent_notification.create
              data_template:
                title: >-
                  NOTICE: Detected location
                notification_id: >-
                  {{ sensor|string + '_person_detected' }}
                message: >-
                  Person detection camera id or location invalid; id: {{ id -}}; GPS: {{ latitude,longitude -}}; distance: {{ distance }}
    - alias: 'choose: id and/or gps'
      choose:
        - alias: 'conditions: id good and gps bad'
          conditions:
            - condition: template
              value_template: >-
                {{ id|lower != 'null' and gps|lower != 'true' }}
          sequence:
            - alias: 'set sensor.motion_person_detected'
              service: python_script.set_state
              data_template:
                entity_id: sensor.motion_person_detected
                sensor: >-
                  {{ sensor }}
                prior: >-
                  {{ state_attr('sensor.motion_person_detected_previous','sensor') }}
                id: >-
                  {{ id }}
                latitude: >-
                  {{ state_attr('zone.home','latitude') }}
                longitude: >-
                  {{ state_attr('zone.home','longitude') }}
                gps_accuracy: >-
                  {{ gps_accuracy }}
                results: >-
                  {{ results }}
                confidence: >-
                  {{ confidence }}
                ago: >-
                  {{ '%0.1f'|format(ago|float) }}
                area: >-
                  {{ area }}
                probability: >-
                  {{ probability }}
                state: >-
                  {{ id }}
        - alias: 'conditions: id good and gps good'
          conditions:
            - condition: template
              value_template: >-
                {{ id|lower != 'null' and gps|lower == 'true' }}
          sequence:
            - alias: 'set sensor.motion_person_detected'
              service: python_script.set_state
              data_template:
                entity_id: sensor.motion_person_detected
                sensor: >-
                  {{ sensor }}
                prior: >-
                  {{ state_attr('sensor.motion_person_detected_previous','sensor') }}
                id: >-
                  {{ id }}
                results: >-
                  {{ results }}
                confidence: >-
                  {{ confidence }}
                latitude: >-
                  {{ latitude }}
                longitude: >-
                  {{ longitude }}
                gps_accuracy: >-
                  {{ gps_accuracy }}
                distance: >-
                  {{ distance }}
                ago: >-
                  {{ '%0.1f'|format(ago|float) }}
                area: >-
                  {{ area }}
                probability: >-
                  {{ probability }}
                state: >-
                  {{ id }}

- id: motion_person_detected_off
  alias: motion_person_detected_off
  initial_state: off
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_detected_person
      to: 'off'
  action:
    - service: python_script.set_state
      data_template:
        entity_id: sensor.motion_person_detected
        state: >-
          {{ 'none' }}
