###
# homeassistant/automation/motion/person.yaml
###

- id: motion_person_device_selected
  alias: motion_person_device_selected
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.motion_person_device
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('input_select.motion_person_device') %}
          {{- s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' -}}
      - condition: template
        value_template: >-
          {% set s = state_attr('sensor.motion_person','sensor') %}
          {{- s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' -}}
  action:
    - alias: 'set person.sensor source'
      service: python_script.set_state
      data_template:
        entity_id: >-
          {{ state_attr('sensor.motion_person','sensor') }}
        source: >-
          {{ 'device_tracker.' + states('input_select.motion_person_device') }}
    - alias: 'set input_text.motion_person_device'
      service: input_text.set_value
      target:
        entity_id: 'input_text.motion_person_device'
      data:
        value: >-
          {{ states('input_select.motion_person_device') }}
    - alias: 'set motion_person_device'
      service: homeassistant.update_entity
      data_template:
        entity_id: sensor.motion_person_device

- id: motion_person_device_update
  alias: motion_person_device_update
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.motion_person
      to:
    - platform: state
      entity_id: sensor.motion_person
      attribute: 'device'
  variables:
    device_tracker: >-
      {% set s = states('sensor.motion_person') %}
      {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'none' and s|lower|length > 0 %}
        {% set s = state_attr('sensor.motion_person','device') %}
        {% if s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'none' and s|lower|length > 0 %}
          {{ s }}
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif -%}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{- device_tracker|lower != 'none' -}}
  action:
    - alias: 'update motion_person_device'
      service: homeassistant.update_entity
      data_template:
        entity_id: >-
          {{ device_tracker }}

- id: motion_person_device_restored
  alias: motion_person_device_restored
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: sensor.motion_person_device
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_person_device') %}
          {{- s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'none' and s|lower != 'auto' -}}
  action:
    - service: input_text.set_value
      target:
        entity_id: input_text.motion_person_device
      data:
        value: >-
          {{ states('input_select.motion_person_device') }}

- id: motion_person_device_input_select_watchdog
  alias: motion_person_device_input_select_watchdog
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: /5
  action:
    - service: automation.trigger
      entity_id: automation.motion_person_device_input_select

- id: motion_person_device_input_select
  alias: motion_person_device_input_select
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: states.device_tracker
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {%- for state in states.device_tracker if state.attributes is iterable and 'source_type' in state.attributes and state.attributes.source_type|string == 'gps' -%}
            {%- if loop.first -%}true{%- endif -%}
          {% else %}false{%- endfor -%}
  variables:
    old: >-
      {% set old = state_attr('input_select.motion_person_device','options') -%}
      {{- old }}
    new: >-
      {% set id = states('input_text.motion_person') %}
      ["none"{%- for s in states.device_tracker -%}
        {%- set l = loop -%}
        {%- for i in states.person if s.entity_id == i.attributes.source and i.attributes.id == id -%}
          {%- if loop.first or l.first -%},{%- endif -%} 
          "{{- s.entity_id|replace('device_tracker.','') -}}"
          {%- if not loop.last and not l.last -%},{%- endif -%} 
        {%- endfor -%}
      {%- endfor -%}]
    default: >-
      {% set id = states('input_text.motion_person') %}
      {%- for s in states.device_tracker -%}
        {%- set l = loop -%}
        {%- for i in states.person if s.entity_id == i.attributes.source and i.attributes.id == id -%}
          {%- if loop.first or l.last -%}{{ s.entity_id|replace('device_tracker.','') }}{%- endif -%}
        {%- endfor -%}
      {%- endfor -%}
  action:
    - variables:
        options: >-
          {{ (['none'] + new|reject('none')|list)|sort|unique|list }}
    - condition: template
      value_template: >-
        {{- options != old }}
    - service: input_select.set_options
      target:
        entity_id: input_select.motion_person_device
      data_template:
        options: >-
          {{ options }}
    - service: input_select.select_option
      data_template:
        entity_id: input_select.motion_person_device
        option: >-
          {{ default }}
