###
# homeassistant/automation/motion/person.yaml
###

- id: motion_person_selected
  alias: motion_person_selected
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.motion_person
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('input_select.motion_person') %}
          {{- s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -}}
  action:
    - alias: 'set input_text.motion_person'
      service: input_text.set_value
      target:
        entity_id: 'input_text.motion_person'
      data:
        value: >-
          {{ states('input_select.motion_person') }}
    - alias: 'set motion_person'
      service: homeassistant.update_entity
      data_template:
        entity_id: sensor.motion_person

- id: motion_person_select_set_options_watchdog
  alias: motion_person_select_set_options_watchdog
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: /5
  action:
    - service: automation.trigger
      entity_id: automation.motion_person_select_set_options

- id: motion_person_select_set_options
  alias: motion_person_select_set_options
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.motion_domain_person_status
      attribute: 'ids'
  variables:
    person: >-
      {% set person = states('sensor.motion_person') -%}
      {{- person }}
    old: >-
      {% set old = state_attr('input_select.motion_person','options') -%}
      {{- old }}
    new: >-
      {% set s = state_attr('sensor.motion_domain_person_status','ids') -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {%- for i in s -%}
          {%- if loop.first -%}[{%- else -%},{%- endif -%}
          '{{- i -}}'
          {%- if loop.last -%}]{%- endif -%}
        {%- endfor -%}
      {%- else -%}[]{%- endif %}
    selected: >-
      {% set selected = states('input_select.motion_person') -%}
      {{- selected }}
    specified: >-
      {% set specified = states('input_text.motion_person') -%}
      {{- specified }}
    current: >-
      {% set current = none -%}
      {%- set s = states('sensor.motion_person_selected') -%}
      {%- if s|lower != 'none' and s|string|length > 0 -%}
        {%- set current = s -%}
      {%- endif -%}
      {{- current }}
    default: >-
      {% set s = selected -%}
      {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
        {%- set p = s -%} 
      {%- elif s|lower == 'none' -%}
        {%- set s = person -%}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|lower != 'auto' -%}
          {%- set p = s -%}
        {%- endif -%}
        {%- if not p is defined -%}
          {%- set s = specified -%}
          {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
            {%- set p = s -%}
          {%- endif -%}
        {%- endif -%}
      {%- endif -%}
      {%- if p is defined -%}
        {{ p }}
      {%- else -%}
        {%- set s = states('sensor.motion_person_calculator') -%}
        {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|string|length > 0 -%}
          {{- s -}} 
        {%- else -%}none{%- endif -%}
      {%- endif %}
  condition:
    condition: and
    conditions:
  action:
    - variables:
        options: >-
          {%- if not new is string and new is iterable -%}
            {{ (['none'] + new)|sort|unique|list }}
          {%- else -%}['none']{%- endif -%}
    - condition: template
      value_template: >-
        {{- options != old }}
    - service: input_select.set_options
      target:
        entity_id: input_select.motion_person
      data_template:
        options: >-
          {{ options }}
    - condition: template
      value_template: >-
        {{- default in state_attr('input_select.motion_person','options') }}
    - service: input_select.select_option
      data_template:
        entity_id: input_select.motion_person
        option: >-
          {{ default }}

# {
#     "event_type": "string",
#     "data": {},
#     "origin": "(LOCAL|)",
#     "time_fired": "2020-09-23T12:12:10.223091+00:00",
#     "context": {
#         "id": "019d5966fd9611ea973c0b2e05cd396a",
#         "parent_id": null,
#         "user_id": null
#     }
# }

# {
#   "sourceDeviceName": "Robbie's iPhone 7 Plus",
#   "sourceDeviceID": "robbies_iphone_7_plus",
#   "actionName": "SOUND_ALARM",
#   "sourceDevicePushId": "ab9f02fe-6ac6-47b8-adeb-5dd87b489156",
#   "textInput": "",
#   "action_data": {}
# }

- id: motion_smartphone_alert_notify
  alias: motion_smartphone_alert_notify
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.event.data.categoryName|lower == 'motion_smartphone_alert' }}
      - condition: template
        value_template: >
          {{ trigger.event.data.actionName|lower == 'motion_smartphone_alert_notify' }}
  variables:
    speakers: >-
      {%- set s = states('sensor.motion_media_player_selected') -%}
      {%- if s|lower == 'all' -%}
        {%- for state in states.media_player if state.attributes.source|lower|length == 0 -%}
          {%- if loop.first -%}[{%- else -%},{%- endif -%}
          "{{- state.entity_id -}}"
          {%- if loop.last -%}]{%- endif -%}
        {%- endfor -%}
      {%- else -%}
        ["{{- s -}}"]
      {%- endif -%}
  action:
    - service: persistent_notification.create
      alias: 'alert_notify create persistent notification'
      data_template:
        title: 'ALERT: Notify from {{ trigger.event.data.sourceDeviceName  }}'
        notification_id: >-
          {{- 'motion_smartphone_alert_notify_' + trigger.event.data.sourceDeviceID|string -}}
        message: >-
          {%- set ted = trigger.event.data -%}
          {%- set sdn = ted.sourceDeviceName -%}
          {%- set ad = ted.action_data -%}
          {%- set d = ad.device -%}
          {%- set c = ad.camera -%}
          {%- set e = ad.event -%}
          {%- set t = ad.entity -%}
          {%- set i = ad.image -%}
          {{- '![](' + i + ')' }}
          Alert notification from {{ sdn -}}: {{ d -}}/{{- c -}}/{{- e -}}
          {{- '[![](https://img.shields.io/badge/CONFIRM-red.svg)]('
            + states('sensor.motion_detected_person_api')
            + '/cgi-bin/alert.yes?entity=' + t|string
            + '&camera=' + c|string
            + '&event=' + e|string
            + ')' -}}
          {{- '[![](https://img.shields.io/badge/DISMISS-green.svg)]('
            + states('sensor.motion_detected_person_api')
            + '/cgi-bin/alert.no?entity=' + t|string
            + '&camera=' + c|string
            + '&event=' + e|string
            + ')' -}}
    - condition: and
      conditions:
        - condition: template
          value_template: >
            {{ not is_state('input_select.motion_media_player_name','none') and not is_state('input_select.motion_media_player_name',null) }}
    - service: notify.alexa_media
      alias: 'alert_notify alexa_media'
      data_template:
        target: >-
          {%- set s = states('sensor.motion_media_player_selected') -%}
          {%- if s|lower == 'all' -%}
            {%- for state in states.media_player if state.attributes.source|lower|length > 0 -%}
              {%- if loop.first -%}[{%- else -%},{%- endif -%}
              "{{- state.entity_id -}}"
              {%- if loop.last -%}]{%- endif -%}
            {%- endfor -%}
          {%- else -%}
            ["{{- s -}}"]
          {%- endif -%}
        data:
          type: announce
          method: speak
        message: >-
          {%- set ted = trigger.event.data -%}
          {%- set sdn = ted.sourceDeviceName -%}
          {%- set ad = ted.action_data -%}
          {%- set d = ad.device -%}
          {%- set c = ad.camera -%}
          {%- set e = ad.event -%}
          {%- set t = ad.entity -%}
          Alexa alert: {{ t }} at camera {{ c }} from {{ sdn }}
    - alias: "speak all non-alexa media_players"
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = speakers[repeat.index - 1]|default('unknown') %}
              {{ s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' and s|string|length > 0 }}
        sequence:
          - alias: "set_state: motion_speaker_selected"
            service: python_script.set_state
            data_template:
              allow_create: true
              entity_id: sensor.motion_speaker_say_selected
              state: >-
                {{ speakers[repeat.index - 1] }}
          - alias: "set_state: motion_speaker_message"
            service: python_script.set_state
            data_template:
              allow_create: true
              entity_id: sensor.motion_speaker_say_message
              state: >-
                {%- set ted = trigger.event.data -%}
                {%- set sdn = ted.sourceDeviceName -%}
                {%- set ad = ted.action_data -%}
                {%- set d = ad.device -%}
                {%- set c = ad.camera -%}
                {%- set e = ad.event -%}
                {%- set t = ad.entity -%}
                Speaker alert: {{ t }} at camera {{ c }} from {{ sdn }}
          - alias: "motion_speaker_say"
            service: automation.trigger
            entity_id: automation.motion_speaker_say_one
          - alias: "wait until complete"
            wait_template: >-
              {% set s = state_attr('automation.motion_speaker_say_one','current') %}
              {{ s is number and s|int(0) == 0 }}

- id: motion_speaker_say_one
  alias: motion_speaker_say_one
  initial_state: 'on'
  trigger: []
  condition: []
  action:
    - service: tts.cloud_say
      alias: 'alert_notify tts.cloud_say'
      data_template:
        entity_id: >-
          {{ states('sensor.motion_speaker_say_selected') }}
        language: en-US
        options:
          gender: female
        message: >-
          {{ states('sensor.motion_speaker_say_message') }}

- id: motion_person_detect_alert_when_away
  alias: motion_person_detect_alert_when_away
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_detected_person
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_detected_person','on') }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_person_home','off') }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.motion_person_detect_alert_when_away','on') }}
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_detected_person_camera') %}
          {{- s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -}}
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_detected_person_camera') %}
          {% set s = states('sensor.motion_' + s + '_camera_detected_person_status') %}
          {{- s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -}}
      - condition: template
        value_template: >
          {%- set s = states('sensor.motion_detected_person_camera') -%}
          {%- set s = states('sensor.motion_' + s + '_detected_person_count') -%}
          {{- s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' and s|int(0) > 0 -}}
  action:
    - condition: template
      value_template: >
        {{ states('sensor.motion_log_level') in state_attr('sensor.motion_log_level','info') }}
    - service: persistent_notification.create
      data_template:
        title: >-
          INFO: {{ states('sensor.motion_detected_person_count') }} person(s) from {{ states('sensor.motion_detected_person_camera') }}
        notification_id: >
          motion_person_alert_when_away-{{- states('sensor.motion_detected_person_camera') -}}
        message: >-
          {%- set c = states('sensor.motion_detected_person_camera') -%}
          {%- set d = states('sensor.motion_detected_person_device') -%}
          {%- set n = states('sensor.motion_' + c + '_detected_person_count') -%}
          {%- set e = states('sensor.motion_' + c + '_detected_person_event') -%}
          {{- '[![]('
             + '/local/images/motion/'
             + c
             + '/detected_person'
             + '.jpg?e='
             + e
             + ')]('
             + '/local/images/motion/'
             + c
             + '/detected_person_animated'
             + '.gif?e='
             + e
             + ')' }}
          Detected {{ n }} person(s)
          for {{ states('sensor.motion_' + c + '_detected_person_elapsed') }} seconds
          at {{ states('sensor.motion_' + c + '_detected_person_when') }}
          {{- '[![](https://img.shields.io/badge/NOTIFY-red.svg)]('
            + states('sensor.motion_detected_person_api')
            + '/cgi-bin/alert.yes?entity=person'
            + '&camera=' + c
            + '&event=' + e
            + ')' -}}
          {{- '[![](https://img.shields.io/badge/DISMISS-green.svg)]('
            + states('sensor.motion_detected_person_api')
            + '/cgi-bin/alert.no?entity=person'
            + '&camera=' + c
            + '&event=' + e
            + ')' -}}
    - condition: and
      conditions:
        - condition: template
          value_template: >
            {{ is_state('input_boolean.motion_notify_smartphone','on') }}
        - condition: template
          value_template: >
            {%- set s = states('sensor.motion_person_device') -%}
            {{ s|lower != 'none' and s|lower != 'unknown' and s|lower != 'null' and s|length > 0 }}
    - service_template: >-
        {%- set s = states('sensor.motion_person_device') -%}
        {{- 'notify.mobile_app_' + s -}}
      data_template:
        title: >-
          {%- set c = states('sensor.motion_detected_person_camera') -%}
          ALERT: {{ states('sensor.motion_' + c + '_detected_person_count') }} person(s)
          from {{ states('sensor.motion_' + c + '_detected_person_camera') -}}
        message: >-
          {%- set c = states('sensor.motion_detected_person_camera') -%}
          Detected {{ states('sensor.motion_' + c + '_detected_person_count') }} person(s)
          for {{ states('sensor.motion_' + c + '_detected_person_elapsed') }} seconds
          at {{ states('sensor.motion_' + c + '_detected_person_when') }}
        data:
          push:
            category: 'motion_smartphone_alert'
            sound:
              name: default
              critical: 1
              volume: 1.0
            url:
              _: >-
                {{- '/lovelace-experimental/' + states('sensor.motion_detected_person_camera') -}}
          action_data:
            device: >-
              {{ states('sensor.motion_detected_person_device') }}
            camera: >-
              {{ states('sensor.motion_detected_person_camera') }}
            event: >-
              {%- set c = states('sensor.motion_detected_person_camera') -%}
              {{- states('sensor.motion_' + c + '_detected_person_event') -}}
            entity: >-
              {{- '["person"]' -}}
            image: >-
              {%- set c = states('sensor.motion_detected_person_camera') -%}
              {%- set e = states('sensor.motion_' + c + '_detected_person_event') -%}
              {{- states('sensor.motion_base_url') + '/local/images/motion/'
                 + c
                 + '/detected_person_animated'
                 + '.gif?e='
                 + e -}}
          attachment:
            hide-thumbnal: false
            content-type: gif
            url: >-
              {%- set c = states('sensor.motion_detected_person_camera') -%}
              {%- set e = states('sensor.motion_' + c + '_detected_person_event') -%}
              {{- states('sensor.motion_base_url') + '/local/images/motion/'
                 + c
                 + '/detected_person_animated'
                 + '.gif?e='
                 + e -}}
