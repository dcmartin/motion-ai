###
# automation/uptimerobot.yaml
###

- id: uptimerobot_feed_update
  alias: uptimerobot_feed_update
  initial_state: 'on'
  mode: restart
  trigger:
    - platform: time_pattern
      minutes: '/15'
    - platform: state
      entity_id: sensor.internet_test
      to: 'True'
    - platform: state
      entity_id: binary_sensor.remote_ui
      to: 'on'
    - platform: state
      entity_id: binary_sensor.uptimerobot_feed
      attribute: 'rssurl'
    - platform: state
      entity_id: binary_sensor.uptimerobot_feed
      to: 'off'
      for:
        seconds: >-
         {{ state_attr('sensor.motion_uptime','wait')|int(300) }}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% set s = state_attr('binary_sensor.uptimerobot_feed','rssurl') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s|lower != 'null' }}
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.uptimerobot_feed

- id: uptimerobot_feed_on
  alias: uptimerobot_feed_on
  initial_state: 'on'
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.uptimerobot_feed
      to: 'on'
  action:
    - alias: 'set binary_sensor.uptimerobot to: on'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.uptimerobot
        online: >-
          {{ utcnow().timestamp() }}
        state: 'on'

- id: uptimerobot_feed_off
  alias: uptimerobot_feed_off
  initial_state: 'on'
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.uptimerobot_feed
      to: 'off'
  action:
    - alias: 'set binary_sensor.uptimerobot to: off'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.uptimerobot
        offline: >-
          {{ utcnow().timestamp() }}
        state: 'off'
