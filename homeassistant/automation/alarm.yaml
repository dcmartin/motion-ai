###
# automation/motion/alarm.yaml
###

- id: motion_alarm_notification_dismiss
  alias: motion_alarm_notification_dismiss
  initial_state: on
  mode: queued
  trigger:
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: >-
          {{ state_attr('binary_sensor.motion_alarm','notification_id') }}

- id: motion_alarm_exist_on
  alias: motion_alarm_exist_on
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_alarm
      to: 'on'
  variables:
    timestamp: >-
      {{- states.binary_sensor.motion_alarm.last_updated|as_timestamp -}}
    when: >-
      {{- timestamp|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') -}}
    status: >-
      {{- states.binary_sensor.motion_alarm.attributes|default(none) -}}
    markdown: >-
      {%- if status|lower != 'none' and 'all' in status -%}
        {%- for i in status.all|sort -%}
          {%- if loop.first -%}<ul>{%- endif -%}
          <li>{{- i|first -}}</li>
          {%- if loop.last -%}</ul>{%- endif -%}
        {%- endfor -%}
      {%- else -%}No existing alarm information{%- endif -%}
    states: >-
      {%- set alarms = state_attr('binary_sensor.motion_device_class','alarms') -%}
      {%- if alarms|lower != 'none' and status|lower != 'none'
            and not alarms is string
            and alarms is iterable
            and alarms|count > 0
            and not status is string
            and 'all' in status -%}
        {%- for i in alarms -%}
        {%- if not loop.first -%},{%- else -%}{{- '{' -}}{%- endif -%}
        "{{- i -}}":{{- status[i]|length > 0 -}}
        {%- if loop.last -%}{{- '}' -}}{%- endif -%}
        {%- endfor -%}
      {%- else -%}none{%- endif %}
    ago: >-
     {%- set alarms = state_attr('binary_sensor.motion_device_class','alarms') -%}
     {%- if alarms|lower != 'none' and status|lower != 'none'
         and not alarms is string
         and alarms is iterable
         and alarms|count > 0
         and not status is string
         and 'all' in status -%}
       {%- set all = status.all -%}
       {%- for i in alarms if status[i]|count > 0 -%}
       {%- if not loop.first -%},{%- else -%}{{- '{' -}}{%- endif -%}
         "{{- i -}}":{{- (status[i]|first)[1] -}}
       {%- if loop.last -%}{{- '}' -}}{%- endif -%}
       {%- endfor -%}
     {%- endif %}
  action:
    - alias: 'set binary_sensor.motion_alarm_exist to: on'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_alarm_exist
        markdown: >-
          {{- markdown -}}
        status: >-
          {{- status -}}
        states: >-
          {{- states -}}
        timestamp: >-
          {{- timestamp -}}
        when: >-
          {{- when -}}
        state: 'on'

- id: motion_alarm_exist_off
  alias: motion_alarm_exist_off
  initial_state: on
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_alarm
      to: 'off'
  action:
    - alias: 'set binary_sensor.motion_alarm_exist to: off'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_alarm_exist
        timestamp_off: >-
          {{ utcnow().timestamp() }}
        state: 'off'
