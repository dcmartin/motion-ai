###
# homeassistant/automation/motion/device_tracker.yaml
###

- id: motion_device_tracker_automation_enable
  alias: motion_device_tracker_automation_enable
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_device_tracker_exist
    to: 'on'
  variables:
    automations: >-
      {% set automations = ['motion_device_tracker_activity_test','motion_device_tracker_activity_notify','motion_device_tracker_activity_dismiss'] %}
      {{ automations }}
  action:
    - alias: 'enable automations for device_tracker'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = automations[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = automations[repeat.index-1] %}
                {{ 'automation.' + s|string }}
          - condition: template
            value_template: >-
              {{ states(automation)|lower == 'off' }}
          - alias: 'enable automation'
            service: automation.turn_on
            data_template:
              entity_id: >-
                {{ automation }}

- id: motion_device_tracker_automation_disable
  alias: motion_device_tracker_automation_disable
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_device_tracker_exist
    to: 'off'
  variables:
    automations: >-
      {% set automations = ['motion_device_tracker_activity_test','motion_device_tracker_activity_notify','motion_device_tracker_activity_dismiss'] %}
      {{ automations }}
  action:
    - alias: 'disable automations for device_tracker'
      repeat:
        while:
          - condition: template
            value_template: >-
              {% set s = automations[repeat.index-1]|default('') %}
              {{ s|string != '' }}
        sequence:
          - variables:
              automation: >-
                {% set s = automations[repeat.index-1] %}
                {{ 'automation.' + s|string }}
          - condition: template
            value_template: >-
              {{ states(automation)|lower == 'on' }}
          - alias: 'disable automation'
            service: automation.turn_off
            data_template:
              entity_id: >-
                {{ automation }}

- id: motion_device_tracker_rescan
  alias: motion_device_tracker_rescan
  mode: restart
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: '/1'
    - platform: homeassistant
      event: start
  variables:
    ids: >-
      {{ state_attr('binary_sensor.motion_device_tracker_exist','ids') }}
    total: >-
      {% set total = 0 -%}
      {%- if ids|lower != 'none' and ids is iterable -%}
        {%- set total = ids|count -%}
      {%- endif -%}
      {{- total }}
    dids: >-
      {%- set device_trackers = states.device_tracker|map(attribute='entity_id')|map('device_id')|list -%}
      {%- set s = state_attr('binary_sensor.motion_device_class','sensor_list')|list + state_attr('binary_sensor.motion_device_class','binary_sensor_list')|list -%}
      [{%- for i in s|sort|unique if i|lower != 'none' and not is_state_attr('binary_sensor.motion_device_' + i|string,'devices','none') -%}
        {%- if not loop.first -%},{%- endif -%}
        {%- set e = 'binary_sensor.motion_device_' + i|string -%}
        {%- set devices = state_attr(e, 'devices') -%}
        {%- for j in devices|map(attribute='did')|list if j|lower != 'none' and j in device_trackers -%}
          {%- if not loop.first -%},{%- endif -%}
          {%- set t = states.person|selectattr('attributes.source', 'defined')|map(attribute='attributes.source')|first|default(none) -%}
          {%- if t|lower != 'none' and j == device_id(t) -%}
            {# should use something else; will not match always, IMHO #}
            {%- set id = 'device_tracker.' + devices|selectattr('did','==',j)|map(attribute='id')|first|lower|replace(' ','_') -%}
            {%- set p = states.person|selectattr('attributes.source', 'defined')|selectattr('attributes.source','==',id)|map(attribute='entity_id')|first -%}
          {%- endif -%} 
          {"class":"{{- i -}}","did":"{{- j -}}","person":"{{- p|default(none)|replace('person.','') -}}"}
        {%- else -%}{{ none }}{%- endfor -%}
      {%- endfor -%}]
    devices: >-
      {%- if dids|lower != 'none' and not dids is string and dids is iterable and dids|count > 0 -%}
       {%- set dids = dids|reject('undefined')|list -%}
        {%- if dids|lower != 'none' and not dids is string and dids is iterable and dids|count > 0 -%}
          {%- set dids = dids|selectattr('did','defined')|list -%}
          {%- if dids|lower != 'none' and not dids is string and dids is iterable and dids|count > 0 -%}
          [{%- for i in dids|map(attribute='did')|sort|unique|list -%}
            {%- if not loop.first -%},{%- endif -%}
            {%- set n = device_attr(i,'name_by_user') -%}
            {%- if n|lower == 'none' -%}
              {%- set n = device_attr(i,'name') -%}
            {%- endif -%}
            {%- set c = dids|selectattr('did','==',i)|map(attribute='class')|list -%}
            {%- set p = dids|selectattr('did','==',i)|map(attribute='person')|first -%}
            {"id":"{{- device_attr(i,'name') -}}","did":"{{- i -}}","friendly_name":"{{- n -}}","manufacturer":"{{- device_attr(i,'manufacturer') -}}","model":"{{- device_attr(i,'model') -}}","sw_version":"{{- device_attr(i,'sw_version') -}}","class":{{- c|default(none) -}},"person":"{{- p|default(none) -}}"}
          {%- endfor -%}]
          {%- else -%}none{%- endif -%}
        {%- else -%}none{%- endif -%}
      {%- else -%}none{%- endif -%}
  action:
    - alias: 'update binary_sensor.motion_device_tracker ids,total,devices'
      service: python_script.set_state
      data_template:
        entity_id: binary_sensor.motion_device_tracker
        ids: >-
          {{ ids }}
        total: >-
          {{ total }}
        devices: >-
          {{ devices }}
        state: >-
          {% if total|int(0) > 0 %}on{% else %}off{% endif %}

## controls

- id: motion_device_tracker_input_select
  alias: motion_device_tracker_input_select
  initial_state: on
  mode: single
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: sensor.motion_domain_device_tracker_count
    - platform: time_pattern
      minutes: /5
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ states('sensor.motion_domain_device_tracker_count')|int(0) > 0 }}
      - condition: template
        value_template: >-
          {{ states('input_select.motion_smartphone_name')|lower == 'all' }}
  action:
    - service: python_script.input_select_set_options
      data_template:
        entity_id: input_select.motion_smartphone_name
        default: all
        options: >-
          {%- set s = states('sensor.motion_device_trackers') -%}
          {%- if s|lower != 'none' and s|lower != 'unknown' and s|lower != 'unavailable' and s|lower != 'null' -%}
            {{- s -}},all
          {%- else -%}all{%- endif -%}

## group

- id: motion_device_tracker_group
  alias: motion_device_tracker_group
  initial_state: on
  mode: single
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: sensor.motion_domain_device_tracker_count
    - platform: time_pattern
      minutes: /5
  condition:
    - condition: template
      value_template: >-
        {{ states('sensor.motion_domain_device_tracker_count')|int(0) > 0 }}
  action:
    - service: python_script.group_set_entities
      data_template:
        entity_id: group.motion_map_entity_list
        entities: >-
          {%- set n = utcnow().timestamp()|int(0) -%}
          {%- for state in states.device_tracker -%}
            {%- set d = state.entity_id|replace('device_tracker.','') -%}
            {%- set e = 'sensor.' + d -%}
            {%- for s in states.sensor if d in s.entity_id and e+'_activity' in s.entity_id
                and (n - as_timestamp(s.last_updated)|int(0)) < 86400
                and (n - as_timestamp(state.last_updated)|int(0)) < 86400 -%}
              device_tracker.{{- s.entity_id|replace('sensor.','')|replace('_activity','') -}},
            {%- endfor -%}
          {%- endfor -%}
