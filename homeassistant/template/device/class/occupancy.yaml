###
# homeassistant/template/device/class/occupancy.yaml
###

- unique_id: motion_device_occupancy_high_spike
  trigger:
    - platform: state
      entity_id: sensor.motion_device_occupancy_1w_max
  sensor:
    - name: 'motion_device_occupancy_high_spike'
      state_class: 'measurement'
      device_class: 'power_factor'
      unit_of_measurement: '%'
      attributes:
        limit: >-
          {% set mean = state_attr('sensor.motion_device_occupancy_max','mean') %}
          {% set stdev = state_attr('sensor.motion_device_occupancy_max','stdev') %}
          {%- if mean|lower != 'none' and mean is number and stdev|lower != 'none' and stdev is number -%}
            {% set max = state_attr('sensor.motion_device_occupancy_max','max') %}
            {% set s = mean|float(0) + stdev|float(0) * states('input_number.motion_device_occupancy_stdev')|float(1) %}
            {%- if s > max|float(s) -%}{{ max }}{%- else -%}{{ s }}{%- endif -%}
          {%- else -%}none{%- endif -%}
        factor: >-
          {% set mean = state_attr('sensor.motion_device_occupancy_max','mean') %}
          {% set stdev = state_attr('sensor.motion_device_occupancy_max','stdev') %}
          {%- if mean|lower != 'none' and mean is number and stdev|lower != 'none' and stdev is number and mean|float(0) > 0 -%}
            {{ (mean|float(0) + stdev|float(0)) / mean|float(1) * 100 }}
          {%- else -%}none{%- endif -%}
        spike: >-
         {{ states.sensor.motion_device_occupancy_max.attributes }}
      state: >-
        {{- state_attr('sensor.motion_device_occupancy','max') -}}

- unique_id: motion_device_occupancy_low_spike
  trigger:
    - platform: state
      entity_id: sensor.motion_device_occupancy_1w_min
  sensor:
    - name: 'motion_device_occupancy_low_spike'
      state_class: 'measurement'
      device_class: 'power_factor'
      unit_of_measurement: '%'
      attributes:
        limit: >-
          {% set mean = state_attr('sensor.motion_device_occupancy_min','mean') %}
          {% set stdev = state_attr('sensor.motion_device_occupancy_min','stdev') %}
          {%- if mean|lower != 'none' and mean is number and stdev|lower != 'none' and stdev is number -%}
            {% set min = state_attr('sensor.motion_device_occupancy_min','min') %}
            {% set s = mean|float(0) + stdev|float(0) * states('input_number.motion_device_occupancy_stdev')|float(1) %}
            {%- if s < min|float(s) -%}{{ min }}{%- else -%}{{ s }}{%- endif -%}
          {%- else -%}none{%- endif -%}
        factor: >-
          {% set mean = state_attr('sensor.motion_device_occupancy_min','mean') %}
          {% set stdev = state_attr('sensor.motion_device_occupancy_min','stdev') %}
          {%- if mean|lower != 'none' and mean is number and stdev|lower != 'none' and stdev is number and mean|float(0) > 0 -%}
            {{ (mean|float(0) - stdev|float(0)) / mean|float(1) * 100 }}
          {%- else -%}none{%- endif -%}
        spike: >-
         {{ states.sensor.motion_device_occupancy_min.attributes }}
      state: >-
        {{- state_attr('sensor.motion_device_occupancy','min') -}}

- unique_id: motion_device_occupancy_alarm
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_occupancy_alarm_exist
  binary_sensor:
    - name: 'motion_device_occupancy_alarm'
      device_class: problem
      attributes:
        status: >-
          {{ '{' -}}
          {%- for i in state_attr('binary_sensor.motion_device_class','alarms') -%}
            {%- if not loop.first -%},{%- endif -%}
            {{- '"' + i|string + '":"' ~ states('binary_sensor.motion_device_occupancy_' + i) ~ '"' -}}
          {%- endfor -%}
          {{- '}' }}
        markdown: >-
          {%- for i in state_attr('binary_sensor.motion_device_class','alarms') if is_state('binary_sensor.motion_device_occupancy_' + i|string,'on') -%}
            {%- if loop.first -%}<ul>{%- endif -%}
            {%- if states('binary_sensor.motion_device_occupancy_' + i|string) -%}
              {%- set s = state_attr('binary_sensor.motion_device_occupancy_' + i|string,'markdown') -%}
               <li>The occupancy alarm is: <b>{{- i|upper -}}</b>{%- if s|lower != 'none' -%}<br>{{- s -}}</br>{%- endif -%}</li>
            {%- endif -%}
            {%- if loop.last -%}</ul>{%- endif -%}
          {%- endfor -%}
      state: >-
        {%- set s = state_attr('binary_sensor.motion_device_class','alarms') -%}
        {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
          {%- for i in s if states('binary_sensor.motion_device_occupancy_' + i)|lower == 'on' -%}
            {%- if loop.first -%}on{%- endif -%}
          {% else %}off{%- endfor -%}
        {%- else -%}unknown{%- endif -%}

- unique_id: motion_device_occupancy_missing
  trigger:
    - platform: 'state'
      entity_id: 'binary_sensor.motion_device_class_missing'
      attribute: 'ids'
  binary_sensor:
    - name: 'motion_device_occupancy_missing'
      device_class: 'problem'
      attributes:
        last: >-
          {% set last = state_attr('binary_sensor.motion_device_occupancy_missing','last') %}
          {% if is_state('binary_sensor.motion_device_occupancy_exist','off') and is_state_attr('binary_sensor.motion_device_occupancy_exist','required','on') %}
            {% set last = utcnow().timestamp() %}
          {% elif not last is defined or last|lower == 'none' %}
            {% set last = none %}
          {% endif %}
          {{ last }}
        responses: >-
          {%- set responses = none -%}
          {%- set s = state_attr('binary_sensor.motion_device_occupancy_missing','actions') -%}
          {%- if s|lower != 'none' and 'responses' in s -%}
            {%- set responses = s.responses -%}
          {%- endif -%}
          {{- responses -}}
        approve: >-
          {%- set actions = none -%}
          {%- set s = state_attr('binary_sensor.motion_device_occupancy_missing','actions') -%}
          {%- if s|lower != 'none' and 'actions' in s -%}
            {%- set actions = s.actions -%}
          {%- endif -%}
          {%- if actions|lower != 'none' and 'approve' in actions -%}
            {{ actions.approve }}
          {%- else -%}none{%- endif -%}
        deny: >-
          {%- set actions = none -%}
          {%- set s = state_attr('binary_sensor.motion_device_occupancy_missing','actions') -%}
          {%- if s|lower != 'none' and 'actions' in s -%}
            {%- set actions = s.actions -%}
          {%- endif -%}
          {%- if actions|lower != 'none' and 'deny' in actions -%}
            {{ actions.deny }}
          {%- else -%}none{%- endif -%}
        wait: >-
          {%- set actions = none -%}
          {%- set s = state_attr('binary_sensor.motion_device_occupancy_missing','actions') -%}
          {%- if s|lower != 'none' and 'actions' in s -%}
            {%- set actions = s.actions -%}
          {%- endif -%}
          {%- if actions|lower != 'none' and 'wait' in actions -%}
            {{ actions.wait }}
          {%- else -%}none{%- endif -%}
        help: >-
          {%- set actions = none -%}
          {%- set s = state_attr('binary_sensor.motion_device_occupancy_missing','actions') -%}
          {%- if s|lower != 'none' and 'actions' in s -%}
            {%- set actions = s.actions -%}
          {%- endif -%}
          {%- if actions|lower != 'none' and 'help' in actions -%}
            {{ actions.help }}
          {%- else -%}none{%- endif -%}
        markdown: >-
          {%- if is_state('binary_sensor.motion_device_occupancy_exist','off') and is_state_attr('binary_sensor.motion_device_occupancy_exist','required','on') -%}
            No occupancy sensors have been found at {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') -}};
            {%- if last|as_datetime|relative_time|lower != 'none' -%} for {{ last|as_datetime|relative_time -}}; {%- endif %}
            please setup the integration by clicking <a href="/config/integrations">here</a>.
          {%- else -%}
            Required occupancy device sensor(s) found.
          {%- endif -%}
      state: >-
        {% set state = 'off' %}
        {% if is_state('binary_sensor.motion_device_occupancy_exist','off') and is_state_attr('binary_sensor.motion_device_occupancy_exist','required','on') %}
          {% set state = 'on' %}
        {% endif %}
        {{ state }}

- unique_id: motion_device_occupancy_count
  trigger:
    - platform: state
      entity_id: sensor.motion_domain_sensor_count
      not_to:
        - 'none'
        - 'unknown'
      for:
        seconds: 30
    - platform: state
      entity_id: sensor.motion_domain_binary_sensor_count
      not_to:
        - 'none'
        - 'unknown'
      for:
        seconds: 30
  sensor:
    - name: 'motion_device_occupancy_count'
      state_class: 'measurement'
      device_class: 'power_factor'
      unit_of_measurement: '%'
      state: >-
        {{ (states.sensor|list + states.binary_sensor|list)|rejectattr('entity_id','search','.motion_')|map(attribute='attributes.device_class')|select('defined')|select('==','occupancy')|list|count }}

