###
# homeassistant/template/device/class/temperature.yaml
###

- unique_id: motion_device_temperature_max_spike
  trigger:
    - platform: state
      entity_id: sensor.motion_device_temperature_1w_max
  binary_sensor:
    - name: 'motion_device_temperature_max_spike'
      device_class: 'problem'
      attributes:
        max: >-
         {{ states.sensor.motion_device_temperature_max.attributes }}
      state: >-
        {% set now = states('sensor.motion_device_temperature_max') %}
        {% set mean = states('sensor.motion_device_temperature_max_1w_mean') %}
        {% set max = states('sensor.motion_device_temperature_max_1w_max') %}
        {% set stdev = states('sensor.motion_device_temperature_max_1w_stdev') %}
        {{ now|lower != 'unknown' and now|lower != 'null' and now|lower != 'none'
           and mean|lower != 'unknown' and mean|lower != 'null'and mean|lower != 'none'
           and max|lower != 'unknown' and max|lower != 'null' and max|lower != 'none'
           and stdev|lower != 'unknown' and stdev|lower != 'null' and stdev|lower != 'none'
           and ( now|float(0.0) > (mean|float(0.0) + stdev|float(0.0)) or now|float(0.0) > (max|float(0.0) - stdev|float(0.0)) ) }}

- unique_id: motion_device_temperature_min_spike
  trigger:
    - platform: state
      entity_id: sensor.motion_device_temperature_1w_min
  binary_sensor:
    - name: 'motion_device_temperature_min_spike'
      device_class: 'problem'
      attributes:
        max: >-
         {{ states.sensor.motion_device_temperature_min.attributes }}
      state: >-
        {% set now = states('sensor.motion_device_temperature_min') %}
        {% set mean = states('sensor.motion_device_temperature_min_1w_mean') %}
        {% set max = states('sensor.motion_device_temperature_min_1w_max') %}
        {% set stdev = states('sensor.motion_device_temperature_min_1w_stdev') %}
        {{ now|lower != 'unknown' and now|lower != 'null' and now|lower != 'none'
           and mean|lower != 'unknown' and mean|lower != 'null'and mean|lower != 'none'
           and max|lower != 'unknown' and max|lower != 'null' and max|lower != 'none'
           and stdev|lower != 'unknown' and stdev|lower != 'null' and stdev|lower != 'none'
           and ( now|float(0.0) > (mean|float(0.0) + stdev|float(0.0)) or now|float(0.0) > (max|float(0.0) - stdev|float(0.0)) ) }}

- unique_id: motion_device_temperature_alarm
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_temperature_alarm_exist
  binary_sensor:
    - name: 'motion_device_temperature_alarm'
      device_class: problem
      attributes:
        status: >-
          {{ '{' -}}
          {%- for i in state_attr('binary_sensor.motion_device_class','alarms') -%}
            {%- if not loop.first -%},{%- endif -%}
            {{- '"' + i|string + '":"' ~ states('binary_sensor.motion_device_temperature_' + i) ~ '"' -}}
          {%- endfor -%}
          {{- '}' }}
        markdown: >-
          {%- for i in state_attr('binary_sensor.motion_device_class','alarms') if is_state('binary_sensor.motion_device_temperature_' + i|string,'on') -%}
            {%- if loop.first -%}<ul>{%- endif -%}
            {%- if states('binary_sensor.motion_device_temperature_' + i|string) -%}
               <li>The temperature alarm is: <b>{{- i|upper -}}</b><br>{{- state_attr('binary_sensor.motion_device_temperature_' + i|string,'markdown') -}}</br></li>
            {%- endif -%}
            {%- if loop.last -%}</ul>{%- endif -%}
          {%- endfor -%}
      state: >-
        {%- set s = state_attr('binary_sensor.motion_device_class','alarms') -%}
        {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
          {%- for i in s if states('binary_sensor.motion_device_temperature_' + i)|lower == 'on' -%}
            {%- if loop.first -%}on{%- endif -%}
          {% else %}off{%- endfor -%}
        {%- else -%}unknown{%- endif -%}
