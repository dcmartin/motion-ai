###
# homeassistant/template/device/class/problem.yaml
###

- unique_id: motion_device_problem_high_spike
  trigger:
    - platform: state
      entity_id: sensor.motion_device_problem_1w_max
  sensor:
    - name: 'motion_device_problem_high_spike'
      state_class: 'measurement'
      device_class: 'power_factor'
      unit_of_measurement: '%'
      attributes:
        limit: >-
          {% set mean = states('sensor.motion_device_problem_max','mean') %}
          {% set stdev = states('sensor.motion_device_problem_max','stdev') %}
          {%- if mean|lower != 'none' and mean is number and stdev|lower != 'none' and stdev is number -%}
            {{ mean|float(0) + stdev|float(0) }}
          {%- else -%}none{%- endif -%}
        spike: >-
         {{ states.sensor.motion_device_problem_max.attributes }}
      state: >-
        {% set mean = state_attr('sensor.motion_device_problem_max','mean') %}
        {% set stdev = state_attr('sensor.motion_device_problem_max','stdev') %}
        {%- if mean|lower != 'none' and mean is number and stdev|lower != 'none' and stdev is number -%}
          {{ (mean|float(0) + stdev|float(0)) / mean|float(1) * 100 }}
        {%- else -%}none{%- endif -%}

- unique_id: motion_device_problem_low_spike
  trigger:
    - platform: state
      entity_id: sensor.motion_device_problem_1w_min
  sensor:
    - name: 'motion_device_problem_low_spike'
      state_class: 'measurement'
      device_class: 'power_factor'
      unit_of_measurement: '%'
      attributes:
        limit: >-
          {% set mean = state_attr('sensor.motion_device_problem_min','mean') %}
          {% set stdev = state_attr('sensor.motion_device_problem_min','stdev') %}
          {%- if mean|lower != 'none' and mean is number and stdev|lower != 'none' and stdev is number -%}
            {{ mean|float(0) - stdev|float(0) }}
          {%- else -%}none{%- endif -%}
        spike: >-
         {{ states.sensor.motion_device_problem_min.attributes }}
      state: >-
        {% set mean = state_attr('sensor.motion_device_problem_min','mean') %}
        {% set stdev = state_attr('sensor.motion_device_problem_min','stdev') %}
        {%- if mean|lower != 'none' and mean is number and stdev|lower != 'none' and stdev is number -%}
          {{ (mean|float(0) - stdev|float(0)) / mean|float(1) * 100 }}
        {%- else -%}none{%- endif -%}

- unique_id: motion_device_problem_alarm
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_device_problem_alarm_exist
  binary_sensor:
    - name: 'motion_device_problem_alarm'
      device_class: problem
      attributes:
        status: >-
          {{ '{' -}}
          {%- for i in state_attr('binary_sensor.motion_device_class','alarms') -%}
            {%- if not loop.first -%},{%- endif -%}
            {{- '"' + i|string + '":"' ~ states('binary_sensor.motion_device_problem_' + i) ~ '"' -}}
          {%- endfor -%}
          {{- '}' }}
        markdown: >-
          {%- for i in state_attr('binary_sensor.motion_device_class','alarms') if is_state('binary_sensor.motion_device_problem_' + i|string,'on') -%}
            {%- if loop.first -%}<ul>{%- endif -%}
            {%- if states('binary_sensor.motion_device_problem_' + i|string) -%}
              {%- set s = state_attr('binary_sensor.motion_device_problem_' + i|string,'markdown') -%}
               <li>The problem alarm is: <b>{{- i|upper -}}</b>{%- if s|lower != 'none' -%}<br>{{- s -}}</br>{%- endif -%}</li>
            {%- endif -%}
            {%- if loop.last -%}</ul>{%- endif -%}
          {%- endfor -%}
      state: >-
        {%- set s = state_attr('binary_sensor.motion_device_class','alarms') -%}
        {%- if s|lower != 'none' and not s is string and s is iterable and s|count > 0 -%}
          {%- for i in s if states('binary_sensor.motion_device_problem_' + i)|lower == 'on' -%}
            {%- if loop.first -%}on{%- endif -%}
          {% else %}off{%- endfor -%}
        {%- else -%}unknown{%- endif -%}
