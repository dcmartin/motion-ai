###
# homeassistant/binary_sensor/device/class_found.yaml
###

- platform: template
  sensors:
    motion_device_class_found_exist:
      attribute_templates:
        approve: >-
          {%- set approve = {'title':'Dismiss all','icon':'mdi:bell-sleep','symbol':'sfsymbols:hand.thumbsup','trigger':'automation.motion_device_class_found_dismiss_all'} -%}
          {{ approve }}
        deny: >-
          {%- set deny = {'title':'Turn off','icon':'mdi:bell-off','symbol':'sfsymbols:hand.thumbsdown.fill'} -%}
          {{ deny }}
        wait: >-
          {%- set wait = {'title':'Remind me','icon':'mdi:reminder','symbol':'sfsymbols:timer'} -%}
          {{ wait }}
        help: >-
          {%- set p = state_attr('sensor.motion_role_primary','friendly_name') -%}
          {%- set help = {'title':'Notify ' + p,'icon':'mdi:message-alert','symbol':'sfsymbols:message'} -%}
          {{ help }}
        responses: >-
          {%- set responses = ['approve','deny','wait','help'] -%}
          {{ responses }}
        actions: >-
          {%- set id = state_attr('binary_sensor.motion_device_class_found_exist','id') -%}
          {%- set approve = state_attr('binary_sensor.motion_device_class_found_exist','approve') -%}
          {%- set deny = state_attr('binary_sensor.motion_device_class_found_exist','deny') -%}
          {%- set wait = state_attr('binary_sensor.motion_device_class_found_exist','wait') -%}
          {%- set help = state_attr('binary_sensor.motion_device_class_found_exist','help') -%}
          {%- set group = state_attr('binary_sensor.motion_device_class_found_exist','group') -%}
          {%- set interval = state_attr('binary_sensor.motion_device_class_found_exist','interval') -%}
          {%- set responses = state_attr('binary_sensor.motion_device_class_found_exist','responses') -%}
          {%- set p = state_attr('sensor.motion_role_primary','friendly_name') -%}
          {%- set a = [
            {'id':'approve','action': id|string + '-approve','icon': approve.icon|default('mdi:cancel')|string,'symbol': approve.symbol|default('')|string,'title': approve.title|default('')|string,'destructive':false,'trigger': approve.trigger|default('none')},
            {'id':'deny','action': id|string + '-deny','icon': deny.icon|default('mdi:cancel')|string,'symbol': deny.symbol|default('')|string,'title': deny.title|default('')|string,'destructive':true,'trigger': deny.trigger|default('none')},
            {'id':'wait','action': id|string + '-wait','icon': wait.icon|default('mdi:cancel')|string,'symbol': wait.symbol|default('')|string,'title': wait.title|default('')|string,'destructive':false,'trigger': wait.trigger|default('none')},
            {'id':'help','action': id|string + '-help','icon': help.icon|default('mdi:cancel')|string,'symbol': help.symbol|default('')|string,'title': help.title|default('')|string,'destructive':false,'trigger': help.trigger|default('none')}
            ] -%}
          {"id":"{{- id -}}","group":"{{- group -}}","interval":{{- interval -}},"responses":{{- responses -}},"primary":"{{- p -}}","actions":{{ a }}}
      value_template: >-
        {{ is_state('binary_sensor.motion_device_class_found','on') }}
    motion_device_class_found:
      friendly_name: 'No found devices'
      device_class: 'problem'
      icon_template: 'mdi:cancel'
      attribute_templates:
        ids: >-
          {% set s = state_attr('binary_sensor.motion_device_class','found') %}
          {% if s|lower != 'none' and not s is string and s is iterable %}
            {{ s|list }}
          {% else %}none{% endif %}
        count: >-
          {% set s = state_attr('binary_sensor.motion_device_class','found') %}
          {% if s|lower != 'none' and not s is string and s is iterable %}
            {{ s|count }}
          {% else %}none{% endif %}
        markdown: >-
          {% set s = state_attr('binary_sensor.motion_device_class','found') %}
          {% if s|lower != 'none' and not s is string and s is iterable and s|count > 0 %}
            <h2>Found <a href="/notify-devices/">devices</a></h2>
            {%- for i in s %}
              {%- if loop.first -%}<ol>{%- endif -%}
              <li><a href="/notify-devices/{{- i -}}">{{- i|upper -}}</a></li>
              {%- if loop.last -%}</ol>{%- endif -%}
            {%- endfor -%}
          {%- else -%}
            <h2>No found devices</h2>
          {%- endif %}
          <i>Last updated</i>: {{ utcnow().timestamp()|timestamp_custom("%a %b %d %I:%M %p %Z",true,'unknown') }}
      value_template: >-
        {% set s = state_attr('binary_sensor.motion_device_class','found') %}
        {% if s|lower != 'none' and not s is string and s is iterable %}
          {{ s|list|count > 0 }}
        {% else %}unknown{% endif %}
